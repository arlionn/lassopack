{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}C:\Users\ecomes\Documents\GitHub\lassopack\lassopack_v141\cs_cvlasso.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}23 Feb 2021, 16:44:08
{txt}r; t=0.02 16:44:08

{com}. about

{txt}Stata/SE 16.1 for Windows (64-bit x86-64)
Revision 30 Jun 2020
Copyright 1985-2019 StataCorp LLC

Total physical memory:     {res}  16.00 GB
{txt}Available physical memory: {res}   5.55 GB

{txt}Stata license: {res}5-user network perpetual
{txt}Serial number: {res}401606228165
  {txt}Licensed to: {res}Mark Schaffer
               Heriot-Watt University
{txt}r; t=0.01 16:44:08

{com}. which cvlasso
{txt}.\cvlasso.ado
{res}*! cvlasso 1.0.12 06feb2021
*! lassopack package 1.4.1
*! authors aa/ms
{txt}r; t=0.00 16:44:08

{com}. which lasso2
{txt}.\lasso2.ado
{res}*! lasso2 1.0.13 02feb2021
*! lassopack package 1.4.1
*! authors aa/ms
{txt}r; t=0.00 16:44:08

{com}. which lasso2_p
{txt}.\lasso2_p.ado
{res}*! lasso2_p 1.0.06 14oct2019
*! lassopack package 1.4.1
*! authors aa/ms
{txt}r; t=0.00 16:44:08

{com}. which lassoutils
{txt}.\lassoutils.ado
{res}*! lassoutils 1.2.05 07feb2021
*! lassopack package 1.4.1
*! authors aa/cbh/ms
{txt}r; t=0.01 16:44:08

{com}. 
. * data source
. global prostate prostate.data
{txt}r; t=0.00 16:44:08

{com}. global prostate https://web.stanford.edu/~hastie/ElemStatLearn/datasets/prostate.data
{txt}r; t=0.00 16:44:08

{com}. 
. * program to compare two matrices in terms of avg abs deviation
. cap program drop comparemat
{txt}r; t=0.00 16:44:08

{com}. program define comparemat , rclass
{txt}  1{com}.         syntax anything [, tol(real 10e-3)] 
{txt}  2{com}.         local A         : word 1 of `0'
{txt}  3{com}.         local B         : word 2 of `0'
{txt}  4{com}.         tempname Amat Bmat
{txt}  5{com}.         mat `Amat' = `A'
{txt}  6{com}.         mat `Bmat' = `B'
{txt}  7{com}.         local diff=mreldif(`Amat',`Bmat')
{txt}  8{com}.         di as text "mreldif=`diff'. tolerance = `tol'"
{txt}  9{com}.         mat list `Amat'
{txt} 10{com}.         mat list `Bmat'
{txt} 11{com}.         return scalar mreldif = `diff'
{txt} 12{com}.         assert `diff'<`tol'
{txt} 13{com}. end
{txt}r; t=0.00 16:44:08

{com}. 
. 
. set seed 123456
{txt}r; t=0.00 16:44:08

{com}. 
. ********************************************************************************
. *** compare with glmnet                                                                  ***
. ********************************************************************************
. 
. * update with cvlasso 1.0.12 - exact replication using auto dataset
. * note that cv.glmnet needs to be called twice, the second time with an
. * explicit list of lambdas, in order to override the default interpolation
. /*
> auto <- haven::read_dta("http://www.stata-press.com/data/r9/auto.dta")
> auto <- drop_na(auto)
> n <- nrow(auto)
> price <- auto$price
> X <- auto[, c("mpg", "rep78", "headroom", "trunk", "weight", "length", "turn", "displacement", "gear_ratio")]
> X <- as.matrix(X)
> 
> # 3 folds
> fid = ceiling((1:n)/(n/3))
> 
> r<-cv.glmnet(x=X,y=price,type.measure="mse",foldid=fid,nlambda=5)
> lambda5<-r$lambda
> r<-cv.glmnet(x=X,y=price,type.measure="mse",foldid=fid,lambda=lambda5,thresh=1e-15)
> r$lambda
> [1] 1584.1894208  158.4189421   15.8418942    1.5841894    0.1584189
> r$cvm
> [1] 8415736 8990325 9278120 9417919 9450578
> */
. sysuse auto, clear
{txt}(1978 Automobile Data)
r; t=0.02 16:44:08

{com}. cvlasso price mpg-gear, lglmnet nfolds(3) lcount(5) norandom

{txt}K-fold cross-validation with 3 folds. Elastic net with alpha=1.
Fold {res}1 2 3 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}      MSPE {space 3} {txt}  st. dev.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res} 1584.1894 {space 3} {res} 8415736.2 {space 3} {res} 2004888.1  *^
{txt}         2{c |} {space 3} {res} 158.41894 {space 3} {res} 8990324.9 {space 3} {res} 2517091.9  
{txt}         3{c |} {space 3} {res} 15.841894 {space 3} {res} 9278120.3 {space 3} {res}   2618557  
{txt}         4{c |} {space 3} {res} 1.5841894 {space 3} {res} 9417918.9 {space 3} {res} 2657923.3  
{txt}         5{c |} {space 3} {res} .15841894 {space 3} {res} 9450577.3 {space 3} {res} 2677715.9  
{txt}* lopt = the lambda that minimizes MSPE.
  Run model: {stata cvlasso, lopt}
{p 0 8 2}^ lse = largest lambda for which MSPE is within one standard error of the minimal MSPE.{p_end}
  Run model: {stata cvlasso, lse}
{err}Warning: lopt is at the limit of the lambda range.
Warning: lse is at the limit of the lambda range.
{txt}r; t=1.25 16:44:09

{com}. mat glambdamat = 1584.1894208 \ 158.4189421 \ 15.8418942 \ 1.5841894 \ 0.1584189
{txt}r; t=0.00 16:44:09

{com}. assert mreldif(glambdamat, e(lambdamat))<1e-7
{txt}r; t=0.00 16:44:09

{com}. mat gmmspe = 8415736 \ 8990325 \ 9278120 \ 9417919 \ 9450578
{txt}r; t=0.00 16:44:09

{com}. assert mreldif(gmmspe, e(mmspe))<1e-7
{txt}r; t=0.00 16:44:09

{com}. 
. * load example data
. insheet using "$prostate", tab clear
{txt}(11 vars, 97 obs)
r; t=0.91 16:44:10

{com}. drop if _n==97 // to ensure same size for each fold
{txt}(1 observation deleted)
r; t=0.00 16:44:10

{com}. 
. global model lpsa lcavol lweight age lbph svi lcp gleason pgg45
{txt}r; t=0.00 16:44:10

{com}. 
. * generate fold variable
. gen myfid = 1 if _n<=32
{txt}(64 missing values generated)
r; t=0.00 16:44:10

{com}. replace myfid = 2 if _n>32 & _n<=64
{txt}(32 real changes made)
r; t=0.00 16:44:10

{com}. replace myfid = 3 if _n>64
{txt}(32 real changes made)
r; t=0.00 16:44:10

{com}. 
. cvlasso $model, foldvar(myfid) lambda(150 15 1.5)
{txt}Use user-specified fold variable.

K-fold cross-validation with 3 folds. Elastic net with alpha=1.
Fold {res}1 2 3 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}      MSPE {space 3} {txt}  st. dev.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res}       150 {space 3} {res} 2.3865184 {space 3} {res} 1.1559279  
{txt}         2{c |} {space 3} {res}        15 {space 3} {res} 1.4635023 {space 3} {res} .42894674  *^
{txt}         3{c |} {space 3} {res}       1.5 {space 3} {res}  1.485229 {space 3} {res} .36948736  
{txt}* lopt = the lambda that minimizes MSPE.
  Run model: {stata cvlasso, lopt}
{p 0 8 2}^ lse = largest lambda for which MSPE is within one standard error of the minimal MSPE.{p_end}
  Run model: {stata cvlasso, lse}
r; t=0.02 16:44:10

{com}. mat L = e(mmspe)
{txt}r; t=0.00 16:44:10

{com}. /*
> c<-cv.glmnet(X,y,foldid=fid,lambda=c(150, 15, 1.5)/(2*n),keep=TRUE, intercept=TRUE,standardize=TRUE)
> > c$cvm # mean-squared prediction error
> [1] 2.386518 1.463497 1.484953
> > var(predict(c,newx=X,s="lambda.min"))
>          1
> 1 0.608541
> */
. mat G = ( 2.38651835211576 \ 1.46349718052732 \ 1.48495268875459 )
{txt}r; t=0.00 16:44:10

{com}. comparemat L G // compare coeffs
{txt}mreldif=.0001112103968545. tolerance = .01
{res}
{txt}__000000[3,1]
           r1
c1 {res} 2.3865184
{txt}c2 {res} 1.4635023
{txt}c3 {res}  1.485229
{reset}{res}
{txt}__000001[3,1]
           c1
r1 {res} 2.3865184
{txt}r2 {res} 1.4634972
{txt}r3 {res} 1.4849527
{reset}r; t=0.02 16:44:10

{com}. cap drop xb
{txt}r; t=0.00 16:44:10

{com}. predict double xb, lopt
{txt}Estimate lasso with lambda=15 (lopt).

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      0.4705447      0.4939937
{txt}{space 10}lweight {c |}{col 21}{res}      0.4738822      0.5463838
{txt}{space 13}lbph {c |}{col 21}{res}      0.0222266      0.0675109
{txt}{space 14}svi {c |}{col 21}{res}      0.4597209      0.5816563
{txt}{space 12}pgg45 {c |}{col 21}{res}      0.0021287      0.0033429
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##examples_partialling:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}_cons {c |}{col 21}{res}     -0.0467006     -0.4001276
{txt}{hline 18}{c BT}{hline 32}
No xb or residuals options specified. Assume xb (fitted values).
Use e(b) from previous lasso2 estimation (lambda=15).
r; t=0.07 16:44:10

{com}. sum xb

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 10}xb {c |}{res}         96    2.446048    .7801003   .9116189   4.111986
{txt}r; t=0.00 16:44:10

{com}. assert reldif(0.608541,r(Var))<0.001 // compare predicted values
{txt}r; t=0.00 16:44:10

{com}. 
. 
. cvlasso $model, foldvar(myfid) lambda(150 15 1.5) prestd
{txt}Use user-specified fold variable.

K-fold cross-validation with 3 folds. Elastic net with alpha=1.
Fold {res}1 2 3 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}      MSPE {space 3} {txt}  st. dev.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res}       150 {space 3} {res} 2.3865184 {space 3} {res} 1.1559279  
{txt}         2{c |} {space 3} {res}        15 {space 3} {res} 1.4635023 {space 3} {res} .42894674  *^
{txt}         3{c |} {space 3} {res}       1.5 {space 3} {res}  1.485229 {space 3} {res} .36948736  
{txt}* lopt = the lambda that minimizes MSPE.
  Run model: {stata cvlasso, lopt}
{p 0 8 2}^ lse = largest lambda for which MSPE is within one standard error of the minimal MSPE.{p_end}
  Run model: {stata cvlasso, lse}
r; t=0.02 16:44:10

{com}. mat L = e(mmspe)
{txt}r; t=0.00 16:44:10

{com}. /*
> c<-cv.glmnet(X,y,foldid=fid,lambda=c(150, 15, 1.5)/(2*n),keep=TRUE, intercept=TRUE,standardize=TRUE)
> > c$cvm # mean-squared prediction error
> [1] 2.386518 1.463497 1.484953
> > var(predict(c,newx=X,s="lambda.min"))
>          1
> 1 0.608541
> */
. mat G = ( 2.38651835211576 \ 1.46349718052732 \ 1.48495268875459 )
{txt}r; t=0.00 16:44:10

{com}. comparemat L G // compare coeffs
{txt}mreldif=.0001112103968545. tolerance = .01
{res}
{txt}__000000[3,1]
           r1
c1 {res} 2.3865184
{txt}c2 {res} 1.4635023
{txt}c3 {res}  1.485229
{reset}{res}
{txt}__000001[3,1]
           c1
r1 {res} 2.3865184
{txt}r2 {res} 1.4634972
{txt}r3 {res} 1.4849527
{reset}r; t=0.00 16:44:10

{com}. cap drop xb
{txt}r; t=0.00 16:44:10

{com}. predict double xb, lopt
{txt}Estimate lasso with lambda=15 (lopt).
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      0.4705447      0.4939937
{txt}{space 10}lweight {c |}{col 21}{res}      0.4738822      0.5463838
{txt}{space 13}lbph {c |}{col 21}{res}      0.0222266      0.0675109
{txt}{space 14}svi {c |}{col 21}{res}      0.4597209      0.5816563
{txt}{space 12}pgg45 {c |}{col 21}{res}      0.0021287      0.0033429
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##examples_partialling:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}_cons {c |}{col 21}{res}     -0.0467006     -0.4001276
{txt}{hline 18}{c BT}{hline 32}
No xb or residuals options specified. Assume xb (fitted values).
Use e(b) from previous lasso2 estimation (lambda=15).
r; t=0.02 16:44:10

{com}. sum xb

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 10}xb {c |}{res}         96    2.446048    .7801003   .9116189   4.111986
{txt}r; t=0.00 16:44:10

{com}. assert reldif(0.608541,r(Var))<0.001 // compare predicted values
{txt}r; t=0.00 16:44:10

{com}. 
. 
. cvlasso $model, foldvar(myfid) lambda(150 15 1.5) unitload
{txt}Use user-specified fold variable.

K-fold cross-validation with 3 folds. Elastic net with alpha=1.
Fold {res}1 2 3 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}      MSPE {space 3} {txt}  st. dev.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res}       150 {space 3} {res} 2.1036977 {space 3} {res} .86238904  
{txt}         2{c |} {space 3} {res}        15 {space 3} {res} 1.4298598 {space 3} {res} .47710985  ^
{txt}         3{c |} {space 3} {res}       1.5 {space 3} {res} 1.4275375 {space 3} {res} .35365915  *
{txt}* lopt = the lambda that minimizes MSPE.
  Run model: {stata cvlasso, lopt}
{p 0 8 2}^ lse = largest lambda for which MSPE is within one standard error of the minimal MSPE.{p_end}
  Run model: {stata cvlasso, lse}
{err}Warning: lopt is at the limit of the lambda range.
{txt}r; t=0.02 16:44:10

{com}. mat L = e(mmspe)
{txt}r; t=0.00 16:44:10

{com}. /*
> > # cross-validation with intercept & standardisation
> > c<-cv.glmnet(X,y,foldid=fid,lambda=c(150, 15, 1.5)/(2*n),keep=TRUE, intercept=TRUE,standardize=FALSE)
> > c$cvm # mean-squared prediction error
> [1] 2.103697 1.429934 1.427561
> > var(predict(c,newx=X,s="lambda.min"))
>           1
> 1 0.7840688
> */ 
. mat G = ( 2.10369705382686 \ 1.42993421234064 \ 1.42756055333919 )
{txt}r; t=0.00 16:44:10

{com}. comparemat L G // compare coeffs
{txt}mreldif=.0000306155184697. tolerance = .01
{res}
{txt}__000000[3,1]
           r1
c1 {res} 2.1036977
{txt}c2 {res} 1.4298598
{txt}c3 {res} 1.4275375
{reset}{res}
{txt}__000001[3,1]
           c1
r1 {res} 2.1036971
{txt}r2 {res} 1.4299342
{txt}r3 {res} 1.4275606
{reset}r; t=0.00 16:44:10

{com}. cap drop xb
{txt}r; t=0.00 16:44:10

{com}. predict double xb, lopt
{txt}Estimate lasso with lambda=1.5 (lopt).

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      0.5568426      0.5653571
{txt}{space 10}lweight {c |}{col 21}{res}      0.5707438      0.6139211
{txt}{space 14}age {c |}{col 21}{res}     -0.0208973     -0.0224946
{txt}{space 13}lbph {c |}{col 21}{res}      0.0911393      0.0935981
{txt}{space 14}svi {c |}{col 21}{res}      0.6204808      0.7149700
{txt}{space 14}lcp {c |}{col 21}{res}     -0.1126800     -0.1447125
{txt}{space 12}pgg45 {c |}{col 21}{res}      0.0068648      0.0071245
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##examples_partialling:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}_cons {c |}{col 21}{res}      0.6415930      0.5426554
{txt}{hline 18}{c BT}{hline 32}
No xb or residuals options specified. Assume xb (fitted values).
Use e(b) from previous lasso2 estimation (lambda=1.5).
r; t=0.01 16:44:10

{com}. sum xb

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 10}xb {c |}{res}         96    2.446048    .8854875    .513909   4.598263
{txt}r; t=0.00 16:44:10

{com}. assert reldif(0.7840688,r(Var))<0.001 // compare predicted values
{txt}r; t=0.00 16:44:10

{com}. 
. 
. cvlasso $model, foldvar(myfid) lambda(150 15 1.5) nocons unitload
{txt}Use user-specified fold variable.

K-fold cross-validation with 3 folds. Elastic net with alpha=1.
Fold {res}1 2 3 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}      MSPE {space 3} {txt}  st. dev.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res}       150 {space 3} {res} 1.9998833 {space 3} {res} .72964224  
{txt}         2{c |} {space 3} {res}        15 {space 3} {res}   1.26607 {space 3} {res} .39073554  ^
{txt}         3{c |} {space 3} {res}       1.5 {space 3} {res}  1.246129 {space 3} {res} .28903645  *
{txt}* lopt = the lambda that minimizes MSPE.
  Run model: {stata cvlasso, lopt}
{p 0 8 2}^ lse = largest lambda for which MSPE is within one standard error of the minimal MSPE.{p_end}
  Run model: {stata cvlasso, lse}
{err}Warning: lopt is at the limit of the lambda range.
{txt}r; t=0.09 16:44:10

{com}. mat L = e(mmspe)
{txt}r; t=0.00 16:44:10

{com}. /*
> > c<-cv.glmnet(X,y,foldid=fid,lambda=c(150, 15, 1.5)/(2*n),keep=TRUE, intercept=FALSE,standardize=FALSE)
> > c$cvm # mean-squared prediction error
> [1] 1.999806 1.266384 1.246805
> > var(predict(c,newx=X,s="lambda.min"))
>           1
> 1 0.7919695
> */
. mat G = ( 1.99980614859113 \ 1.26638436668758 \ 1.24680539174676 )
{txt}r; t=0.00 16:44:10

{com}. comparemat L G // compare coeffs
{txt}mreldif=.0003010647418424. tolerance = .01
{res}
{txt}__000000[3,1]
           r1
c1 {res} 1.9998833
{txt}c2 {res}   1.26607
{txt}c3 {res}  1.246129
{reset}{res}
{txt}__000001[3,1]
           c1
r1 {res} 1.9998061
{txt}r2 {res} 1.2663844
{txt}r3 {res} 1.2468054
{reset}r; t=0.00 16:44:10

{com}. cap drop xb
{txt}r; t=0.00 16:44:10

{com}. predict double xb, lopt
{txt}Estimate lasso with lambda=1.5 (lopt).

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      0.5473610      0.5569029
{txt}{space 10}lweight {c |}{col 21}{res}      0.6258035      0.6453516
{txt}{space 14}age {c |}{col 21}{res}     -0.0188110     -0.0217852
{txt}{space 13}lbph {c |}{col 21}{res}      0.0801178      0.0880196
{txt}{space 14}svi {c |}{col 21}{res}      0.6260775      0.7250462
{txt}{space 14}lcp {c |}{col 21}{res}     -0.1142476     -0.1460891
{txt}{space 10}gleason {c |}{col 21}{res}      0.0505847      0.0620963
{txt}{space 12}pgg45 {c |}{col 21}{res}      0.0059407      0.0060062
{txt}{hline 18}{c BT}{hline 32}
No xb or residuals options specified. Assume xb (fitted values).
Use e(b) from previous lasso2 estimation (lambda=1.5).
r; t=0.02 16:44:10

{com}. sum xb

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 10}xb {c |}{res}         96    2.443933    .8905195   .5327895   4.561406
{txt}r; t=0.00 16:44:10

{com}. assert reldif(0.7919695,r(Var))<0.001 // compare predicted values
{txt}r; t=0.00 16:44:10

{com}. 
. cvlasso $model, foldvar(myfid) lambda(150 15 1.5) nocons
{txt}Use user-specified fold variable.

K-fold cross-validation with 3 folds. Elastic net with alpha=1.
Fold {res}1 2 3 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}      MSPE {space 3} {txt}  st. dev.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res}       150 {space 3} {res} 1.9069161 {space 3} {res} .92525083  
{txt}         2{c |} {space 3} {res}        15 {space 3} {res} 1.2339936 {space 3} {res} .35347077  *^
{txt}         3{c |} {space 3} {res}       1.5 {space 3} {res}  1.309495 {space 3} {res}  .3270498  
{txt}* lopt = the lambda that minimizes MSPE.
  Run model: {stata cvlasso, lopt}
{p 0 8 2}^ lse = largest lambda for which MSPE is within one standard error of the minimal MSPE.{p_end}
  Run model: {stata cvlasso, lse}
r; t=0.09 16:44:10

{com}. mat L = e(mmspe)
{txt}r; t=0.00 16:44:10

{com}. /*
> c<-cv.glmnet(X,y,foldid=fid,lambda=c(150, 15, 1.5)/(2*n),keep=TRUE, intercept=FALSE,standardize=TRUE)
> > c$cvm # mean-squared prediction error
> [1] 1.906526 1.232220 1.310531
> > var(predict(c,newx=X,s="lambda.min"))
>           1
> 1 0.6062457
> */
. mat G = ( 1.90652583524832 \ 1.23222044017428 \ 1.31053116174191 )
{txt}r; t=0.00 16:44:10

{com}. comparemat L G // compare coeffs
{txt}mreldif=.0007943382600103. tolerance = .01
{res}
{txt}__000000[3,1]
           r1
c1 {res} 1.9069161
{txt}c2 {res} 1.2339936
{txt}c3 {res}  1.309495
{reset}{res}
{txt}__000001[3,1]
           c1
r1 {res} 1.9065258
{txt}r2 {res} 1.2322204
{txt}r3 {res} 1.3105312
{reset}r; t=0.00 16:44:10

{com}. cap drop xb
{txt}r; t=0.00 16:44:10

{com}. predict double xb, lopt
{txt}Estimate lasso with lambda=15 (lopt).

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      0.4712765      0.5002634
{txt}{space 10}lweight {c |}{col 21}{res}      0.4608978      0.4351342
{txt}{space 13}lbph {c |}{col 21}{res}      0.0239597      0.0823598
{txt}{space 14}svi {c |}{col 21}{res}      0.4613426      0.5955516
{txt}{space 12}pgg45 {c |}{col 21}{res}      0.0021037      0.0031282
{txt}{hline 18}{c BT}{hline 32}
No xb or residuals options specified. Assume xb (fitted values).
Use e(b) from previous lasso2 estimation (lambda=15).
r; t=0.01 16:44:10

{com}. sum xb

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 10}xb {c |}{res}         96    2.446541    .7785216   .9124108     4.1091
{txt}r; t=0.00 16:44:10

{com}. assert reldif(0.6062457,r(Var))<0.001 // compare predicted values
{txt}r; t=0.00 16:44:10

{com}. 
. cvlasso $model, foldvar(myfid) lambda(150 15 1.5) nocons prestd
{txt}Use user-specified fold variable.

K-fold cross-validation with 3 folds. Elastic net with alpha=1.
Fold {res}1 2 3 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}      MSPE {space 3} {txt}  st. dev.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res}       150 {space 3} {res} 1.9069161 {space 3} {res} .92525083  
{txt}         2{c |} {space 3} {res}        15 {space 3} {res} 1.2339936 {space 3} {res} .35347077  *^
{txt}         3{c |} {space 3} {res}       1.5 {space 3} {res}  1.309495 {space 3} {res}  .3270498  
{txt}* lopt = the lambda that minimizes MSPE.
  Run model: {stata cvlasso, lopt}
{p 0 8 2}^ lse = largest lambda for which MSPE is within one standard error of the minimal MSPE.{p_end}
  Run model: {stata cvlasso, lse}
r; t=0.10 16:44:10

{com}. mat L = e(mmspe)
{txt}r; t=0.00 16:44:10

{com}. /*
> c<-cv.glmnet(X,y,foldid=fid,lambda=c(150, 15, 1.5)/(2*n),keep=TRUE, intercept=FALSE,standardize=TRUE)
> > c$cvm # mean-squared prediction error
> [1] 1.906526 1.232220 1.310531
> > var(predict(c,newx=X,s="lambda.min"))
>           1
> 1 0.6062457
> */
. mat G = ( 1.90652583524832 \ 1.23222044017428 \ 1.31053116174191 )
{txt}r; t=0.00 16:44:10

{com}. comparemat L G // compare coeffs
{txt}mreldif=.0007943382600105. tolerance = .01
{res}
{txt}__000000[3,1]
           r1
c1 {res} 1.9069161
{txt}c2 {res} 1.2339936
{txt}c3 {res}  1.309495
{reset}{res}
{txt}__000001[3,1]
           c1
r1 {res} 1.9065258
{txt}r2 {res} 1.2322204
{txt}r3 {res} 1.3105312
{reset}r; t=0.00 16:44:10

{com}. cap drop xb
{txt}r; t=0.00 16:44:10

{com}. predict double xb, lopt
{txt}Estimate lasso with lambda=15 (lopt).
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      0.4712765      0.5002634
{txt}{space 10}lweight {c |}{col 21}{res}      0.4608978      0.4351342
{txt}{space 13}lbph {c |}{col 21}{res}      0.0239597      0.0823598
{txt}{space 14}svi {c |}{col 21}{res}      0.4613426      0.5955516
{txt}{space 12}pgg45 {c |}{col 21}{res}      0.0021037      0.0031282
{txt}{hline 18}{c BT}{hline 32}
No xb or residuals options specified. Assume xb (fitted values).
Use e(b) from previous lasso2 estimation (lambda=15).
r; t=0.01 16:44:10

{com}. sum xb

{txt}    Variable {c |}        Obs        Mean    Std. Dev.       Min        Max
{hline 13}{c +}{hline 57}
{space 10}xb {c |}{res}         96    2.446541    .7785216   .9124108     4.1091
{txt}r; t=0.00 16:44:10

{com}. assert reldif(0.6062457,r(Var))<0.001 // compare predicted values
{txt}r; t=0.00 16:44:10

{com}. 
. 
. ********************************************************************************
. *** validate                                                        ***
. ********************************************************************************
. 
. * load example data
. insheet using "$prostate", tab clear
{txt}(11 vars, 97 obs)
r; t=0.17 16:44:11

{com}.  
. global model lpsa lcavol lweight age lbph svi lcp gleason pgg45
{txt}r; t=0.00 16:44:11

{com}. gen sample = _n<70 
{txt}r; t=0.00 16:44:11

{com}.  
. foreach type of newlist lopt lse {c -(} 
{txt}  2{com}.  
. local type lse 
{txt}  3{com}.  
. // check that right beta is used for predict
. // also validates that "if" works 
. cvlasso $model if sample
{txt}  4{com}. local mylopt = e(`type')
{txt}  5{com}. cap drop myxb  
{txt}  6{com}. predict double myxb if !sample, xb `type' postres
{txt}  7{com}. mat A = e(b)
{txt}  8{com}. 
. lasso2 $model if sample, lambda(`mylopt')
{txt}  9{com}. cap drop myxb2
{txt} 10{com}. predict double myxb2 if !sample, xb
{txt} 11{com}. mat B = e(b)
{txt} 12{com}. 
. comparemat A B
{txt} 13{com}. assert myxb2==myxb
{txt} 14{com}. 
. // and now with alpha list
. cvlasso $model if sample, alpha(0 0.3 0.7 1)
{txt} 15{com}. local mylopt = e(`type')
{txt} 16{com}. local myalpha = e(alphamin)
{txt} 17{com}. cap drop myr
{txt} 18{com}. predict double myr if !sample, r `type' postres
{txt} 19{com}. mat A = e(b)
{txt} 20{com}. 
. lasso2 $model if sample, lambda(`mylopt') alpha(`myalpha') 
{txt} 21{com}. cap drop myr2
{txt} 22{com}. predict double myr2 if !sample, r
{txt} 23{com}. mat B = e(b)
{txt} 24{com}. 
. comparemat A B
{txt} 25{com}. assert myr2==myr
{txt} 26{com}. 
. {c )-}

{txt}K-fold cross-validation with 10 folds. Elastic net with alpha=1.
Fold {res}1 2 3 4 5 6 7 8 9 10 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}      MSPE {space 3} {txt}  st. dev.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res}  64.86388 {space 3} {res} .70214335 {space 3} {res} .13668767  
{txt}         2{c |} {space 3} {res} 59.101552 {space 3} {res} .68166758 {space 3} {res} .13770442  
{txt}         3{c |} {space 3} {res} 53.851133 {space 3} {res} .65032545 {space 3} {res} .13589084  
{txt}         4{c |} {space 3} {res} 49.067147 {space 3} {res} .61368184 {space 3} {res} .12902249  
{txt}         5{c |} {space 3} {res} 44.708157 {space 3} {res} .57648569 {space 3} {res} .11951189  
{txt}         6{c |} {space 3} {res} 40.736407 {space 3} {res}  .5455564 {space 3} {res} .11125054  
{txt}         7{c |} {space 3} {res} 37.117497 {space 3} {res} .52022373 {space 3} {res} .10413738  
{txt}         8{c |} {space 3} {res} 33.820081 {space 3} {res} .49994965 {space 3} {res} .09808444  
{txt}         9{c |} {space 3} {res} 30.815598 {space 3} {res} .48394209 {space 3} {res} .09299888  
{txt}        10{c |} {space 3} {res} 28.078025 {space 3} {res}  .4715922 {space 3} {res} .08866583  ^
{txt}        11{c |} {space 3} {res} 25.583651 {space 3} {res} .46159647 {space 3} {res} .08503773  
{txt}        12{c |} {space 3} {res}  23.31087 {space 3} {res} .45319845 {space 3} {res}  .0819249  
{txt}        13{c |} {space 3} {res} 21.239997 {space 3} {res} .44655158 {space 3} {res} .07921285  
{txt}        14{c |} {space 3} {res} 19.353094 {space 3} {res} .43989318 {space 3} {res} .07690231  
{txt}        15{c |} {space 3} {res} 17.633818 {space 3} {res} .43416143 {space 3} {res} .07503205  
{txt}        16{c |} {space 3} {res} 16.067278 {space 3} {res} .42831327 {space 3} {res} .07332298  
{txt}        17{c |} {space 3} {res} 14.639906 {space 3} {res} .42328622 {space 3} {res} .07186312  
{txt}        18{c |} {space 3} {res} 13.339337 {space 3} {res} .41909404 {space 3} {res} .07059609  
{txt}        19{c |} {space 3} {res} 12.154307 {space 3} {res} .41541784 {space 3} {res} .06940436  
{txt}        20{c |} {space 3} {res} 11.074552 {space 3} {res} .41239688 {space 3} {res} .06842274  
{txt}        21{c |} {space 3} {res} 10.090719 {space 3} {res} .41115051 {space 3} {res} .06762829  *
{txt}        22{c |} {space 3} {res} 9.1942875 {space 3} {res} .41125524 {space 3} {res} .06734084  
{txt}        23{c |} {space 3} {res} 8.3774923 {space 3} {res} .41189673 {space 3} {res} .06726297  
{txt}        24{c |} {space 3} {res}  7.633259 {space 3} {res} .41299996 {space 3} {res} .06716497  
{txt}        25{c |} {space 3} {res} 6.9551413 {space 3} {res} .41535333 {space 3} {res} .06772844  
{txt}        26{c |} {space 3} {res} 6.3372657 {space 3} {res} .41747426 {space 3} {res} .06851425  
{txt}        27{c |} {space 3} {res} 5.7742805 {space 3} {res} .41770086 {space 3} {res} .06978754  
{txt}        28{c |} {space 3} {res} 5.2613093 {space 3} {res} .41811876 {space 3} {res} .07107378  
{txt}        29{c |} {space 3} {res} 4.7939091 {space 3} {res} .41867378 {space 3} {res} .07229779  
{txt}        30{c |} {space 3} {res} 4.3680314 {space 3} {res} .41856902 {space 3} {res} .07315811  
{txt}        31{c |} {space 3} {res} 3.9799876 {space 3} {res} .41856329 {space 3} {res} .07409234  
{txt}        32{c |} {space 3} {res} 3.6264164 {space 3} {res}   .418418 {space 3} {res} .07512313  
{txt}        33{c |} {space 3} {res} 3.3042556 {space 3} {res} .41815181 {space 3} {res}  .0761924  
{txt}        34{c |} {space 3} {res} 3.0107146 {space 3} {res} .41800644 {space 3} {res} .07722359  
{txt}        35{c |} {space 3} {res}  2.743251 {space 3} {res} .41780862 {space 3} {res} .07813846  
{txt}        36{c |} {space 3} {res} 2.4995482 {space 3} {res} .41776606 {space 3} {res} .07897215  
{txt}        37{c |} {space 3} {res} 2.2774952 {space 3} {res} .41784915 {space 3} {res} .07973505  
{txt}        38{c |} {space 3} {res} 2.0751688 {space 3} {res}  .4178434 {space 3} {res}  .0803494  
{txt}        39{c |} {space 3} {res} 1.8908165 {space 3} {res} .41783315 {space 3} {res} .08086973  
{txt}        40{c |} {space 3} {res} 1.7228416 {space 3} {res}  .4177931 {space 3} {res} .08133498  
{txt}        41{c |} {space 3} {res} 1.5697891 {space 3} {res} .41780825 {space 3} {res} .08175923  
{txt}        42{c |} {space 3} {res} 1.4303334 {space 3} {res}  .4178703 {space 3} {res} .08214655  
{txt}        43{c |} {space 3} {res} 1.3032665 {space 3} {res} .41796691 {space 3} {res} .08250007  
{txt}        44{c |} {space 3} {res} 1.1874879 {space 3} {res} .41808819 {space 3} {res}  .0828227  
{txt}        45{c |} {space 3} {res} 1.0819947 {space 3} {res} .41822631 {space 3} {res} .08311707  
{txt}        46{c |} {space 3} {res} .98587331 {space 3} {res} .41837509 {space 3} {res} .08338564  
{txt}        47{c |} {space 3} {res} .89829104 {space 3} {res} .41872946 {space 3} {res} .08363953  
{txt}        48{c |} {space 3} {res} .81848934 {space 3} {res} .41907617 {space 3} {res} .08387238  
{txt}        49{c |} {space 3} {res}   .745777 {space 3} {res} .41940754 {space 3} {res} .08408564  
{txt}        50{c |} {space 3} {res} .67952423 {space 3} {res} .41972231 {space 3} {res} .08428089  
{txt}        51{c |} {space 3} {res} .61915717 {space 3} {res} .42001978 {space 3} {res} .08445959  
{txt}        52{c |} {space 3} {res} .56415295 {space 3} {res} .42029967 {space 3} {res} .08462309  
{txt}        53{c |} {space 3} {res} .51403516 {space 3} {res} .42056204 {space 3} {res} .08477263  
{txt}        54{c |} {space 3} {res} .46836969 {space 3} {res}  .4208072 {space 3} {res} .08490936  
{txt}        55{c |} {space 3} {res} .42676102 {space 3} {res} .42103565 {space 3} {res} .08503435  
{txt}        56{c |} {space 3} {res} .38884875 {space 3} {res} .42124801 {space 3} {res} .08514857  
{txt}        57{c |} {space 3} {res}  .3543045 {space 3} {res} .42144499 {space 3} {res} .08525293  
{txt}        58{c |} {space 3} {res} .32282906 {space 3} {res} .42162738 {space 3} {res} .08534826  
{txt}        59{c |} {space 3} {res} .29414982 {space 3} {res} .42179596 {space 3} {res} .08543531  
{txt}        60{c |} {space 3} {res} .26801836 {space 3} {res} .42195157 {space 3} {res} .08551481  
{txt}        61{c |} {space 3} {res} .24420835 {space 3} {res} .42209501 {space 3} {res} .08558737  
{txt}        62{c |} {space 3} {res} .22251355 {space 3} {res} .42222708 {space 3} {res} .08565361  
{txt}        63{c |} {space 3} {res} .20274606 {space 3} {res} .42234856 {space 3} {res} .08571407  
{txt}* lopt = the lambda that minimizes MSPE.
  Run model: {stata cvlasso, lopt}
{p 0 8 2}^ lse = largest lambda for which MSPE is within one standard error of the minimal MSPE.{p_end}
  Run model: {stata cvlasso, lse}
Estimate lasso with lambda=28.078 (lse).

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      0.2177045      0.3782994
{txt}{space 10}lweight {c |}{col 21}{res}      0.4397825      0.8391637
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##examples_partialling:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}_cons {c |}{col 21}{res}      0.1812277     -1.3919237
{txt}{hline 18}{c BT}{hline 32}
Use e(b) from previous lasso2 estimation (lambda=28.07802540248).
(69 missing values generated)

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      0.2177045      0.3782994
{txt}{space 10}lweight {c |}{col 21}{res}      0.4397825      0.8391637
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##examples_partialling:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}_cons {c |}{col 21}{res}      0.1812277     -1.3919237
{txt}{hline 18}{c BT}{hline 32}
Use e(b) from previous lasso2 estimation (lambda=28.07802540248).
(69 missing values generated)
mreldif=0. tolerance = .01
{res}
{txt}__000000[1,3]
       lcavol    lweight      _cons
y1 {res} .21770447  .43978251  .18122774
{reset}{res}
{txt}__000001[1,3]
       lcavol    lweight      _cons
y1 {res} .21770447  .43978251  .18122774
{reset}
K-fold cross-validation with 10 folds. Elastic net with alpha=0.
Fold {res}1 2 3 4 5 6 7 8 9 10 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}      MSPE {space 3} {txt}  st. dev.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res}  64863.88 {space 3} {res} .71761383 {space 3} {res} .13388319  
{txt}         2{c |} {space 3} {res} 59101.552 {space 3} {res} .71728114 {space 3} {res} .13383892  
{txt}         3{c |} {space 3} {res} 53851.133 {space 3} {res} .71691674 {space 3} {res} .13379039  
{txt}         4{c |} {space 3} {res} 49067.147 {space 3} {res} .71651768 {space 3} {res} .13373719  
{txt}         5{c |} {space 3} {res} 44708.157 {space 3} {res} .71608078 {space 3} {res}  .1336789  
{txt}         6{c |} {space 3} {res} 40736.407 {space 3} {res} .71560253 {space 3} {res} .13361502  
{txt}         7{c |} {space 3} {res} 37117.497 {space 3} {res} .71507917 {space 3} {res} .13354502  
{txt}         8{c |} {space 3} {res} 33820.081 {space 3} {res} .71450661 {space 3} {res} .13346835  
{txt}         9{c |} {space 3} {res} 30815.598 {space 3} {res} .71388039 {space 3} {res} .13338438  
{txt}        10{c |} {space 3} {res} 28078.025 {space 3} {res} .71319573 {space 3} {res} .13329242  
{txt}        11{c |} {space 3} {res} 25583.651 {space 3} {res} .71244745 {space 3} {res} .13319175  
{txt}        12{c |} {space 3} {res}  23310.87 {space 3} {res} .71162994 {space 3} {res} .13308156  
{txt}        13{c |} {space 3} {res} 21239.997 {space 3} {res} .71073721 {space 3} {res} .13296098  
{txt}        14{c |} {space 3} {res} 19353.094 {space 3} {res} .70976279 {space 3} {res} .13282907  
{txt}        15{c |} {space 3} {res} 17633.818 {space 3} {res} .70869975 {space 3} {res}  .1326848  
{txt}        16{c |} {space 3} {res} 16067.278 {space 3} {res} .70754071 {space 3} {res} .13252709  
{txt}        17{c |} {space 3} {res} 14639.906 {space 3} {res} .70627775 {space 3} {res} .13235473  
{txt}        18{c |} {space 3} {res} 13339.337 {space 3} {res} .70490251 {space 3} {res} .13216644  
{txt}        19{c |} {space 3} {res} 12154.307 {space 3} {res} .70340609 {space 3} {res} .13196084  
{txt}        20{c |} {space 3} {res} 11074.552 {space 3} {res} .70177913 {space 3} {res} .13173643  
{txt}        21{c |} {space 3} {res} 10090.719 {space 3} {res} .70001178 {space 3} {res} .13149163  
{txt}        22{c |} {space 3} {res} 9194.2875 {space 3} {res} .69809374 {space 3} {res} .13122474  
{txt}        23{c |} {space 3} {res} 8377.4923 {space 3} {res} .69601431 {space 3} {res} .13093394  
{txt}        24{c |} {space 3} {res}  7633.259 {space 3} {res} .69376243 {space 3} {res} .13061729  
{txt}        25{c |} {space 3} {res} 6955.1413 {space 3} {res} .69132677 {space 3} {res} .13027274  
{txt}        26{c |} {space 3} {res} 6337.2657 {space 3} {res} .68869578 {space 3} {res} .12989814  
{txt}        27{c |} {space 3} {res} 5774.2805 {space 3} {res} .68585786 {space 3} {res}  .1294912  
{txt}        28{c |} {space 3} {res} 5261.3093 {space 3} {res} .68280142 {space 3} {res} .12904953  
{txt}        29{c |} {space 3} {res} 4793.9091 {space 3} {res}  .6795151 {space 3} {res} .12857065  
{txt}        30{c |} {space 3} {res} 4368.0314 {space 3} {res} .67598795 {space 3} {res} .12805199  
{txt}        31{c |} {space 3} {res} 3979.9876 {space 3} {res} .67220958 {space 3} {res} .12749087  
{txt}        32{c |} {space 3} {res} 3626.4164 {space 3} {res} .66817048 {space 3} {res} .12688458  
{txt}        33{c |} {space 3} {res} 3304.2556 {space 3} {res} .66386219 {space 3} {res} .12623037  
{txt}        34{c |} {space 3} {res} 3010.7146 {space 3} {res} .65927767 {space 3} {res} .12552545  
{txt}        35{c |} {space 3} {res}  2743.251 {space 3} {res} .65441151 {space 3} {res} .12476707  
{txt}        36{c |} {space 3} {res} 2499.5482 {space 3} {res} .64926028 {space 3} {res} .12395252  
{txt}        37{c |} {space 3} {res} 2277.4952 {space 3} {res} .64382284 {space 3} {res} .12307918  
{txt}        38{c |} {space 3} {res} 2075.1688 {space 3} {res} .63810059 {space 3} {res} .12214458  
{txt}        39{c |} {space 3} {res} 1890.8165 {space 3} {res} .63209775 {space 3} {res} .12114641  
{txt}        40{c |} {space 3} {res} 1722.8416 {space 3} {res} .62582162 {space 3} {res} .12008264  
{txt}        41{c |} {space 3} {res} 1569.7891 {space 3} {res}  .6192827 {space 3} {res} .11895152  
{txt}        42{c |} {space 3} {res} 1430.3334 {space 3} {res} .61249483 {space 3} {res} .11775164  
{txt}        43{c |} {space 3} {res} 1303.2665 {space 3} {res} .60547523 {space 3} {res} .11648206  
{txt}        44{c |} {space 3} {res} 1187.4879 {space 3} {res} .59824438 {space 3} {res} .11514228  
{txt}        45{c |} {space 3} {res} 1081.9947 {space 3} {res} .59082587 {space 3} {res} .11373238  
{txt}        46{c |} {space 3} {res} 985.87331 {space 3} {res} .58324614 {space 3} {res} .11225303  
{txt}        47{c |} {space 3} {res} 898.29104 {space 3} {res} .57553406 {space 3} {res} .11070553  
{txt}        48{c |} {space 3} {res} 818.48934 {space 3} {res} .56772046 {space 3} {res} .10909189  
{txt}        49{c |} {space 3} {res}   745.777 {space 3} {res} .55983758 {space 3} {res} .10741482  
{txt}        50{c |} {space 3} {res} 679.52423 {space 3} {res} .55191843 {space 3} {res} .10567775  
{txt}        51{c |} {space 3} {res} 619.15717 {space 3} {res} .54399613 {space 3} {res} .10388483  
{txt}        52{c |} {space 3} {res} 564.15295 {space 3} {res} .53610327 {space 3} {res} .10204092  
{txt}        53{c |} {space 3} {res} 514.03516 {space 3} {res} .52827127 {space 3} {res} .10015153  
{txt}        54{c |} {space 3} {res} 468.36969 {space 3} {res} .52052983 {space 3} {res} .09822277  
{txt}        55{c |} {space 3} {res} 426.76102 {space 3} {res} .51290644 {space 3} {res}  .0962613  
{txt}        56{c |} {space 3} {res} 388.84875 {space 3} {res} .50542603 {space 3} {res} .09427424  
{txt}        57{c |} {space 3} {res}  354.3045 {space 3} {res} .49811072 {space 3} {res} .09226911  
{txt}        58{c |} {space 3} {res} 322.82906 {space 3} {res} .49097975 {space 3} {res} .09025371  
{txt}        59{c |} {space 3} {res} 294.14982 {space 3} {res} .48404948 {space 3} {res} .08823609  
{txt}        60{c |} {space 3} {res} 268.01836 {space 3} {res} .47733353 {space 3} {res} .08622448  
{txt}        61{c |} {space 3} {res} 244.20835 {space 3} {res} .47084305 {space 3} {res} .08422719  
{txt}        62{c |} {space 3} {res} 222.51355 {space 3} {res} .46458698 {space 3} {res} .08225266  
{txt}        63{c |} {space 3} {res} 202.74606 {space 3} {res} .45857243 {space 3} {res} .08030934  
{txt}        64{c |} {space 3} {res} 184.73466 {space 3} {res} .45280499 {space 3} {res} .07840574  
{txt}        65{c |} {space 3} {res} 168.32334 {space 3} {res} .44728913 {space 3} {res}  .0765504  ^
{txt}        66{c |} {space 3} {res} 153.36996 {space 3} {res} .44202842 {space 3} {res} .07475186  
{txt}        67{c |} {space 3} {res} 139.74499 {space 3} {res} .43702579 {space 3} {res} .07301861  
{txt}        68{c |} {space 3} {res} 127.33043 {space 3} {res} .43228372 {space 3} {res} .07135908  
{txt}        69{c |} {space 3} {res} 116.01875 {space 3} {res} .42780424 {space 3} {res}  .0697815  
{txt}        70{c |} {space 3} {res} 105.71196 {space 3} {res} .42358903 {space 3} {res} .06829378  
{txt}        71{c |} {space 3} {res} 96.320804 {space 3} {res} .41963926 {space 3} {res} .06690335  
{txt}        72{c |} {space 3} {res} 87.763929 {space 3} {res} .41595555 {space 3} {res} .06561694  
{txt}        73{c |} {space 3} {res} 79.967223 {space 3} {res}  .4125378 {space 3} {res} .06444038  
{txt}        74{c |} {space 3} {res} 72.863156 {space 3} {res} .40938497 {space 3} {res} .06337836  
{txt}        75{c |} {space 3} {res} 66.390194 {space 3} {res} .40649498 {space 3} {res} .06243418  
{txt}        76{c |} {space 3} {res} 60.492272 {space 3} {res} .40386452 {space 3} {res}  .0616096  
{txt}        77{c |} {space 3} {res} 55.118305 {space 3} {res} .40148891 {space 3} {res} .06090468  
{txt}        78{c |} {space 3} {res} 50.221747 {space 3} {res} .39936206 {space 3} {res} .06031775  
{txt}        79{c |} {space 3} {res} 45.760185 {space 3} {res} .39747641 {space 3} {res} .05984542  
{txt}        80{c |} {space 3} {res} 41.694977 {space 3} {res} .39582298 {space 3} {res} .05948266  
{txt}        81{c |} {space 3} {res}  37.99091 {space 3} {res} .39439143 {space 3} {res} .05922302  
{txt}        82{c |} {space 3} {res} 34.615902 {space 3} {res} .39317018 {space 3} {res} .05905886  
{txt}        83{c |} {space 3} {res} 31.540721 {space 3} {res} .39214661 {space 3} {res} .05898163  
{txt}        84{c |} {space 3} {res}  28.73873 {space 3} {res}  .3913072 {space 3} {res} .05898215  
{txt}        85{c |} {space 3} {res}  26.18566 {space 3} {res} .39063782 {space 3} {res} .05905098  
{txt}        86{c |} {space 3} {res} 23.859399 {space 3} {res} .39012388 {space 3} {res} .05917861  
{txt}        87{c |} {space 3} {res} 21.739795 {space 3} {res} .38975066 {space 3} {res} .05935579  
{txt}        88{c |} {space 3} {res} 19.808492 {space 3} {res} .38950345 {space 3} {res} .05957366  
{txt}        89{c |} {space 3} {res}  18.04876 {space 3} {res} .38936781 {space 3} {res} .05982395  
{txt}        90{c |} {space 3} {res} 16.445358 {space 3} {res} .38932973 {space 3} {res} .06009908  *
{txt}        91{c |} {space 3} {res} 14.984398 {space 3} {res} .38937584 {space 3} {res} .06039221  
{txt}        92{c |} {space 3} {res} 13.653225 {space 3} {res} .38949348 {space 3} {res} .06069728  
{txt}        93{c |} {space 3} {res}  12.44031 {space 3} {res} .38967086 {space 3} {res} .06100904  
{txt}        94{c |} {space 3} {res} 11.335147 {space 3} {res}  .3898971 {space 3} {res} .06132296  
{txt}        95{c |} {space 3} {res} 10.328164 {space 3} {res} .39016229 {space 3} {res} .06163524  
{txt}        96{c |} {space 3} {res} 9.4106384 {space 3} {res} .39045751 {space 3} {res} .06194274  
{txt}        97{c |} {space 3} {res} 8.5746233 {space 3} {res} .39077483 {space 3} {res} .06224293  
{txt}        98{c |} {space 3} {res} 7.8128774 {space 3} {res} .39110726 {space 3} {res} .06253381  
{txt}        99{c |} {space 3} {res} 7.1188029 {space 3} {res} .39144875 {space 3} {res} .06281384  
{txt}       100{c |} {space 3} {res}  6.486388 {space 3} {res} .39179412 {space 3} {res} .06308191  
{txt}* lopt = the lambda that minimizes MSPE.
  Run model: {stata cvlasso, lopt}
{p 0 8 2}^ lse = largest lambda for which MSPE is within one standard error of the minimal MSPE.{p_end}
  Run model: {stata cvlasso, lse}


K-fold cross-validation with 10 folds. Elastic net with alpha=.3.
Fold {res}1 2 3 4 5 6 7 8 9 10 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}      MSPE {space 3} {txt}  st. dev.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res} 216.21293 {space 3} {res} .71813917 {space 3} {res} .13494987  
{txt}         2{c |} {space 3} {res} 197.00517 {space 3} {res} .70451244 {space 3} {res} .13621006  
{txt}         3{c |} {space 3} {res} 179.50378 {space 3} {res} .68347901 {space 3} {res} .13669292  
{txt}         4{c |} {space 3} {res} 163.55716 {space 3} {res} .65600436 {space 3} {res} .13210223  
{txt}         5{c |} {space 3} {res} 149.02719 {space 3} {res}  .6275934 {space 3} {res} .12559768  
{txt}         6{c |} {space 3} {res} 135.78802 {space 3} {res} .60157788 {space 3} {res} .11925603  
{txt}         7{c |} {space 3} {res} 123.72499 {space 3} {res} .57809805 {space 3} {res} .11321983  
{txt}         8{c |} {space 3} {res}  112.7336 {space 3} {res} .55686201 {space 3} {res} .10745351  
{txt}         9{c |} {space 3} {res} 102.71866 {space 3} {res} .53578209 {space 3} {res} .10226118  
{txt}        10{c |} {space 3} {res} 93.593418 {space 3} {res} .51501032 {space 3} {res} .09741491  
{txt}        11{c |} {space 3} {res} 85.278837 {space 3} {res} .49560479 {space 3} {res} .09262836  
{txt}        12{c |} {space 3} {res}   77.7029 {space 3} {res} .47871367 {space 3} {res} .08814103  
{txt}        13{c |} {space 3} {res} 70.799988 {space 3} {res} .46402505 {space 3} {res} .08399888  
{txt}        14{c |} {space 3} {res} 64.510313 {space 3} {res} .45127472 {space 3} {res} .08019479  ^
{txt}        15{c |} {space 3} {res} 58.779394 {space 3} {res} .44024714 {space 3} {res} .07671345  
{txt}        16{c |} {space 3} {res} 53.557595 {space 3} {res} .43074701 {space 3} {res} .07353885  
{txt}        17{c |} {space 3} {res} 48.799686 {space 3} {res} .42260153 {space 3} {res} .07065535  
{txt}        18{c |} {space 3} {res} 44.464456 {space 3} {res} .41564256 {space 3} {res} .06804515  
{txt}        19{c |} {space 3} {res} 40.514356 {space 3} {res} .40971797 {space 3} {res} .06568998  
{txt}        20{c |} {space 3} {res} 36.915173 {space 3} {res} .40469134 {space 3} {res} .06357143  
{txt}        21{c |} {space 3} {res}  33.63573 {space 3} {res} .40044109 {space 3} {res} .06167112  
{txt}        22{c |} {space 3} {res} 30.647625 {space 3} {res} .39769646 {space 3} {res} .06002607  
{txt}        23{c |} {space 3} {res} 27.924974 {space 3} {res} .39622341 {space 3} {res} .05868296  
{txt}        24{c |} {space 3} {res} 25.444197 {space 3} {res} .39590119 {space 3} {res} .05761349  *
{txt}        25{c |} {space 3} {res} 23.183804 {space 3} {res} .39603349 {space 3} {res} .05674955  
{txt}        26{c |} {space 3} {res} 21.124219 {space 3} {res} .39640062 {space 3} {res} .05607188  
{txt}        27{c |} {space 3} {res} 19.247602 {space 3} {res} .39771249 {space 3} {res} .05588345  
{txt}        28{c |} {space 3} {res} 17.537698 {space 3} {res}  .3989808 {space 3} {res} .05596529  
{txt}        29{c |} {space 3} {res} 15.979697 {space 3} {res} .40004879 {space 3} {res} .05624913  
{txt}        30{c |} {space 3} {res} 14.560105 {space 3} {res} .40055065 {space 3} {res}  .0564998  
{txt}        31{c |} {space 3} {res} 13.266625 {space 3} {res} .40090239 {space 3} {res} .05674003  
{txt}        32{c |} {space 3} {res} 12.088055 {space 3} {res} .40114613 {space 3} {res} .05717189  
{txt}        33{c |} {space 3} {res} 11.014185 {space 3} {res} .40109225 {space 3} {res} .05782131  
{txt}        34{c |} {space 3} {res} 10.035715 {space 3} {res} .40123184 {space 3} {res} .05846853  
{txt}        35{c |} {space 3} {res} 9.1441701 {space 3} {res} .40143118 {space 3} {res} .05906464  
{txt}        36{c |} {space 3} {res} 8.3318273 {space 3} {res} .40147047 {space 3} {res} .05959029  
{txt}        37{c |} {space 3} {res} 7.5916507 {space 3} {res} .40100338 {space 3} {res} .05991625  
{txt}        38{c |} {space 3} {res} 6.9172294 {space 3} {res} .40025255 {space 3} {res} .06018652  
{txt}        39{c |} {space 3} {res} 6.3027218 {space 3} {res} .39967708 {space 3} {res}   .060479  
{txt}        40{c |} {space 3} {res} 5.7428053 {space 3} {res} .39924725 {space 3} {res} .06078424  
{txt}        41{c |} {space 3} {res} 5.2326303 {space 3} {res}  .3989375 {space 3} {res} .06109479  
{txt}        42{c |} {space 3} {res} 4.7677779 {space 3} {res} .39872598 {space 3} {res} .06140481  
{txt}        43{c |} {space 3} {res} 4.3442216 {space 3} {res} .39859411 {space 3} {res} .06170986  
{txt}        44{c |} {space 3} {res}  3.958293 {space 3} {res} .39846985 {space 3} {res} .06202127  
{txt}        45{c |} {space 3} {res} 3.6066491 {space 3} {res} .39823334 {space 3} {res} .06236418  
{txt}        46{c |} {space 3} {res} 3.2862444 {space 3} {res} .39803036 {space 3} {res} .06268376  
{txt}        47{c |} {space 3} {res} 2.9943035 {space 3} {res} .39784197 {space 3} {res} .06297812  
{txt}        48{c |} {space 3} {res} 2.7282978 {space 3} {res}  .3976968 {space 3} {res} .06325626  
{txt}        49{c |} {space 3} {res} 2.4859233 {space 3} {res} .39758703 {space 3} {res} .06351795  
{txt}        50{c |} {space 3} {res} 2.2650808 {space 3} {res} .39750607 {space 3} {res} .06376323  
{txt}        51{c |} {space 3} {res} 2.0638572 {space 3} {res} .39744843 {space 3} {res}  .0639924  
{txt}        52{c |} {space 3} {res} 1.8805098 {space 3} {res} .39740951 {space 3} {res} .06420592  
{txt}        53{c |} {space 3} {res} 1.7134505 {space 3} {res} .39738553 {space 3} {res} .06440439  
{txt}        54{c |} {space 3} {res} 1.5612323 {space 3} {res} .39737335 {space 3} {res} .06458847  
{txt}        55{c |} {space 3} {res} 1.4225367 {space 3} {res} .39737038 {space 3} {res} .06475888  
{txt}        56{c |} {space 3} {res} 1.2961625 {space 3} {res}  .3973745 {space 3} {res} .06491639  
{txt}        57{c |} {space 3} {res}  1.181015 {space 3} {res} .39738399 {space 3} {res} .06506175  
{txt}        58{c |} {space 3} {res} 1.0760969 {space 3} {res} .39739744 {space 3} {res} .06519574  
{txt}        59{c |} {space 3} {res} .98049939 {space 3} {res} .39741372 {space 3} {res}  .0653191  
{txt}        60{c |} {space 3} {res} .89339453 {space 3} {res} .39743192 {space 3} {res} .06543256  
{txt}        61{c |} {space 3} {res} .81402782 {space 3} {res} .39745133 {space 3} {res} .06553682  
{txt}        62{c |} {space 3} {res} .74171183 {space 3} {res} .39747137 {space 3} {res} .06563254  
{txt}        63{c |} {space 3} {res}  .6758202 {space 3} {res}  .3974916 {space 3} {res} .06572037  
{txt}        64{c |} {space 3} {res} .61578219 {space 3} {res} .39751167 {space 3} {res} .06580089  
{txt}        65{c |} {space 3} {res}  .5610778 {space 3} {res} .39753133 {space 3} {res} .06587468  
{txt}        66{c |} {space 3} {res} .51123319 {space 3} {res} .39755039 {space 3} {res} .06594225  
{txt}        67{c |} {space 3} {res} .46581665 {space 3} {res} .39756872 {space 3} {res} .06600411  
{txt}* lopt = the lambda that minimizes MSPE.
  Run model: {stata cvlasso, lopt}
{p 0 8 2}^ lse = largest lambda for which MSPE is within one standard error of the minimal MSPE.{p_end}
  Run model: {stata cvlasso, lse}


K-fold cross-validation with 10 folds. Elastic net with alpha=.7.
Fold {res}1 2 3 4 5 6 7 8 9 10 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}      MSPE {space 3} {txt}  st. dev.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res} 92.662686 {space 3} {res} .71605505 {space 3} {res} .13538056  
{txt}         2{c |} {space 3} {res} 80.593279 {space 3} {res} .68014195 {space 3} {res} .13723252  
{txt}         3{c |} {space 3} {res} 70.095924 {space 3} {res} .62862585 {space 3} {res} .13019207  
{txt}         4{c |} {space 3} {res}  60.96586 {space 3} {res} .57631598 {space 3} {res} .11605674  
{txt}         5{c |} {space 3} {res} 53.024996 {space 3} {res} .53499281 {space 3} {res} .10396531  
{txt}         6{c |} {space 3} {res} 46.118437 {space 3} {res} .50378459 {space 3} {res} .09432378  
{txt}         7{c |} {space 3} {res} 40.111465 {space 3} {res} .48062028 {space 3} {res} .08611557  
{txt}         8{c |} {space 3} {res} 34.886907 {space 3} {res} .46040404 {space 3} {res} .07943755  
{txt}         9{c |} {space 3} {res} 30.342852 {space 3} {res}  .4418659 {space 3} {res} .07391486  ^
{txt}        10{c |} {space 3} {res} 26.390665 {space 3} {res} .42692425 {space 3} {res}  .0692331  
{txt}        11{c |} {space 3} {res} 22.953255 {space 3} {res} .41506947 {space 3} {res} .06530605  
{txt}        12{c |} {space 3} {res} 19.963571 {space 3} {res} .40621363 {space 3} {res}  .0619951  
{txt}        13{c |} {space 3} {res} 17.363296 {space 3} {res} .39953978 {space 3} {res} .05925494  
{txt}        14{c |} {space 3} {res} 15.101709 {space 3} {res} .39510992 {space 3} {res} .05703967  
{txt}        15{c |} {space 3} {res} 13.134696 {space 3} {res} .39395286 {space 3} {res} .05554826  *
{txt}        16{c |} {space 3} {res} 11.423889 {space 3} {res} .39506171 {space 3} {res} .05469344  
{txt}        17{c |} {space 3} {res} 9.9359161 {space 3} {res} .39681622 {space 3} {res} .05432107  
{txt}        18{c |} {space 3} {res} 8.6417531 {space 3} {res} .39969839 {space 3} {res} .05489489  
{txt}        19{c |} {space 3} {res} 7.5161562 {space 3} {res} .40198749 {space 3} {res} .05584044  
{txt}        20{c |} {space 3} {res} 6.5371693 {space 3} {res} .40323914 {space 3} {res} .05664082  
{txt}        21{c |} {space 3} {res} 5.6856965 {space 3} {res} .40382707 {space 3} {res} .05766271  
{txt}        22{c |} {space 3} {res} 4.9451289 {space 3} {res} .40408723 {space 3} {res} .05884305  
{txt}        23{c |} {space 3} {res} 4.3010209 {space 3} {res} .40440221 {space 3} {res} .05979354  
{txt}        24{c |} {space 3} {res} 3.7408086 {space 3} {res} .40387681 {space 3} {res} .06028356  
{txt}        25{c |} {space 3} {res} 3.2535646 {space 3} {res} .40267809 {space 3} {res} .06075081  
{txt}        26{c |} {space 3} {res} 2.8297845 {space 3} {res}  .4018278 {space 3} {res} .06123175  
{txt}        27{c |} {space 3} {res} 2.4612023 {space 3} {res} .40121501 {space 3} {res} .06171288  
{txt}        28{c |} {space 3} {res} 2.1406282 {space 3} {res} .40078957 {space 3} {res} .06217477  
{txt}        29{c |} {space 3} {res} 1.8618093 {space 3} {res} .40032995 {space 3} {res} .06265148  
{txt}        30{c |} {space 3} {res} 1.6193068 {space 3} {res} .39984717 {space 3} {res}  .0631264  
{txt}        31{c |} {space 3} {res} 1.4083904 {space 3} {res} .39948539 {space 3} {res}  .0635545  
{txt}        32{c |} {space 3} {res} 1.2249462 {space 3} {res} .39921503 {space 3} {res} .06393792  
{txt}        33{c |} {space 3} {res} 1.0653957 {space 3} {res} .39895143 {space 3} {res} .06426747  
{txt}        34{c |} {space 3} {res} .92662686 {space 3} {res} .39871957 {space 3} {res} .06455586  
{txt}        35{c |} {space 3} {res} .80593279 {space 3} {res} .39853797 {space 3} {res} .06481238  
{txt}        36{c |} {space 3} {res} .70095924 {space 3} {res} .39839526 {space 3} {res} .06503972  
{txt}        37{c |} {space 3} {res}  .6096586 {space 3} {res} .39828272 {space 3} {res} .06524061  
{txt}        38{c |} {space 3} {res} .53024996 {space 3} {res} .39819362 {space 3} {res} .06541768  
{txt}        39{c |} {space 3} {res} .46118437 {space 3} {res}  .3981228 {space 3} {res} .06557345  
{txt}        40{c |} {space 3} {res} .40111465 {space 3} {res} .39806625 {space 3} {res} .06571025  
{txt}        41{c |} {space 3} {res} .34886907 {space 3} {res}  .3980209 {space 3} {res} .06583022  
{txt}        42{c |} {space 3} {res} .30342852 {space 3} {res} .39798437 {space 3} {res} .06593531  
{txt}        43{c |} {space 3} {res} .26390665 {space 3} {res} .39795479 {space 3} {res} .06602726  
{txt}        44{c |} {space 3} {res} .22953255 {space 3} {res} .39793073 {space 3} {res} .06610765  
{txt}        45{c |} {space 3} {res} .19963571 {space 3} {res} .39791107 {space 3} {res} .06617789  
{txt}* lopt = the lambda that minimizes MSPE.
  Run model: {stata cvlasso, lopt}
{p 0 8 2}^ lse = largest lambda for which MSPE is within one standard error of the minimal MSPE.{p_end}
  Run model: {stata cvlasso, lse}


K-fold cross-validation with 10 folds. Elastic net with alpha=1.
Fold {res}1 2 3 4 5 6 7 8 9 10 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}      MSPE {space 3} {txt}  st. dev.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res}  64.86388 {space 3} {res} .71509992 {space 3} {res} .13557667  
{txt}         2{c |} {space 3} {res} 52.613093 {space 3} {res} .65107038 {space 3} {res} .13706166  
{txt}         3{c |} {space 3} {res} 42.676102 {space 3} {res} .56406864 {space 3} {res} .11359562  
{txt}         4{c |} {space 3} {res} 34.615902 {space 3} {res} .50546143 {space 3} {res} .09513444  
{txt}         5{c |} {space 3} {res} 28.078025 {space 3} {res} .46935768 {space 3} {res} .08265231  
{txt}         6{c |} {space 3} {res} 22.774952 {space 3} {res} .44450331 {space 3} {res} .07340707  ^
{txt}         7{c |} {space 3} {res} 18.473466 {space 3} {res} .42354103 {space 3} {res} .06646789  
{txt}         8{c |} {space 3} {res} 14.984398 {space 3} {res} .40842198 {space 3} {res} .06142809  
{txt}         9{c |} {space 3} {res} 12.154307 {space 3} {res} .39809148 {space 3} {res} .05761017  
{txt}        10{c |} {space 3} {res} 9.8587331 {space 3} {res} .39387524 {space 3} {res} .05499819  *
{txt}        11{c |} {space 3} {res} 7.9967223 {space 3} {res} .39561977 {space 3} {res} .05396784  
{txt}        12{c |} {space 3} {res}  6.486388 {space 3} {res} .39950841 {space 3} {res} .05435794  
{txt}        13{c |} {space 3} {res} 5.2613093 {space 3} {res} .40319804 {space 3} {res} .05600073  
{txt}        14{c |} {space 3} {res} 4.2676102 {space 3} {res} .40476389 {space 3} {res} .05743288  
{txt}        15{c |} {space 3} {res} 3.4615902 {space 3} {res} .40513933 {space 3} {res} .05928619  
{txt}        16{c |} {space 3} {res} 2.8078025 {space 3} {res}  .4049348 {space 3} {res}  .0603472  
{txt}        17{c |} {space 3} {res} 2.2774952 {space 3} {res}   .403247 {space 3} {res} .06102068  
{txt}        18{c |} {space 3} {res} 1.8473466 {space 3} {res} .40207892 {space 3} {res} .06174068  
{txt}        19{c |} {space 3} {res} 1.4984398 {space 3} {res} .40135415 {space 3} {res} .06242254  
{txt}        20{c |} {space 3} {res} 1.2154307 {space 3} {res} .40049754 {space 3} {res} .06313959  
{txt}        21{c |} {space 3} {res} .98587331 {space 3} {res}  .3998654 {space 3} {res} .06376851  
{txt}        22{c |} {space 3} {res} .79967223 {space 3} {res} .39943896 {space 3} {res} .06429758  
{txt}        23{c |} {space 3} {res}  .6486388 {space 3} {res} .39902924 {space 3} {res} .06471664  
{txt}        24{c |} {space 3} {res} .52613093 {space 3} {res} .39872377 {space 3} {res} .06506436  
{txt}        25{c |} {space 3} {res} .42676102 {space 3} {res} .39850171 {space 3} {res} .06535289  
{txt}        26{c |} {space 3} {res} .34615902 {space 3} {res} .39833852 {space 3} {res} .06559108  
{txt}        27{c |} {space 3} {res} .28078025 {space 3} {res} .39821728 {space 3} {res} .06578696  
{txt}        28{c |} {space 3} {res} .22774952 {space 3} {res} .39812627 {space 3} {res} .06594756  
{txt}        29{c |} {space 3} {res} .18473466 {space 3} {res} .39805726 {space 3} {res} .06607895  
{txt}        30{c |} {space 3} {res} .14984398 {space 3} {res} .39800447 {space 3} {res} .06618625  
{txt}        31{c |} {space 3} {res} .12154307 {space 3} {res} .39796373 {space 3} {res} .06627376  
{txt}* lopt = the lambda that minimizes MSPE.
  Run model: {stata cvlasso, lopt}
{p 0 8 2}^ lse = largest lambda for which MSPE is within one standard error of the minimal MSPE.{p_end}
  Run model: {stata cvlasso, lse}

Cross-validation over alpha (0 .3 .7 1).
{col 10}alpha {c |} lopt*{col 30} Minimum MSPE
{col 4}{hline 12}{c +}{hline 28}
{res}{col 10}0.000{txt}{col 16}{c |}{res}{col 17} 16.445358{col 30} .38932973{txt}{col 42}#
{res}{col 10}0.300{txt}{col 16}{c |}{res}{col 17} 25.444197{col 30} .39590119
{col 10}0.700{txt}{col 16}{c |}{res}{col 17} 13.134696{col 30} .39395286
{col 10}1.000{txt}{col 16}{c |}{res}{col 17} 9.8587331{col 30} .39387524
{txt}* lambda value that minimizes MSPE for a given alpha
# alpha value that minimizes MSPE
Estimate lasso with lambda=168.323 (lse) and alpha=0.

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Ridge   Post-est OLS
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      0.1530195      0.3897536
{txt}{space 10}lweight {c |}{col 21}{res}      0.3613086      0.7911376
{txt}{space 14}age {c |}{col 21}{res}      0.0002943     -0.0203522
{txt}{space 13}lbph {c |}{col 21}{res}      0.0623535      0.1026400
{txt}{space 14}svi {c |}{col 21}{res}     -0.0031343     -0.2764415
{txt}{space 14}lcp {c |}{col 21}{res}      0.0247036     -0.0959183
{txt}{space 10}gleason {c |}{col 21}{res}      0.1028211      0.2326491
{txt}{space 12}pgg45 {c |}{col 21}{res}      0.0018492      0.0026209
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##examples_partialling:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}_cons {c |}{col 21}{res}     -0.2037326     -1.5876684
{txt}{hline 18}{c BT}{hline 32}
Use e(b) from previous lasso2 estimation (lambda=168.3233400884).
(69 missing values generated)

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Ridge   Post-est OLS
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      0.1530195      0.3897536
{txt}{space 10}lweight {c |}{col 21}{res}      0.3613086      0.7911376
{txt}{space 14}age {c |}{col 21}{res}      0.0002943     -0.0203522
{txt}{space 13}lbph {c |}{col 21}{res}      0.0623535      0.1026400
{txt}{space 14}svi {c |}{col 21}{res}     -0.0031343     -0.2764415
{txt}{space 14}lcp {c |}{col 21}{res}      0.0247036     -0.0959183
{txt}{space 10}gleason {c |}{col 21}{res}      0.1028211      0.2326491
{txt}{space 12}pgg45 {c |}{col 21}{res}      0.0018492      0.0026209
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##examples_partialling:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}_cons {c |}{col 21}{res}     -0.2037326     -1.5876684
{txt}{hline 18}{c BT}{hline 32}
Use e(b) from previous lasso2 estimation (lambda=168.3233400884).
(69 missing values generated)
mreldif=0. tolerance = .01
{res}
{txt}__000000[1,9]
        lcavol     lweight         age        lbph         svi         lcp
y1 {res}  .15301953   .36130857   .00029427   .06235354  -.00313433   .02470359

{txt}       gleason       pgg45       _cons
y1 {res}  .10282109   .00184916  -.20373259
{reset}{res}
{txt}__000001[1,9]
        lcavol     lweight         age        lbph         svi         lcp
y1 {res}  .15301953   .36130857   .00029427   .06235354  -.00313433   .02470359

{txt}       gleason       pgg45       _cons
y1 {res}  .10282109   .00184916  -.20373259
{reset}
K-fold cross-validation with 10 folds. Elastic net with alpha=1.
Fold {res}1 2 3 4 5 6 7 8 9 10 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}      MSPE {space 3} {txt}  st. dev.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res}  64.86388 {space 3} {res}    .73815 {space 3} {res} .13934819  
{txt}         2{c |} {space 3} {res} 59.101552 {space 3} {res} .72696279 {space 3} {res} .13684858  
{txt}         3{c |} {space 3} {res} 53.851133 {space 3} {res}  .6911905 {space 3} {res} .13033704  
{txt}         4{c |} {space 3} {res} 49.067147 {space 3} {res} .65516965 {space 3} {res} .12292271  
{txt}         5{c |} {space 3} {res} 44.708157 {space 3} {res} .61856766 {space 3} {res} .11453878  
{txt}         6{c |} {space 3} {res} 40.736407 {space 3} {res}    .58831 {space 3} {res}  .1077572  
{txt}         7{c |} {space 3} {res} 37.117497 {space 3} {res} .56330798 {space 3} {res} .10240623  
{txt}         8{c |} {space 3} {res} 33.820081 {space 3} {res} .54289378 {space 3} {res} .09839534  ^
{txt}         9{c |} {space 3} {res} 30.815598 {space 3} {res} .52636626 {space 3} {res}  .0955039  
{txt}        10{c |} {space 3} {res} 28.078025 {space 3} {res} .51313142 {space 3} {res} .09344308  
{txt}        11{c |} {space 3} {res} 25.583651 {space 3} {res} .50234616 {space 3} {res} .09222386  
{txt}        12{c |} {space 3} {res}  23.31087 {space 3} {res} .49347152 {space 3} {res}  .0916299  
{txt}        13{c |} {space 3} {res} 21.239997 {space 3} {res} .48604068 {space 3} {res}  .0914002  
{txt}        14{c |} {space 3} {res} 19.353094 {space 3} {res} .47998464 {space 3} {res} .09145944  
{txt}        15{c |} {space 3} {res} 17.633818 {space 3} {res} .47423991 {space 3} {res}  .0914453  
{txt}        16{c |} {space 3} {res} 16.067278 {space 3} {res} .46906988 {space 3} {res} .09158127  
{txt}        17{c |} {space 3} {res} 14.639906 {space 3} {res} .46489735 {space 3} {res} .09190217  
{txt}        18{c |} {space 3} {res} 13.339337 {space 3} {res}  .4614885 {space 3} {res} .09233757  
{txt}        19{c |} {space 3} {res} 12.154307 {space 3} {res} .45850261 {space 3} {res} .09279684  
{txt}        20{c |} {space 3} {res} 11.074552 {space 3} {res}  .4561127 {space 3} {res} .09333192  
{txt}        21{c |} {space 3} {res} 10.090719 {space 3} {res} .45430203 {space 3} {res} .09393271  
{txt}        22{c |} {space 3} {res} 9.1942875 {space 3} {res} .45408009 {space 3} {res} .09444503  *
{txt}        23{c |} {space 3} {res} 8.3774923 {space 3} {res} .45520803 {space 3} {res}  .0947816  
{txt}        24{c |} {space 3} {res}  7.633259 {space 3} {res} .45659624 {space 3} {res} .09510214  
{txt}        25{c |} {space 3} {res} 6.9551413 {space 3} {res} .45813535 {space 3} {res} .09541936  
{txt}        26{c |} {space 3} {res} 6.3372657 {space 3} {res} .45929872 {space 3} {res} .09575475  
{txt}        27{c |} {space 3} {res} 5.7742805 {space 3} {res} .45997826 {space 3} {res}  .0960196  
{txt}        28{c |} {space 3} {res} 5.2613093 {space 3} {res} .46072422 {space 3} {res} .09626595  
{txt}        29{c |} {space 3} {res} 4.7939091 {space 3} {res} .46123203 {space 3} {res} .09614638  
{txt}        30{c |} {space 3} {res} 4.3680314 {space 3} {res} .46142682 {space 3} {res} .09580863  
{txt}        31{c |} {space 3} {res} 3.9799876 {space 3} {res}  .4610857 {space 3} {res} .09543152  
{txt}        32{c |} {space 3} {res} 3.6264164 {space 3} {res} .46083084 {space 3} {res} .09510119  
{txt}        33{c |} {space 3} {res} 3.3042556 {space 3} {res} .46054012 {space 3} {res} .09465183  
{txt}        34{c |} {space 3} {res} 3.0107146 {space 3} {res} .45998373 {space 3} {res} .09434707  
{txt}        35{c |} {space 3} {res}  2.743251 {space 3} {res} .45951242 {space 3} {res} .09412049  
{txt}        36{c |} {space 3} {res} 2.4995482 {space 3} {res} .45892324 {space 3} {res} .09398604  
{txt}        37{c |} {space 3} {res} 2.2774952 {space 3} {res} .45831124 {space 3} {res} .09388383  
{txt}        38{c |} {space 3} {res} 2.0751688 {space 3} {res} .45780864 {space 3} {res} .09380486  
{txt}        39{c |} {space 3} {res} 1.8908165 {space 3} {res} .45735658 {space 3} {res} .09376111  
{txt}        40{c |} {space 3} {res} 1.7228416 {space 3} {res} .45700626 {space 3} {res} .09372764  
{txt}        41{c |} {space 3} {res} 1.5697891 {space 3} {res} .45673819 {space 3} {res}  .0937025  
{txt}        42{c |} {space 3} {res} 1.4303334 {space 3} {res} .45646934 {space 3} {res} .09362726  
{txt}        43{c |} {space 3} {res} 1.3032665 {space 3} {res} .45609866 {space 3} {res} .09342596  
{txt}        44{c |} {space 3} {res} 1.1874879 {space 3} {res} .45579166 {space 3} {res} .09324682  
{txt}        45{c |} {space 3} {res} 1.0819947 {space 3} {res} .45553748 {space 3} {res} .09308717  
{txt}        46{c |} {space 3} {res} .98587331 {space 3} {res} .45532708 {space 3} {res} .09294468  
{txt}        47{c |} {space 3} {res} .89829104 {space 3} {res} .45515297 {space 3} {res} .09281735  
{txt}        48{c |} {space 3} {res} .81848934 {space 3} {res} .45500894 {space 3} {res} .09270341  
{txt}        49{c |} {space 3} {res}   .745777 {space 3} {res} .45488984 {space 3} {res} .09260133  
{txt}        50{c |} {space 3} {res} .67952423 {space 3} {res} .45479139 {space 3} {res} .09250976  
{txt}        51{c |} {space 3} {res} .61915717 {space 3} {res} .45471005 {space 3} {res} .09242754  
{txt}        52{c |} {space 3} {res} .56415295 {space 3} {res} .45464287 {space 3} {res} .09235363  
{txt}        53{c |} {space 3} {res} .51403516 {space 3} {res} .45458743 {space 3} {res} .09228712  
{txt}        54{c |} {space 3} {res} .46836969 {space 3} {res}  .4545417 {space 3} {res} .09222722  
{txt}        55{c |} {space 3} {res} .42676102 {space 3} {res}   .454504 {space 3} {res} .09217322  
{txt}        56{c |} {space 3} {res} .38884875 {space 3} {res} .45447295 {space 3} {res} .09212451  
{txt}        57{c |} {space 3} {res}  .3543045 {space 3} {res}  .4544474 {space 3} {res} .09208052  
{txt}        58{c |} {space 3} {res} .32282906 {space 3} {res} .45442639 {space 3} {res} .09204078  
{txt}        59{c |} {space 3} {res} .29414982 {space 3} {res} .45440914 {space 3} {res} .09200485  
{txt}        60{c |} {space 3} {res} .26801836 {space 3} {res} .45439498 {space 3} {res} .09197234  
{txt}        61{c |} {space 3} {res} .24420835 {space 3} {res} .45438338 {space 3} {res} .09194291  
{txt}        62{c |} {space 3} {res} .22251355 {space 3} {res}  .4543739 {space 3} {res} .09191626  
{txt}        63{c |} {space 3} {res} .20274606 {space 3} {res} .45436615 {space 3} {res} .09189211  
{txt}* lopt = the lambda that minimizes MSPE.
  Run model: {stata cvlasso, lopt}
{p 0 8 2}^ lse = largest lambda for which MSPE is within one standard error of the minimal MSPE.{p_end}
  Run model: {stata cvlasso, lse}
Estimate lasso with lambda=33.82 (lse).

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      0.1848622      0.3782994
{txt}{space 10}lweight {c |}{col 21}{res}      0.3581076      0.8391637
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##examples_partialling:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}_cons {c |}{col 21}{res}      0.5029428     -1.3919237
{txt}{hline 18}{c BT}{hline 32}
Use e(b) from previous lasso2 estimation (lambda=33.82008100076).
(69 missing values generated)

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      0.1848622      0.3782994
{txt}{space 10}lweight {c |}{col 21}{res}      0.3581076      0.8391637
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##examples_partialling:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}_cons {c |}{col 21}{res}      0.5029428     -1.3919237
{txt}{hline 18}{c BT}{hline 32}
Use e(b) from previous lasso2 estimation (lambda=33.82008100076).
(69 missing values generated)
mreldif=0. tolerance = .01
{res}
{txt}__000000[1,3]
       lcavol    lweight      _cons
y1 {res} .18486224  .35810765  .50294277
{reset}{res}
{txt}__000001[1,3]
       lcavol    lweight      _cons
y1 {res} .18486224  .35810765  .50294277
{reset}
K-fold cross-validation with 10 folds. Elastic net with alpha=0.
Fold {res}1 2 3 4 5 6 7 8 9 10 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}      MSPE {space 3} {txt}  st. dev.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res}  64863.88 {space 3} {res}  .7181991 {space 3} {res} .14931729  
{txt}         2{c |} {space 3} {res} 59101.552 {space 3} {res} .71787813 {space 3} {res} .14926121  
{txt}         3{c |} {space 3} {res} 53851.133 {space 3} {res} .71752659 {space 3} {res} .14919974  
{txt}         4{c |} {space 3} {res} 49067.147 {space 3} {res} .71714164 {space 3} {res} .14913235  
{txt}         5{c |} {space 3} {res} 44708.157 {space 3} {res} .71672019 {space 3} {res}  .1490585  
{txt}         6{c |} {space 3} {res} 40736.407 {space 3} {res} .71625889 {space 3} {res} .14897758  
{txt}         7{c |} {space 3} {res} 37117.497 {space 3} {res} .71575411 {space 3} {res}  .1488889  
{txt}         8{c |} {space 3} {res} 33820.081 {space 3} {res} .71520189 {space 3} {res} .14879176  
{txt}         9{c |} {space 3} {res} 30815.598 {space 3} {res} .71459799 {space 3} {res} .14868536  
{txt}        10{c |} {space 3} {res} 28078.025 {space 3} {res} .71393777 {space 3} {res} .14856884  
{txt}        11{c |} {space 3} {res} 25583.651 {space 3} {res} .71321625 {space 3} {res} .14844126  
{txt}        12{c |} {space 3} {res}  23310.87 {space 3} {res} .71242807 {space 3} {res} .14830161  
{txt}        13{c |} {space 3} {res} 21239.997 {space 3} {res} .71156746 {space 3} {res} .14814878  
{txt}        14{c |} {space 3} {res} 19353.094 {space 3} {res} .71062819 {space 3} {res} .14798157  
{txt}        15{c |} {space 3} {res} 17633.818 {space 3} {res} .70960365 {space 3} {res} .14779869  
{txt}        16{c |} {space 3} {res} 16067.278 {space 3} {res} .70848673 {space 3} {res} .14759872  
{txt}        17{c |} {space 3} {res} 14639.906 {space 3} {res} .70726986 {space 3} {res} .14738016  
{txt}        18{c |} {space 3} {res} 13339.337 {space 3} {res} .70594504 {space 3} {res} .14714136  
{txt}        19{c |} {space 3} {res} 12154.307 {space 3} {res} .70450375 {space 3} {res} .14688055  
{txt}        20{c |} {space 3} {res} 11074.552 {space 3} {res} .70293706 {space 3} {res} .14659585  
{txt}        21{c |} {space 3} {res} 10090.719 {space 3} {res} .70123558 {space 3} {res}  .1462852  
{txt}        22{c |} {space 3} {res} 9194.2875 {space 3} {res}  .6993895 {space 3} {res} .14594643  
{txt}        23{c |} {space 3} {res} 8377.4923 {space 3} {res} .69738866 {space 3} {res} .14557721  
{txt}        24{c |} {space 3} {res}  7633.259 {space 3} {res} .69522257 {space 3} {res} .14517506  
{txt}        25{c |} {space 3} {res} 6955.1413 {space 3} {res} .69288053 {space 3} {res} .14473734  
{txt}        26{c |} {space 3} {res} 6337.2657 {space 3} {res} .69035165 {space 3} {res} .14426125  
{txt}        27{c |} {space 3} {res} 5774.2805 {space 3} {res} .68762505 {space 3} {res} .14374386  
{txt}        28{c |} {space 3} {res} 5261.3093 {space 3} {res} .68468991 {space 3} {res} .14318206  
{txt}        29{c |} {space 3} {res} 4793.9091 {space 3} {res} .68153572 {space 3} {res} .14257261  
{txt}        30{c |} {space 3} {res} 4368.0314 {space 3} {res} .67815239 {space 3} {res} .14191216  
{txt}        31{c |} {space 3} {res} 3979.9876 {space 3} {res}  .6745305 {space 3} {res} .14119721  
{txt}        32{c |} {space 3} {res} 3626.4164 {space 3} {res} .67066153 {space 3} {res} .14042417  
{txt}        33{c |} {space 3} {res} 3304.2556 {space 3} {res} .66653814 {space 3} {res} .13958939  
{txt}        34{c |} {space 3} {res} 3010.7146 {space 3} {res}  .6621544 {space 3} {res} .13868918  
{txt}        35{c |} {space 3} {res}  2743.251 {space 3} {res} .65750615 {space 3} {res} .13771982  
{txt}        36{c |} {space 3} {res} 2499.5482 {space 3} {res} .65259127 {space 3} {res} .13667765  
{txt}        37{c |} {space 3} {res} 2277.4952 {space 3} {res} .64740996 {space 3} {res} .13555909  
{txt}        38{c |} {space 3} {res} 2075.1688 {space 3} {res}  .6419651 {space 3} {res} .13436075  
{txt}        39{c |} {space 3} {res} 1890.8165 {space 3} {res} .63626242 {space 3} {res} .13307941  
{txt}        40{c |} {space 3} {res} 1722.8416 {space 3} {res}  .6303108 {space 3} {res} .13171219  
{txt}        41{c |} {space 3} {res} 1569.7891 {space 3} {res} .62412242 {space 3} {res} .13025662  
{txt}        42{c |} {space 3} {res} 1430.3334 {space 3} {res}  .6177128 {space 3} {res} .12871068  
{txt}        43{c |} {space 3} {res} 1303.2665 {space 3} {res} .61110091 {space 3} {res} .12707301  
{txt}        44{c |} {space 3} {res} 1187.4879 {space 3} {res} .60430898 {space 3} {res} .12534293  
{txt}        45{c |} {space 3} {res} 1081.9947 {space 3} {res} .59736236 {space 3} {res} .12352064  
{txt}        46{c |} {space 3} {res} 985.87331 {space 3} {res} .59028919 {space 3} {res} .12160727  
{txt}        47{c |} {space 3} {res} 898.29104 {space 3} {res} .58311998 {space 3} {res} .11960509  
{txt}        48{c |} {space 3} {res} 818.48934 {space 3} {res} .57588706 {space 3} {res} .11751756  
{txt}        49{c |} {space 3} {res}   745.777 {space 3} {res} .56862403 {space 3} {res} .11534948  
{txt}        50{c |} {space 3} {res} 679.52423 {space 3} {res} .56136502 {space 3} {res} .11310706  
{txt}        51{c |} {space 3} {res} 619.15717 {space 3} {res} .55414402 {space 3} {res} .11079798  
{txt}        52{c |} {space 3} {res} 564.15295 {space 3} {res} .54699417 {space 3} {res} .10843144  
{txt}        53{c |} {space 3} {res} 514.03516 {space 3} {res} .53994711 {space 3} {res} .10601815  
{txt}        54{c |} {space 3} {res} 468.36969 {space 3} {res} .53303235 {space 3} {res} .10357023  
{txt}        55{c |} {space 3} {res} 426.76102 {space 3} {res}  .5262768 {space 3} {res} .10110115  
{txt}        56{c |} {space 3} {res} 388.84875 {space 3} {res} .51970442 {space 3} {res} .09862554  
{txt}        57{c |} {space 3} {res}  354.3045 {space 3} {res}   .513336 {space 3} {res} .09615899  
{txt}        58{c |} {space 3} {res} 322.82906 {space 3} {res}  .5071891 {space 3} {res} .09371775  ^
{txt}        59{c |} {space 3} {res} 294.14982 {space 3} {res}  .5012781 {space 3} {res} .09131849  
{txt}        60{c |} {space 3} {res} 268.01836 {space 3} {res} .49561448 {space 3} {res} .08897791  
{txt}        61{c |} {space 3} {res} 244.20835 {space 3} {res} .49020708 {space 3} {res} .08671242  
{txt}        62{c |} {space 3} {res} 222.51355 {space 3} {res}  .4850625 {space 3} {res} .08453782  
{txt}        63{c |} {space 3} {res} 202.74606 {space 3} {res} .48018556 {space 3} {res} .08246896  
{txt}        64{c |} {space 3} {res} 184.73466 {space 3} {res} .47557969 {space 3} {res} .08051942  
{txt}        65{c |} {space 3} {res} 168.32334 {space 3} {res} .47124732 {space 3} {res} .07870131  
{txt}        66{c |} {space 3} {res} 153.36996 {space 3} {res} .46719021 {space 3} {res}   .077025  
{txt}        67{c |} {space 3} {res} 139.74499 {space 3} {res} .46340969 {space 3} {res} .07549901  
{txt}        68{c |} {space 3} {res} 127.33043 {space 3} {res} .45990681 {space 3} {res} .07412986  
{txt}        69{c |} {space 3} {res} 116.01875 {space 3} {res} .45668233 {space 3} {res} .07292203  
{txt}        70{c |} {space 3} {res} 105.71196 {space 3} {res}  .4537367 {space 3} {res} .07187793  
{txt}        71{c |} {space 3} {res} 96.320804 {space 3} {res} .45106991 {space 3} {res} .07099794  
{txt}        72{c |} {space 3} {res} 87.763929 {space 3} {res} .44868125 {space 3} {res} .07028041  
{txt}        73{c |} {space 3} {res} 79.967223 {space 3} {res} .44656911 {space 3} {res} .06972183  
{txt}        74{c |} {space 3} {res} 72.863156 {space 3} {res}  .4447307 {space 3} {res} .06931693  
{txt}        75{c |} {space 3} {res} 66.390194 {space 3} {res} .44316182 {space 3} {res} .06905881  
{txt}        76{c |} {space 3} {res} 60.492272 {space 3} {res} .44185667 {space 3} {res} .06893918  
{txt}        77{c |} {space 3} {res} 55.118305 {space 3} {res} .44080767 {space 3} {res} .06894856  
{txt}        78{c |} {space 3} {res} 50.221747 {space 3} {res} .44000545 {space 3} {res}  .0690765  
{txt}        79{c |} {space 3} {res} 45.760185 {space 3} {res}  .4394388 {space 3} {res} .06931187  
{txt}        80{c |} {space 3} {res} 41.694977 {space 3} {res} .43909478 {space 3} {res} .06964306  
{txt}        81{c |} {space 3} {res}  37.99091 {space 3} {res} .43895888 {space 3} {res} .07005827  *
{txt}        82{c |} {space 3} {res} 34.615902 {space 3} {res} .43901525 {space 3} {res} .07054571  
{txt}        83{c |} {space 3} {res} 31.540721 {space 3} {res} .43924695 {space 3} {res} .07109382  
{txt}        84{c |} {space 3} {res}  28.73873 {space 3} {res} .43963624 {space 3} {res} .07169146  
{txt}        85{c |} {space 3} {res}  26.18566 {space 3} {res} .44016497 {space 3} {res} .07232805  
{txt}        86{c |} {space 3} {res} 23.859399 {space 3} {res} .44081483 {space 3} {res} .07299369  
{txt}        87{c |} {space 3} {res} 21.739795 {space 3} {res} .44156773 {space 3} {res} .07367924  
{txt}        88{c |} {space 3} {res} 19.808492 {space 3} {res} .44240603 {space 3} {res} .07437642  
{txt}        89{c |} {space 3} {res}  18.04876 {space 3} {res} .44331285 {space 3} {res} .07507778  
{txt}        90{c |} {space 3} {res} 16.445358 {space 3} {res} .44427224 {space 3} {res} .07577678  
{txt}        91{c |} {space 3} {res} 14.984398 {space 3} {res}  .4452694 {space 3} {res}  .0764677  
{txt}        92{c |} {space 3} {res} 13.653225 {space 3} {res} .44629077 {space 3} {res} .07714569  
{txt}        93{c |} {space 3} {res}  12.44031 {space 3} {res} .44732413 {space 3} {res} .07780666  
{txt}        94{c |} {space 3} {res} 11.335147 {space 3} {res} .44835861 {space 3} {res}  .0784473  
{txt}        95{c |} {space 3} {res} 10.328164 {space 3} {res} .44938477 {space 3} {res} .07906496  
{txt}        96{c |} {space 3} {res} 9.4106384 {space 3} {res} .45039449 {space 3} {res} .07965761  
{txt}        97{c |} {space 3} {res} 8.5746233 {space 3} {res} .45138094 {space 3} {res} .08022379  
{txt}        98{c |} {space 3} {res} 7.8128774 {space 3} {res} .45233853 {space 3} {res} .08076256  
{txt}        99{c |} {space 3} {res} 7.1188029 {space 3} {res} .45326281 {space 3} {res} .08127336  
{txt}       100{c |} {space 3} {res}  6.486388 {space 3} {res} .45415035 {space 3} {res} .08175605  
{txt}* lopt = the lambda that minimizes MSPE.
  Run model: {stata cvlasso, lopt}
{p 0 8 2}^ lse = largest lambda for which MSPE is within one standard error of the minimal MSPE.{p_end}
  Run model: {stata cvlasso, lse}


K-fold cross-validation with 10 folds. Elastic net with alpha=.3.
Fold {res}1 2 3 4 5 6 7 8 9 10 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}      MSPE {space 3} {txt}  st. dev.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res} 216.21293 {space 3} {res} .71978534 {space 3} {res} .15013752  
{txt}         2{c |} {space 3} {res} 197.00517 {space 3} {res} .71017005 {space 3} {res} .15107323  
{txt}         3{c |} {space 3} {res} 179.50378 {space 3} {res} .69031306 {space 3} {res} .15142021  
{txt}         4{c |} {space 3} {res} 163.55716 {space 3} {res} .66919694 {space 3} {res}  .1507195  
{txt}         5{c |} {space 3} {res} 149.02719 {space 3} {res} .64156352 {space 3} {res} .14272238  
{txt}         6{c |} {space 3} {res} 135.78802 {space 3} {res}  .6164214 {space 3} {res} .13488851  
{txt}         7{c |} {space 3} {res} 123.72499 {space 3} {res} .59405849 {space 3} {res} .12729791  
{txt}         8{c |} {space 3} {res}  112.7336 {space 3} {res} .57446611 {space 3} {res} .12036903  
{txt}         9{c |} {space 3} {res} 102.71866 {space 3} {res} .55627217 {space 3} {res} .11391456  
{txt}        10{c |} {space 3} {res} 93.593418 {space 3} {res} .53930592 {space 3} {res} .10789477  
{txt}        11{c |} {space 3} {res} 85.278837 {space 3} {res} .52390484 {space 3} {res} .10224888  
{txt}        12{c |} {space 3} {res}   77.7029 {space 3} {res}  .5099659 {space 3} {res} .09666926  
{txt}        13{c |} {space 3} {res} 70.799988 {space 3} {res} .49738532 {space 3} {res} .09135791  ^
{txt}        14{c |} {space 3} {res} 64.510313 {space 3} {res}  .4863324 {space 3} {res} .08652505  
{txt}        15{c |} {space 3} {res} 58.779394 {space 3} {res} .47698395 {space 3} {res} .08223233  
{txt}        16{c |} {space 3} {res} 53.557595 {space 3} {res}  .4691273 {space 3} {res} .07847212  
{txt}        17{c |} {space 3} {res} 48.799686 {space 3} {res} .46256545 {space 3} {res}  .0752346  
{txt}        18{c |} {space 3} {res} 44.464456 {space 3} {res} .45712454 {space 3} {res}  .0725015  
{txt}        19{c |} {space 3} {res} 40.514356 {space 3} {res}  .4526508 {space 3} {res} .07024614  
{txt}        20{c |} {space 3} {res} 36.915173 {space 3} {res}  .4490068 {space 3} {res} .06843479  
{txt}        21{c |} {space 3} {res}  33.63573 {space 3} {res} .44607057 {space 3} {res} .06702799  
{txt}        22{c |} {space 3} {res} 30.647625 {space 3} {res}  .4444035 {space 3} {res} .06617326  
{txt}        23{c |} {space 3} {res} 27.924974 {space 3} {res} .44344918 {space 3} {res} .06568083  
{txt}        24{c |} {space 3} {res} 25.444197 {space 3} {res} .44290922 {space 3} {res} .06543151  *
{txt}        25{c |} {space 3} {res} 23.183804 {space 3} {res} .44305748 {space 3} {res} .06538636  
{txt}        26{c |} {space 3} {res} 21.124219 {space 3} {res} .44376544 {space 3} {res} .06562424  
{txt}        27{c |} {space 3} {res} 19.247602 {space 3} {res} .44452025 {space 3} {res}  .0661518  
{txt}        28{c |} {space 3} {res} 17.537698 {space 3} {res} .44536081 {space 3} {res}  .0668253  
{txt}        29{c |} {space 3} {res} 15.979697 {space 3} {res} .44635706 {space 3} {res} .06756984  
{txt}        30{c |} {space 3} {res} 14.560105 {space 3} {res} .44661325 {space 3} {res} .06819682  
{txt}        31{c |} {space 3} {res} 13.266625 {space 3} {res} .44702318 {space 3} {res} .06880934  
{txt}        32{c |} {space 3} {res} 12.088055 {space 3} {res} .44832147 {space 3} {res} .06977741  
{txt}        33{c |} {space 3} {res} 11.014185 {space 3} {res} .44969129 {space 3} {res} .07083133  
{txt}        34{c |} {space 3} {res} 10.035715 {space 3} {res} .45088628 {space 3} {res} .07200861  
{txt}        35{c |} {space 3} {res} 9.1441701 {space 3} {res}  .4513476 {space 3} {res} .07284252  
{txt}        36{c |} {space 3} {res} 8.3318273 {space 3} {res} .45183462 {space 3} {res} .07369467  
{txt}        37{c |} {space 3} {res} 7.5916507 {space 3} {res} .45229478 {space 3} {res} .07459802  
{txt}        38{c |} {space 3} {res} 6.9172294 {space 3} {res} .45275884 {space 3} {res} .07552199  
{txt}        39{c |} {space 3} {res} 6.3027218 {space 3} {res}   .453315 {space 3} {res} .07641287  
{txt}        40{c |} {space 3} {res} 5.7428053 {space 3} {res} .45393734 {space 3} {res}  .0772657  
{txt}        41{c |} {space 3} {res} 5.2326303 {space 3} {res} .45460423 {space 3} {res} .07807722  
{txt}        42{c |} {space 3} {res} 4.7677779 {space 3} {res} .45529785 {space 3} {res} .07884549  
{txt}        43{c |} {space 3} {res} 4.3442216 {space 3} {res} .45600365 {space 3} {res} .07956964  
{txt}        44{c |} {space 3} {res}  3.958293 {space 3} {res} .45670992 {space 3} {res} .08024966  
{txt}        45{c |} {space 3} {res} 3.6066491 {space 3} {res}  .4574074 {space 3} {res} .08088614  
{txt}        46{c |} {space 3} {res} 3.2862444 {space 3} {res} .45808886 {space 3} {res} .08148019  
{txt}        47{c |} {space 3} {res} 2.9943035 {space 3} {res} .45874886 {space 3} {res} .08203324  
{txt}        48{c |} {space 3} {res} 2.7282978 {space 3} {res} .45938335 {space 3} {res} .08254699  
{txt}        49{c |} {space 3} {res} 2.4859233 {space 3} {res} .45998955 {space 3} {res} .08302331  
{txt}        50{c |} {space 3} {res} 2.2650808 {space 3} {res} .46053358 {space 3} {res} .08345325  
{txt}        51{c |} {space 3} {res} 2.0638572 {space 3} {res} .46095358 {space 3} {res} .08381795  
{txt}        52{c |} {space 3} {res} 1.8805098 {space 3} {res} .46135222 {space 3} {res} .08415448  
{txt}        53{c |} {space 3} {res} 1.7134505 {space 3} {res} .46172888 {space 3} {res} .08446464  
{txt}        54{c |} {space 3} {res} 1.5612323 {space 3} {res} .46208338 {space 3} {res} .08475019  
{txt}        55{c |} {space 3} {res} 1.4225367 {space 3} {res} .46241588 {space 3} {res} .08501284  
{txt}        56{c |} {space 3} {res} 1.2961625 {space 3} {res}  .4627268 {space 3} {res} .08525419  
{txt}        57{c |} {space 3} {res}  1.181015 {space 3} {res} .46301678 {space 3} {res} .08547582  
{txt}        58{c |} {space 3} {res} 1.0760969 {space 3} {res}  .4632866 {space 3} {res} .08567918  
{txt}        59{c |} {space 3} {res} .98049939 {space 3} {res} .46353712 {space 3} {res} .08586565  
{txt}        60{c |} {space 3} {res} .89339453 {space 3} {res} .46376931 {space 3} {res} .08603655  
{txt}        61{c |} {space 3} {res} .81402782 {space 3} {res} .46398415 {space 3} {res} .08619309  
{txt}        62{c |} {space 3} {res} .74171183 {space 3} {res} .46418263 {space 3} {res} .08633641  
{txt}        63{c |} {space 3} {res}  .6758202 {space 3} {res} .46436577 {space 3} {res} .08646756  
{txt}        64{c |} {space 3} {res} .61578219 {space 3} {res} .46453454 {space 3} {res} .08658754  
{txt}        65{c |} {space 3} {res}  .5610778 {space 3} {res} .46468991 {space 3} {res} .08669725  
{txt}        66{c |} {space 3} {res} .51123319 {space 3} {res} .46483281 {space 3} {res} .08679755  
{txt}        67{c |} {space 3} {res} .46581665 {space 3} {res} .46496411 {space 3} {res}  .0868892  
{txt}* lopt = the lambda that minimizes MSPE.
  Run model: {stata cvlasso, lopt}
{p 0 8 2}^ lse = largest lambda for which MSPE is within one standard error of the minimal MSPE.{p_end}
  Run model: {stata cvlasso, lse}


K-fold cross-validation with 10 folds. Elastic net with alpha=.7.
Fold {res}1 2 3 4 5 6 7 8 9 10 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}      MSPE {space 3} {txt}  st. dev.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res} 92.662686 {space 3} {res} .71871708 {space 3} {res} .15024498  
{txt}         2{c |} {space 3} {res} 80.593279 {space 3} {res}   .692196 {space 3} {res}   .151534  
{txt}         3{c |} {space 3} {res} 70.095924 {space 3} {res}   .649367 {space 3} {res} .15015702  
{txt}         4{c |} {space 3} {res}  60.96586 {space 3} {res} .59749106 {space 3} {res}   .132561  
{txt}         5{c |} {space 3} {res} 53.024996 {space 3} {res} .55791049 {space 3} {res} .11722685  
{txt}         6{c |} {space 3} {res} 46.118437 {space 3} {res} .52889053 {space 3} {res} .10496413  
{txt}         7{c |} {space 3} {res} 40.111465 {space 3} {res} .50890074 {space 3} {res} .09495309  ^
{txt}         8{c |} {space 3} {res} 34.886907 {space 3} {res}  .4935129 {space 3} {res}  .0868307  
{txt}         9{c |} {space 3} {res} 30.342852 {space 3} {res} .48065001 {space 3} {res} .08045103  
{txt}        10{c |} {space 3} {res} 26.390665 {space 3} {res} .47058577 {space 3} {res} .07569552  
{txt}        11{c |} {space 3} {res} 22.953255 {space 3} {res} .46300462 {space 3} {res} .07191325  
{txt}        12{c |} {space 3} {res} 19.963571 {space 3} {res} .45761851 {space 3} {res} .06928058  
{txt}        13{c |} {space 3} {res} 17.363296 {space 3} {res} .45354159 {space 3} {res} .06753817  
{txt}        14{c |} {space 3} {res} 15.101709 {space 3} {res} .45001457 {space 3} {res} .06636666  
{txt}        15{c |} {space 3} {res} 13.134696 {space 3} {res} .44866728 {space 3} {res} .06606004  
{txt}        16{c |} {space 3} {res} 11.423889 {space 3} {res} .44846526 {space 3} {res}  .0662196  *
{txt}        17{c |} {space 3} {res} 9.9359161 {space 3} {res} .44979554 {space 3} {res} .06696856  
{txt}        18{c |} {space 3} {res} 8.6417531 {space 3} {res} .45120296 {space 3} {res} .06816425  
{txt}        19{c |} {space 3} {res} 7.5161562 {space 3} {res} .45287378 {space 3} {res} .06955738  
{txt}        20{c |} {space 3} {res} 6.5371693 {space 3} {res} .45252435 {space 3} {res} .07034408  
{txt}        21{c |} {space 3} {res} 5.6856965 {space 3} {res} .45349709 {space 3} {res} .07160264  
{txt}        22{c |} {space 3} {res} 4.9451289 {space 3} {res} .45528568 {space 3} {res}  .0734801  
{txt}        23{c |} {space 3} {res} 4.3010209 {space 3} {res} .45602662 {space 3} {res} .07477189  
{txt}        24{c |} {space 3} {res} 3.7408086 {space 3} {res} .45690453 {space 3} {res} .07607176  
{txt}        25{c |} {space 3} {res} 3.2535646 {space 3} {res} .45756592 {space 3} {res} .07738015  
{txt}        26{c |} {space 3} {res} 2.8297845 {space 3} {res} .45811331 {space 3} {res} .07862287  
{txt}        27{c |} {space 3} {res} 2.4612023 {space 3} {res}  .4587565 {space 3} {res} .07975921  
{txt}        28{c |} {space 3} {res} 2.1406282 {space 3} {res} .45946497 {space 3} {res} .08078237  
{txt}        29{c |} {space 3} {res} 1.8618093 {space 3} {res} .46019523 {space 3} {res} .08169775  
{txt}        30{c |} {space 3} {res} 1.6193068 {space 3} {res} .46091754 {space 3} {res} .08251262  
{txt}        31{c |} {space 3} {res} 1.4083904 {space 3} {res} .46161228 {space 3} {res} .08323518  
{txt}        32{c |} {space 3} {res} 1.2249462 {space 3} {res} .46226724 {space 3} {res} .08387385  
{txt}        33{c |} {space 3} {res} 1.0653957 {space 3} {res} .46279639 {space 3} {res} .08440947  
{txt}        34{c |} {space 3} {res} .92662686 {space 3} {res} .46317193 {space 3} {res} .08484126  
{txt}        35{c |} {space 3} {res} .80593279 {space 3} {res} .46352032 {space 3} {res} .08522068  
{txt}        36{c |} {space 3} {res} .70095924 {space 3} {res} .46383988 {space 3} {res} .08555359  
{txt}        37{c |} {space 3} {res}  .6096586 {space 3} {res} .46413036 {space 3} {res} .08584532  
{txt}        38{c |} {space 3} {res} .53024996 {space 3} {res} .46439255 {space 3} {res} .08610069  
{txt}        39{c |} {space 3} {res} .46118437 {space 3} {res} .46462782 {space 3} {res} .08632403  
{txt}        40{c |} {space 3} {res} .40111465 {space 3} {res} .46483793 {space 3} {res} .08651921  
{txt}        41{c |} {space 3} {res} .34886907 {space 3} {res} .46502483 {space 3} {res} .08668967  
{txt}        42{c |} {space 3} {res} .30342852 {space 3} {res} .46519053 {space 3} {res} .08683845  
{txt}        43{c |} {space 3} {res} .26390665 {space 3} {res} .46533705 {space 3} {res} .08696825  
{txt}        44{c |} {space 3} {res} .22953255 {space 3} {res} .46546629 {space 3} {res} .08708144  
{txt}        45{c |} {space 3} {res} .19963571 {space 3} {res} .46558006 {space 3} {res} .08718012  
{txt}* lopt = the lambda that minimizes MSPE.
  Run model: {stata cvlasso, lopt}
{p 0 8 2}^ lse = largest lambda for which MSPE is within one standard error of the minimal MSPE.{p_end}
  Run model: {stata cvlasso, lse}


K-fold cross-validation with 10 folds. Elastic net with alpha=1.
Fold {res}1 2 3 4 5 6 7 8 9 10 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}      MSPE {space 3} {txt}  st. dev.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res}  64.86388 {space 3} {res} .71826991 {space 3} {res} .15027898  
{txt}         2{c |} {space 3} {res} 52.613093 {space 3} {res} .66575178 {space 3} {res} .15142141  
{txt}         3{c |} {space 3} {res} 42.676102 {space 3} {res} .58806858 {space 3} {res} .13009676  
{txt}         4{c |} {space 3} {res} 34.615902 {space 3} {res} .53145205 {space 3} {res} .10658264  
{txt}         5{c |} {space 3} {res} 28.078025 {space 3} {res} .49959732 {space 3} {res} .09110491  ^
{txt}         6{c |} {space 3} {res} 22.774952 {space 3} {res} .48124553 {space 3} {res} .08015093  
{txt}         7{c |} {space 3} {res} 18.473466 {space 3} {res} .46826185 {space 3} {res} .07320195  
{txt}         8{c |} {space 3} {res} 14.984398 {space 3} {res} .45927215 {space 3} {res} .06917883  
{txt}         9{c |} {space 3} {res} 12.154307 {space 3} {res} .45387051 {space 3} {res} .06705988  
{txt}        10{c |} {space 3} {res} 9.8587331 {space 3} {res} .45139829 {space 3} {res} .06649804  
{txt}        11{c |} {space 3} {res} 7.9967223 {space 3} {res} .45104477 {space 3} {res} .06680732  *
{txt}        12{c |} {space 3} {res}  6.486388 {space 3} {res}  .4530947 {space 3} {res} .06835878  
{txt}        13{c |} {space 3} {res} 5.2613093 {space 3} {res} .45514309 {space 3} {res} .07040594  
{txt}        14{c |} {space 3} {res} 4.2676102 {space 3} {res} .45457664 {space 3} {res} .07162104  
{txt}        15{c |} {space 3} {res} 3.4615902 {space 3} {res} .45684396 {space 3} {res} .07428281  
{txt}        16{c |} {space 3} {res} 2.8078025 {space 3} {res} .45799685 {space 3} {res} .07621494  
{txt}        17{c |} {space 3} {res} 2.2774952 {space 3} {res}  .4590032 {space 3} {res} .07813456  
{txt}        18{c |} {space 3} {res} 1.8473466 {space 3} {res} .45975818 {space 3} {res} .07986978  
{txt}        19{c |} {space 3} {res} 1.4984398 {space 3} {res} .46063849 {space 3} {res} .08136365  
{txt}        20{c |} {space 3} {res} 1.2154307 {space 3} {res} .46157573 {space 3} {res}  .0826169  
{txt}        21{c |} {space 3} {res} .98587331 {space 3} {res} .46248281 {space 3} {res} .08365911  
{txt}        22{c |} {space 3} {res} .79967223 {space 3} {res} .46329178 {space 3} {res} .08451236  
{txt}        23{c |} {space 3} {res}  .6486388 {space 3} {res} .46375288 {space 3} {res} .08512431  
{txt}        24{c |} {space 3} {res} .52613093 {space 3} {res} .46416821 {space 3} {res}  .0856268  
{txt}        25{c |} {space 3} {res} .42676102 {space 3} {res} .46453227 {space 3} {res} .08603833  
{txt}        26{c |} {space 3} {res} .34615902 {space 3} {res} .46484545 {space 3} {res} .08637468  
{txt}        27{c |} {space 3} {res} .28078025 {space 3} {res} .46511125 {space 3} {res} .08664916  
{txt}        28{c |} {space 3} {res} .22774952 {space 3} {res} .46533459 {space 3} {res} .08687287  
{txt}        29{c |} {space 3} {res} .18473466 {space 3} {res} .46552084 {space 3} {res} .08705503  
{txt}        30{c |} {space 3} {res} .14984398 {space 3} {res} .46567526 {space 3} {res} .08720325  
{txt}        31{c |} {space 3} {res} .12154307 {space 3} {res} .46580273 {space 3} {res} .08732377  
{txt}* lopt = the lambda that minimizes MSPE.
  Run model: {stata cvlasso, lopt}
{p 0 8 2}^ lse = largest lambda for which MSPE is within one standard error of the minimal MSPE.{p_end}
  Run model: {stata cvlasso, lse}

Cross-validation over alpha (0 .3 .7 1).
{col 10}alpha {c |} lopt*{col 30} Minimum MSPE
{col 4}{hline 12}{c +}{hline 28}
{res}{col 10}0.000{txt}{col 16}{c |}{res}{col 17}  37.99091{col 30} .43895888{txt}{col 42}#
{res}{col 10}0.300{txt}{col 16}{c |}{res}{col 17} 25.444197{col 30} .44290922
{col 10}0.700{txt}{col 16}{c |}{res}{col 17} 11.423889{col 30} .44846526
{col 10}1.000{txt}{col 16}{c |}{res}{col 17} 7.9967223{col 30} .45104477
{txt}* lambda value that minimizes MSPE for a given alpha
# alpha value that minimizes MSPE
Estimate lasso with lambda=322.829 (lse) and alpha=0.

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Ridge   Post-est OLS
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      0.1058337      0.3897536
{txt}{space 10}lweight {c |}{col 21}{res}      0.2526587      0.7911376
{txt}{space 14}age {c |}{col 21}{res}      0.0020592     -0.0203522
{txt}{space 13}lbph {c |}{col 21}{res}      0.0472349      0.1026400
{txt}{space 14}svi {c |}{col 21}{res}      0.0438079     -0.2764415
{txt}{space 14}lcp {c |}{col 21}{res}      0.0283852     -0.0959183
{txt}{space 10}gleason {c |}{col 21}{res}      0.0772877      0.2326491
{txt}{space 12}pgg45 {c |}{col 21}{res}      0.0015740      0.0026209
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##examples_partialling:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}_cons {c |}{col 21}{res}      0.2913004     -1.5876684
{txt}{hline 18}{c BT}{hline 32}
Use e(b) from previous lasso2 estimation (lambda=322.8290612345).
(69 missing values generated)

{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Ridge   Post-est OLS
{hline 18}{c +}{hline 32}
{space 11}lcavol {c |}{col 21}{res}      0.1058337      0.3897536
{txt}{space 10}lweight {c |}{col 21}{res}      0.2526587      0.7911376
{txt}{space 14}age {c |}{col 21}{res}      0.0020592     -0.0203522
{txt}{space 13}lbph {c |}{col 21}{res}      0.0472349      0.1026400
{txt}{space 14}svi {c |}{col 21}{res}      0.0438079     -0.2764415
{txt}{space 14}lcp {c |}{col 21}{res}      0.0283852     -0.0959183
{txt}{space 10}gleason {c |}{col 21}{res}      0.0772877      0.2326491
{txt}{space 12}pgg45 {c |}{col 21}{res}      0.0015740      0.0026209
{txt}{hline 18}{c +}{hline 32}
{col 4}Partialled-out{help lasso2##examples_partialling:*}{c |}
{hline 18}{c +}{hline 32}
{space 12}_cons {c |}{col 21}{res}      0.2913004     -1.5876684
{txt}{hline 18}{c BT}{hline 32}
Use e(b) from previous lasso2 estimation (lambda=322.8290612345).
(69 missing values generated)
mreldif=0. tolerance = .01
{res}
{txt}__000000[1,9]
       lcavol    lweight        age       lbph        svi        lcp
y1 {res}  .1058337   .2526587  .00205917  .04723489  .04380792  .02838524

{txt}      gleason      pgg45      _cons
y1 {res}  .0772877  .00157398  .29130041
{reset}{res}
{txt}__000001[1,9]
       lcavol    lweight        age       lbph        svi        lcp
y1 {res}  .1058337   .2526587  .00205917  .04723489  .04380792  .02838524

{txt}      gleason      pgg45      _cons
y1 {res}  .0772877  .00157398  .29130041
{reset}r; t=2.91 16:44:13

{com}. *
. 
. ********************************************************************************
. *** partial                                                                                      ***
. ********************************************************************************
. 
. 
. * load example data
. insheet using "$prostate", tab clear
{txt}(11 vars, 97 obs)
r; t=0.19 16:44:14

{com}. 
. cvlasso $model, partial(svi) saveest(m)

{txt}K-fold cross-validation with 10 folds. Elastic net with alpha=1.
Fold {res}1 2 3 4 5 6 7 8 9 10 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}      MSPE {space 3} {txt}  st. dev.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res} 113.54767 {space 3} {res} .92810044 {space 3} {res} .14125823  
{txt}         2{c |} {space 3} {res} 103.46041 {space 3} {res} .89743208 {space 3} {res} .13984793  
{txt}         3{c |} {space 3} {res} 94.269272 {space 3} {res} .84698786 {space 3} {res} .12962102  
{txt}         4{c |} {space 3} {res} 85.894649 {space 3} {res}  .8034353 {space 3} {res} .12009755  
{txt}         5{c |} {space 3} {res} 78.264005 {space 3} {res} .76717895 {space 3} {res} .11193551  
{txt}         6{c |} {space 3} {res} 71.311247 {space 3} {res} .73687106 {space 3} {res} .10496926  
{txt}         7{c |} {space 3} {res} 64.976152 {space 3} {res} .70977163 {space 3} {res} .09887212  
{txt}         8{c |} {space 3} {res}  59.20385 {space 3} {res} .68491422 {space 3} {res} .09353112  
{txt}         9{c |} {space 3} {res} 53.944343 {space 3} {res} .66029017 {space 3} {res} .08846888  
{txt}        10{c |} {space 3} {res} 49.152076 {space 3} {res} .63675856 {space 3} {res} .08373702  
{txt}        11{c |} {space 3} {res} 44.785541 {space 3} {res}  .6171784 {space 3} {res} .07978601  
{txt}        12{c |} {space 3} {res} 40.806917 {space 3} {res} .60088269 {space 3} {res} .07648243  ^
{txt}        13{c |} {space 3} {res} 37.181743 {space 3} {res}  .5875348 {space 3} {res} .07382533  
{txt}        14{c |} {space 3} {res}  33.87862 {space 3} {res} .57693934 {space 3} {res} .07171871  
{txt}        15{c |} {space 3} {res} 30.868936 {space 3} {res}  .5682703 {space 3} {res} .07000492  
{txt}        16{c |} {space 3} {res} 28.126625 {space 3} {res} .56120868 {space 3} {res} .06876519  
{txt}        17{c |} {space 3} {res} 25.627933 {space 3} {res} .55518126 {space 3} {res} .06848201  
{txt}        18{c |} {space 3} {res} 23.351218 {space 3} {res} .55046904 {space 3} {res} .06858147  
{txt}        19{c |} {space 3} {res}  21.27676 {space 3} {res} .54676171 {space 3} {res} .06879055  
{txt}        20{c |} {space 3} {res} 19.386592 {space 3} {res} .54398718 {space 3} {res} .06907625  
{txt}        21{c |} {space 3} {res}  17.66434 {space 3} {res} .54191837 {space 3} {res} .06939279  
{txt}        22{c |} {space 3} {res} 16.095089 {space 3} {res} .54003365 {space 3} {res}  .0696544  
{txt}        23{c |} {space 3} {res} 14.665246 {space 3} {res} .53852262 {space 3} {res} .06989421  
{txt}        24{c |} {space 3} {res} 13.362426 {space 3} {res} .53812578 {space 3} {res} .07012989  
{txt}        25{c |} {space 3} {res} 12.175345 {space 3} {res} .53832579 {space 3} {res} .07035321  
{txt}        26{c |} {space 3} {res} 11.093721 {space 3} {res} .53826037 {space 3} {res} .07056447  
{txt}        27{c |} {space 3} {res} 10.108185 {space 3} {res} .53786967 {space 3} {res} .07093189  
{txt}        28{c |} {space 3} {res} 9.2102017 {space 3} {res} .53713298 {space 3} {res} .07087962  
{txt}        29{c |} {space 3} {res} 8.3919928 {space 3} {res} .53665065 {space 3} {res} .07106639  
{txt}        30{c |} {space 3} {res} 7.6464713 {space 3} {res} .53605999 {space 3} {res} .07151172  
{txt}        31{c |} {space 3} {res} 6.9671798 {space 3} {res} .53526344 {space 3} {res} .07217222  
{txt}        32{c |} {space 3} {res} 6.3482348 {space 3} {res} .53469694 {space 3} {res} .07280828  
{txt}        33{c |} {space 3} {res} 5.7842751 {space 3} {res} .53403281 {space 3} {res} .07343641  
{txt}        34{c |} {space 3} {res}  5.270416 {space 3} {res} .53351888 {space 3} {res} .07403369  
{txt}        35{c |} {space 3} {res} 4.8022068 {space 3} {res} .53316651 {space 3} {res} .07459398  
{txt}        36{c |} {space 3} {res}  4.375592 {space 3} {res} .53194544 {space 3} {res} .07533791  
{txt}        37{c |} {space 3} {res} 3.9868765 {space 3} {res} .53071925 {space 3} {res} .07607058  
{txt}        38{c |} {space 3} {res} 3.6326933 {space 3} {res} .52969279 {space 3} {res} .07673514  
{txt}        39{c |} {space 3} {res} 3.3099749 {space 3} {res} .52884208 {space 3} {res} .07733835  
{txt}        40{c |} {space 3} {res} 3.0159258 {space 3} {res}  .5281428 {space 3} {res} .07788621  
{txt}        41{c |} {space 3} {res} 2.7479993 {space 3} {res} .52728948 {space 3} {res} .07835937  
{txt}        42{c |} {space 3} {res} 2.5038746 {space 3} {res} .52648626 {space 3} {res} .07878276  
{txt}        43{c |} {space 3} {res} 2.2814373 {space 3} {res} .52579993 {space 3} {res} .07916793  
{txt}        44{c |} {space 3} {res} 2.0787607 {space 3} {res} .52521238 {space 3} {res} .07951832  
{txt}        45{c |} {space 3} {res} 1.8940893 {space 3} {res} .52468293 {space 3} {res} .07983516  
{txt}        46{c |} {space 3} {res} 1.7258236 {space 3} {res} .52420837 {space 3} {res} .08012221  
{txt}        47{c |} {space 3} {res} 1.5725062 {space 3} {res} .52379813 {space 3} {res} .08038341  
{txt}        48{c |} {space 3} {res} 1.4328091 {space 3} {res} .52342923 {space 3} {res} .08061638  
{txt}        49{c |} {space 3} {res} 1.3055223 {space 3} {res} .52310885 {space 3} {res} .08082854  
{txt}        50{c |} {space 3} {res} 1.1895433 {space 3} {res} .52282994 {space 3} {res} .08102172  
{txt}        51{c |} {space 3} {res} 1.0838675 {space 3} {res} .52258662 {space 3} {res} .08119763  
{txt}        52{c |} {space 3} {res} .98757974 {space 3} {res} .52237389 {space 3} {res}  .0813578  
{txt}        53{c |} {space 3} {res} .89984588 {space 3} {res}  .5221875 {space 3} {res} .08150366  
{txt}        54{c |} {space 3} {res} .81990605 {space 3} {res} .52202385 {space 3} {res} .08163648  
{txt}        55{c |} {space 3} {res} .74706786 {space 3} {res} .52187987 {space 3} {res} .08175743  
{txt}        56{c |} {space 3} {res} .68070041 {space 3} {res} .52175295 {space 3} {res} .08186759  
{txt}        57{c |} {space 3} {res} .62022886 {space 3} {res} .52164084 {space 3} {res}  .0819679  
{txt}        58{c |} {space 3} {res} .56512944 {space 3} {res} .52154162 {space 3} {res} .08205927  
{txt}        59{c |} {space 3} {res} .51492489 {space 3} {res} .52145366 {space 3} {res} .08214248  
{txt}        60{c |} {space 3} {res} .46918039 {space 3} {res} .52137554 {space 3} {res} .08221827  
{txt}        61{c |} {space 3} {res} .42749969 {space 3} {res} .52130604 {space 3} {res} .08228731  
{txt}        62{c |} {space 3} {res}  .3895218 {space 3} {res} .52124411 {space 3} {res} .08235019  
{txt}        63{c |} {space 3} {res} .35491776 {space 3} {res} .52118884 {space 3} {res} .08240746  
{txt}        64{c |} {space 3} {res} .32338784 {space 3} {res} .52114055 {space 3} {res} .08245931  *
{txt}* lopt = the lambda that minimizes MSPE.
  Run model: {stata cvlasso, lopt}
{p 0 8 2}^ lse = largest lambda for which MSPE is within one standard error of the minimal MSPE.{p_end}
  Run model: {stata cvlasso, lse}
{err}Warning: lopt is at the limit of the lambda range.
{txt}r; t=0.68 16:44:14

{com}. 
. // make sure that partial works
. estimates restore m1
{txt}(results {stata estimates replay m1:m1} are active now)
r; t=0.00 16:44:14

{com}. assert "`e(partial)'"=="svi"
{txt}r; t=0.00 16:44:14

{com}. 
. 
. ********************************************************************************
. *** misc options/syntax checks                                                   ***
. ********************************************************************************
. 
. // Support for inrange(.) and similar [if] expressions:
. cvlasso $model if inrange(age,50,70)

{txt}K-fold cross-validation with 10 folds. Elastic net with alpha=1.
Fold {res}1 2 3 4 5 6 7 8 9 10 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}      MSPE {space 3} {txt}  st. dev.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res} 132.46591 {space 3} {res} 1.3468706 {space 3} {res} .28051017  
{txt}         2{c |} {space 3} {res}   120.698 {space 3} {res} 1.2663279 {space 3} {res} .28277885  
{txt}         3{c |} {space 3} {res} 109.97553 {space 3} {res} 1.1638371 {space 3} {res}   .264536  
{txt}         4{c |} {space 3} {res}  100.2056 {space 3} {res} 1.0770413 {space 3} {res} .24756594  
{txt}         5{c |} {space 3} {res} 91.303614 {space 3} {res} 1.0050165 {space 3} {res} .23294401  
{txt}         6{c |} {space 3} {res} 83.192453 {space 3} {res} .94628701 {space 3} {res} .22011741  
{txt}         7{c |} {space 3} {res} 75.801865 {space 3} {res} .89729298 {space 3} {res} .20917878  
{txt}         8{c |} {space 3} {res} 69.067836 {space 3} {res} .85344967 {space 3} {res} .19961019  
{txt}         9{c |} {space 3} {res}  62.93204 {space 3} {res} .81748443 {space 3} {res} .19107086  
{txt}        10{c |} {space 3} {res} 57.341331 {space 3} {res} .78605508 {space 3} {res} .18244682  
{txt}        11{c |} {space 3} {res} 52.247285 {space 3} {res} .75803541 {space 3} {res} .17315602  
{txt}        12{c |} {space 3} {res}  47.60578 {space 3} {res} .73426303 {space 3} {res} .16502049  
{txt}        13{c |} {space 3} {res} 43.376614 {space 3} {res} .71347782 {space 3} {res} .15833262  ^
{txt}        14{c |} {space 3} {res} 39.523155 {space 3} {res} .69707931 {space 3} {res} .15282169  
{txt}        15{c |} {space 3} {res} 36.012027 {space 3} {res} .68237011 {space 3} {res} .14860429  
{txt}        16{c |} {space 3} {res} 32.812818 {space 3} {res} .66879212 {space 3} {res} .14538535  
{txt}        17{c |} {space 3} {res} 29.897817 {space 3} {res} .65590514 {space 3} {res} .14211631  
{txt}        18{c |} {space 3} {res} 27.241778 {space 3} {res} .64503617 {space 3} {res} .13902259  
{txt}        19{c |} {space 3} {res} 24.821693 {space 3} {res} .63562948 {space 3} {res} .13625794  
{txt}        20{c |} {space 3} {res} 22.616602 {space 3} {res} .62762356 {space 3} {res} .13380436  
{txt}        21{c |} {space 3} {res} 20.607406 {space 3} {res} .62128712 {space 3} {res} .13161579  
{txt}        22{c |} {space 3} {res} 18.776701 {space 3} {res} .61607581 {space 3} {res} .12968819  
{txt}        23{c |} {space 3} {res}  17.10863 {space 3} {res} .61188759 {space 3} {res} .12804577  
{txt}        24{c |} {space 3} {res} 15.588747 {space 3} {res} .60874875 {space 3} {res} .12669098  
{txt}        25{c |} {space 3} {res} 14.203885 {space 3} {res} .60648266 {space 3} {res} .12563051  
{txt}        26{c |} {space 3} {res} 12.942051 {space 3} {res} .60418992 {space 3} {res}  .1247094  
{txt}        27{c |} {space 3} {res} 11.792315 {space 3} {res} .60248719 {space 3} {res} .12397669  
{txt}        28{c |} {space 3} {res} 10.744718 {space 3} {res} .60136927 {space 3} {res} .12343029  *
{txt}        29{c |} {space 3} {res} 9.7901873 {space 3} {res} .60170297 {space 3} {res} .12349762  
{txt}        30{c |} {space 3} {res}  8.920454 {space 3} {res} .60234317 {space 3} {res} .12368115  
{txt}        31{c |} {space 3} {res} 8.1279855 {space 3} {res} .60310956 {space 3} {res} .12391603  
{txt}        32{c |} {space 3} {res} 7.4059177 {space 3} {res} .60395984 {space 3} {res} .12418638  
{txt}        33{c |} {space 3} {res} 6.7479964 {space 3} {res} .60485137 {space 3} {res}  .1244796  
{txt}        34{c |} {space 3} {res}  6.148523 {space 3} {res} .60592188 {space 3} {res}  .1248269  
{txt}        35{c |} {space 3} {res} 5.6023051 {space 3} {res} .60767394 {space 3} {res} .12536162  
{txt}        36{c |} {space 3} {res} 5.1046118 {space 3} {res} .60948033 {space 3} {res} .12584599  
{txt}        37{c |} {space 3} {res} 4.6511321 {space 3} {res} .61207075 {space 3} {res} .12637019  
{txt}        38{c |} {space 3} {res} 4.2379384 {space 3} {res} .61464505 {space 3} {res} .12688897  
{txt}        39{c |} {space 3} {res} 3.8614516 {space 3} {res} .61752709 {space 3} {res} .12755684  
{txt}        40{c |} {space 3} {res} 3.5184109 {space 3} {res} .62052791 {space 3} {res} .12828173  
{txt}        41{c |} {space 3} {res}  3.205845 {space 3} {res} .62334868 {space 3} {res} .12897082  
{txt}        42{c |} {space 3} {res} 2.9210465 {space 3} {res}  .6260554 {space 3} {res} .12963867  
{txt}        43{c |} {space 3} {res} 2.6615488 {space 3} {res} .62856219 {space 3} {res} .13031667  
{txt}        44{c |} {space 3} {res} 2.4251041 {space 3} {res} .63088099 {space 3} {res} .13095931  
{txt}        45{c |} {space 3} {res} 2.2096646 {space 3} {res} .63277656 {space 3} {res} .13152733  
{txt}        46{c |} {space 3} {res} 2.0133641 {space 3} {res} .63433622 {space 3} {res} .13205671  
{txt}        47{c |} {space 3} {res} 1.8345024 {space 3} {res} .63558327 {space 3} {res}  .1326299  
{txt}        48{c |} {space 3} {res} 1.6715302 {space 3} {res} .63671747 {space 3} {res} .13317138  
{txt}        49{c |} {space 3} {res} 1.5230361 {space 3} {res} .63775095 {space 3} {res} .13366803  
{txt}        50{c |} {space 3} {res} 1.3877338 {space 3} {res} .63873225 {space 3} {res} .13412088  
{txt}        51{c |} {space 3} {res} 1.2644513 {space 3} {res} .63965926 {space 3} {res} .13453374  
{txt}        52{c |} {space 3} {res} 1.1521209 {space 3} {res} .64053124 {space 3} {res} .13491011  
{txt}        53{c |} {space 3} {res} 1.0497697 {space 3} {res} .64134842 {space 3} {res} .13525318  
{txt}        54{c |} {space 3} {res} .95651105 {space 3} {res} .64211183 {space 3} {res} .13556589  
{txt}        55{c |} {space 3} {res} .87153724 {space 3} {res} .64280169 {space 3} {res} .13585909  
{txt}        56{c |} {space 3} {res} .79411228 {space 3} {res} .64342633 {space 3} {res} .13613282  
{txt}        57{c |} {space 3} {res} .72356553 {space 3} {res}  .6440069 {space 3} {res} .13638206  
{txt}        58{c |} {space 3} {res} .65928596 {space 3} {res} .64454537 {space 3} {res} .13660901  
{txt}        59{c |} {space 3} {res} .60071681 {space 3} {res} .64504388 {space 3} {res} .13681568  
{txt}        60{c |} {space 3} {res} .54735079 {space 3} {res} .64534099 {space 3} {res} .13692261  
{txt}        61{c |} {space 3} {res} .49872565 {space 3} {res} .64560982 {space 3} {res} .13701649  
{txt}        62{c |} {space 3} {res} .45442024 {space 3} {res} .64584187 {space 3} {res} .13710724  
{txt}        63{c |} {space 3} {res}  .4140508 {space 3} {res} .64605003 {space 3} {res} .13719209  
{txt}        64{c |} {space 3} {res} .37726767 {space 3} {res}   .646243 {space 3} {res} .13726943  
{txt}        65{c |} {space 3} {res} .34375225 {space 3} {res} .64642158 {space 3} {res} .13733993  
{txt}        66{c |} {space 3} {res} .31321425 {space 3} {res} .64658657 {space 3} {res} .13740419  
{txt}        67{c |} {space 3} {res} .28538915 {space 3} {res} .64673881 {space 3} {res} .13746276  
{txt}        68{c |} {space 3} {res} .26003597 {space 3} {res} .64687909 {space 3} {res} .13751615  
{txt}* lopt = the lambda that minimizes MSPE.
  Run model: {stata cvlasso, lopt}
{p 0 8 2}^ lse = largest lambda for which MSPE is within one standard error of the minimal MSPE.{p_end}
  Run model: {stata cvlasso, lse}
r; t=0.32 16:44:15

{com}. 
. ********************************************************************************
. *** plotting                                                                                             ***
. ********************************************************************************
. 
. * load example data
. insheet using "$prostate", tab clear
{txt}(11 vars, 97 obs)
r; t=0.18 16:44:15

{com}. 
. cvlasso $model, plotcv

{txt}K-fold cross-validation with 10 folds. Elastic net with alpha=1.
Fold {res}1 2 3 4 5 6 7 8 9 10 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}      MSPE {space 3} {txt}  st. dev.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res} 163.62492 {space 3} {res}  1.333319 {space 3} {res} .20089729  
{txt}         2{c |} {space 3} {res} 149.08894 {space 3} {res} 1.2420647 {space 3} {res} .19385317  
{txt}         3{c |} {space 3} {res} 135.84429 {space 3} {res} 1.1387822 {space 3} {res}   .177899  
{txt}         4{c |} {space 3} {res} 123.77625 {space 3} {res} 1.0531517 {space 3} {res} .16424841  
{txt}         5{c |} {space 3} {res} 112.78031 {space 3} {res} .98216599 {space 3} {res} .15250138  
{txt}         6{c |} {space 3} {res} 102.76122 {space 3} {res} .92332908 {space 3} {res} .14233858  
{txt}         7{c |} {space 3} {res} 93.632197 {space 3} {res} .87456976 {space 3} {res} .13350476  
{txt}         8{c |} {space 3} {res} 85.314171 {space 3} {res} .83420647 {space 3} {res} .12570416  
{txt}         9{c |} {space 3} {res} 77.735095 {space 3} {res} .79993609 {space 3} {res} .11875212  
{txt}        10{c |} {space 3} {res} 70.829323 {space 3} {res} .76609365 {space 3} {res} .11248448  
{txt}        11{c |} {space 3} {res} 64.537041 {space 3} {res} .73282703 {space 3} {res} .10780767  
{txt}        12{c |} {space 3} {res} 58.803749 {space 3} {res} .69912922 {space 3} {res} .10256908  
{txt}        13{c |} {space 3} {res} 53.579786 {space 3} {res}   .669818 {space 3} {res}  .0976207  
{txt}        14{c |} {space 3} {res} 48.819905 {space 3} {res} .64551004 {space 3} {res} .09356449  
{txt}        15{c |} {space 3} {res} 44.482879 {space 3} {res} .62537656 {space 3} {res} .09026863  ^
{txt}        16{c |} {space 3} {res} 40.531143 {space 3} {res} .60920075 {space 3} {res} .08743039  
{txt}        17{c |} {space 3} {res} 36.930468 {space 3} {res} .59590953 {space 3} {res} .08515487  
{txt}        18{c |} {space 3} {res} 33.649667 {space 3} {res} .58544829 {space 3} {res} .08345446  
{txt}        19{c |} {space 3} {res} 30.660323 {space 3} {res} .57789692 {space 3} {res} .08243322  
{txt}        20{c |} {space 3} {res} 27.936545 {space 3} {res}  .5724866 {space 3} {res}  .0815623  
{txt}        21{c |} {space 3} {res} 25.454739 {space 3} {res} .56847109 {space 3} {res} .08089575  
{txt}        22{c |} {space 3} {res}  23.19341 {space 3} {res} .56514785 {space 3} {res} .08043522  
{txt}        23{c |} {space 3} {res} 21.132972 {space 3} {res} .56189348 {space 3} {res}  .0802513  
{txt}        24{c |} {space 3} {res} 19.255577 {space 3} {res} .55864494 {space 3} {res} .08044089  
{txt}        25{c |} {space 3} {res} 17.544964 {space 3} {res} .55573796 {space 3} {res} .08074748  
{txt}        26{c |} {space 3} {res} 15.986318 {space 3} {res} .55325411 {space 3} {res} .08111917  
{txt}        27{c |} {space 3} {res} 14.566138 {space 3} {res} .55150312 {space 3} {res} .08129531  
{txt}        28{c |} {space 3} {res} 13.272122 {space 3} {res} .55118766 {space 3} {res} .08146513  
{txt}        29{c |} {space 3} {res} 12.093063 {space 3} {res} .55099552 {space 3} {res} .08177064  
{txt}        30{c |} {space 3} {res} 11.018749 {space 3} {res} .55088363 {space 3} {res} .08210567  
{txt}        31{c |} {space 3} {res} 10.039874 {space 3} {res} .55110601 {space 3} {res} .08242346  
{txt}        32{c |} {space 3} {res} 9.1479589 {space 3} {res} .55111023 {space 3} {res}  .0827693  
{txt}        33{c |} {space 3} {res} 8.3352794 {space 3} {res} .54997427 {space 3} {res} .08318548  
{txt}        34{c |} {space 3} {res} 7.5947962 {space 3} {res} .54846465 {space 3} {res} .08332853  
{txt}        35{c |} {space 3} {res} 6.9200954 {space 3} {res} .54729517 {space 3} {res} .08348564  
{txt}        36{c |} {space 3} {res} 6.3053332 {space 3} {res} .54684846 {space 3} {res} .08385284  
{txt}        37{c |} {space 3} {res} 5.7451848 {space 3} {res} .54691285 {space 3} {res} .08427171  
{txt}        38{c |} {space 3} {res} 5.2347984 {space 3} {res} .54744963 {space 3} {res} .08462423  
{txt}        39{c |} {space 3} {res} 4.7697533 {space 3} {res} .54808502 {space 3} {res} .08495417  
{txt}        40{c |} {space 3} {res} 4.3460216 {space 3} {res} .54879163 {space 3} {res} .08526634  
{txt}        41{c |} {space 3} {res}  3.959933 {space 3} {res} .54933821 {space 3} {res} .08562963  
{txt}        42{c |} {space 3} {res} 3.6081435 {space 3} {res} .54941743 {space 3} {res}  .0860535  
{txt}        43{c |} {space 3} {res}  3.287606 {space 3} {res} .54908836 {space 3} {res} .08649829  
{txt}        44{c |} {space 3} {res} 2.9955441 {space 3} {res} .54875064 {space 3} {res} .08685923  
{txt}        45{c |} {space 3} {res} 2.7294282 {space 3} {res}  .5481921 {space 3} {res} .08695813  
{txt}        46{c |} {space 3} {res} 2.4869533 {space 3} {res} .54742296 {space 3} {res} .08702243  
{txt}        47{c |} {space 3} {res} 2.2660193 {space 3} {res} .54677854 {space 3} {res} .08709007  
{txt}        48{c |} {space 3} {res} 2.0647124 {space 3} {res} .54623847 {space 3} {res} .08716004  
{txt}        49{c |} {space 3} {res}  1.881289 {space 3} {res}  .5457992 {space 3} {res} .08722744  
{txt}        50{c |} {space 3} {res} 1.7141605 {space 3} {res} .54544279 {space 3} {res} .08729181  
{txt}        51{c |} {space 3} {res} 1.5618792 {space 3} {res} .54515446 {space 3} {res} .08735287  
{txt}        52{c |} {space 3} {res} 1.4231261 {space 3} {res} .54492196 {space 3} {res} .08741047  
{txt}        53{c |} {space 3} {res} 1.2966995 {space 3} {res} .54474678 {space 3} {res} .08746371  *
{txt}        54{c |} {space 3} {res} 1.1815043 {space 3} {res} .54477019 {space 3} {res} .08750238  
{txt}        55{c |} {space 3} {res} 1.0765427 {space 3} {res} .54481303 {space 3} {res} .08753934  
{txt}        56{c |} {space 3} {res} .98090565 {space 3} {res} .54486992 {space 3} {res} .08757449  
{txt}        57{c |} {space 3} {res} .89376469 {space 3} {res} .54493659 {space 3} {res} .08760776  
{txt}        58{c |} {space 3} {res}  .8143651 {space 3} {res} .54500964 {space 3} {res} .08763914  
{txt}        59{c |} {space 3} {res} .74201915 {space 3} {res} .54508642 {space 3} {res} .08766863  
{txt}        60{c |} {space 3} {res} .67610021 {space 3} {res} .54516486 {space 3} {res} .08769625  
{txt}        61{c |} {space 3} {res} .61603733 {space 3} {res} .54524338 {space 3} {res} .08772206  
{txt}        62{c |} {space 3} {res} .56131027 {space 3} {res} .54533234 {space 3} {res} .08774575  
{txt}        63{c |} {space 3} {res} .51144502 {space 3} {res} .54544399 {space 3} {res} .08776693  
{txt}        64{c |} {space 3} {res} .46600965 {space 3} {res} .54554976 {space 3} {res} .08778657  
{txt}        65{c |} {space 3} {res} .42461064 {space 3} {res} .54564951 {space 3} {res} .08780475  
{txt}        66{c |} {space 3} {res}  .3868894 {space 3} {res} .54574318 {space 3} {res} .08782155  
{txt}        67{c |} {space 3} {res} .35251921 {space 3} {res} .54583086 {space 3} {res} .08783705  
{txt}        68{c |} {space 3} {res} .32120238 {space 3} {res} .54591267 {space 3} {res} .08785134  
{txt}* lopt = the lambda that minimizes MSPE.
  Run model: {stata cvlasso, lopt}
{p 0 8 2}^ lse = largest lambda for which MSPE is within one standard error of the minimal MSPE.{p_end}
  Run model: {stata cvlasso, lse}
{res}{txt}r; t=7.84 16:44:23

{com}. 
. ********************************************************************************
. *** time-series example with rolling cv                                      ***
. ********************************************************************************
. 
. webuse air2, clear
{txt}(TIMESLAB: Airline passengers)
r; t=0.64 16:44:23

{com}.  
. cvlasso air L(1/12).air, rolling origin(130)
{txt}Rolling forecasting cross-validation with 1-step ahead forecasts. Elastic net with alpha=1.
Training from-to (validation point): {res}13-130 (131), 13-131 (132), 13-132 (133), 13-133 (134), 13-134 (135), 13-135 (136), 13-136 (137), 13-137 (138), 13-138 (139), 13-139 (140), 13-140 (141), 13-141 (142), 13-142 (143), 13-143 (144).
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}      MSPE {space 3} {txt}  st. dev.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res} 30083.535 {space 3} {res} 33237.193 {space 3} {res} 8731.4325  
{txt}         2{c |} {space 3} {res} 27410.996 {space 3} {res} 27799.242 {space 3} {res} 7290.3087  
{txt}         3{c |} {space 3} {res} 24975.879 {space 3} {res} 23267.301 {space 3} {res} 6092.3376  
{txt}         4{c |} {space 3} {res} 22757.091 {space 3} {res} 19493.102 {space 3} {res}  5095.861  
{txt}         5{c |} {space 3} {res} 20735.414 {space 3} {res} 16349.032 {space 3} {res} 4266.8189  
{txt}         6{c |} {space 3} {res} 18893.337 {space 3} {res} 13729.055 {space 3} {res} 3576.9191  
{txt}         7{c |} {space 3} {res} 17214.905 {space 3} {res} 11545.052 {space 3} {res} 3002.6587  
{txt}         8{c |} {space 3} {res}  15685.58 {space 3} {res} 9723.7885 {space 3} {res} 2524.5123  
{txt}         9{c |} {space 3} {res} 14292.116 {space 3} {res} 8204.3942 {space 3} {res} 2126.2578  
{txt}        10{c |} {space 3} {res} 13022.444 {space 3} {res} 6936.2699 {space 3} {res} 1794.4166  
{txt}        11{c |} {space 3} {res} 11865.566 {space 3} {res} 5877.3493 {space 3} {res} 1517.7888  
{txt}        12{c |} {space 3} {res} 10811.462 {space 3} {res} 4992.6553 {space 3} {res} 1287.0672  
{txt}        13{c |} {space 3} {res} 9851.0014 {space 3} {res} 4253.1013 {space 3} {res} 1094.5174  
{txt}        14{c |} {space 3} {res} 8975.8656 {space 3} {res}  3635.824 {space 3} {res} 936.22874  
{txt}        15{c |} {space 3} {res} 8178.4744 {space 3} {res} 3111.7137 {space 3} {res} 812.75242  
{txt}        16{c |} {space 3} {res} 7451.9213 {space 3} {res} 2669.6887 {space 3} {res} 708.75189  
{txt}        17{c |} {space 3} {res} 6789.9131 {space 3} {res} 2300.5206 {space 3} {res} 621.98344  
{txt}        18{c |} {space 3} {res}  6186.716 {space 3} {res} 1992.0343 {space 3} {res} 549.37699  
{txt}        19{c |} {space 3} {res} 5637.1052 {space 3} {res} 1734.1043 {space 3} {res} 488.40062  
{txt}        20{c |} {space 3} {res} 5136.3203 {space 3} {res} 1518.3087 {space 3} {res} 436.97343  
{txt}        21{c |} {space 3} {res} 4680.0237 {space 3} {res} 1337.6412 {space 3} {res} 393.39186  
{txt}        22{c |} {space 3} {res} 4264.2633 {space 3} {res} 1186.2716 {space 3} {res} 356.26673  
{txt}        23{c |} {space 3} {res} 3885.4379 {space 3} {res} 1059.3481 {space 3} {res} 324.46942  
{txt}        24{c |} {space 3} {res} 3540.2663 {space 3} {res}  952.8315 {space 3} {res} 297.08581  
{txt}        25{c |} {space 3} {res} 3225.7588 {space 3} {res} 863.35854 {space 3} {res}  273.3769  
{txt}        26{c |} {space 3} {res} 2939.1913 {space 3} {res}   788.491 {space 3} {res} 252.67635  
{txt}        27{c |} {space 3} {res} 2678.0817 {space 3} {res} 725.70704 {space 3} {res} 234.57369  
{txt}        28{c |} {space 3} {res} 2440.1683 {space 3} {res} 670.22718 {space 3} {res} 218.23327  
{txt}        29{c |} {space 3} {res} 2223.3904 {space 3} {res} 622.52635 {space 3} {res} 203.38451  
{txt}        30{c |} {space 3} {res} 2025.8706 {space 3} {res} 581.16825 {space 3} {res} 190.03867  
{txt}        31{c |} {space 3} {res} 1845.8978 {space 3} {res} 546.16451 {space 3} {res} 178.31137  
{txt}        32{c |} {space 3} {res} 1681.9133 {space 3} {res} 516.49556 {space 3} {res} 168.00213  
{txt}        33{c |} {space 3} {res} 1532.4968 {space 3} {res} 491.30969 {space 3} {res} 158.93797  
{txt}        34{c |} {space 3} {res}  1396.354 {space 3} {res} 469.89498 {space 3} {res} 150.96867  
{txt}        35{c |} {space 3} {res} 1272.3058 {space 3} {res} 451.65601 {space 3} {res}  143.9631  ^
{txt}        36{c |} {space 3} {res} 1159.2776 {space 3} {res} 436.09447 {space 3} {res} 137.80621  
{txt}        37{c |} {space 3} {res} 1056.2906 {space 3} {res} 422.79303 {space 3} {res} 132.39667  
{txt}        38{c |} {space 3} {res} 962.45264 {space 3} {res} 411.40189 {space 3} {res} 127.64501  
{txt}        39{c |} {space 3} {res}   876.951 {space 3} {res} 401.62764 {space 3} {res} 123.47207  
{txt}        40{c |} {space 3} {res} 799.04509 {space 3} {res} 393.22392 {space 3} {res} 119.80779  
{txt}        41{c |} {space 3} {res} 728.06013 {space 3} {res} 385.98373 {space 3} {res} 116.59019  
{txt}        42{c |} {space 3} {res} 663.38127 {space 3} {res}  379.7329 {space 3} {res} 113.76442  
{txt}        43{c |} {space 3} {res} 604.44831 {space 3} {res} 374.32476 {space 3} {res} 111.28209  
{txt}        44{c |} {space 3} {res} 550.75079 {space 3} {res} 369.63567 {space 3} {res} 109.10052  
{txt}        45{c |} {space 3} {res} 501.82361 {space 3} {res} 365.56123 {space 3} {res} 107.18216  
{txt}        46{c |} {space 3} {res} 457.24298 {space 3} {res}  362.0132 {space 3} {res} 105.49406  
{txt}        47{c |} {space 3} {res} 416.62277 {space 3} {res} 358.91691 {space 3} {res} 104.00732  
{txt}        48{c |} {space 3} {res} 379.61115 {space 3} {res} 356.20904 {space 3} {res} 102.69665  
{txt}        49{c |} {space 3} {res} 345.88755 {space 3} {res} 353.83583 {space 3} {res} 101.53998  
{txt}        50{c |} {space 3} {res} 315.15985 {space 3} {res}  352.3553 {space 3} {res} 100.65556  *
{txt}        51{c |} {space 3} {res} 287.16192 {space 3} {res} 356.42305 {space 3} {res} 101.19582  
{txt}        52{c |} {space 3} {res} 261.65124 {space 3} {res} 363.33054 {space 3} {res} 102.75269  
{txt}        53{c |} {space 3} {res} 238.40687 {space 3} {res} 370.44865 {space 3} {res} 105.00085  
{txt}        54{c |} {space 3} {res} 217.22746 {space 3} {res} 372.21202 {space 3} {res} 106.53333  
{txt}        55{c |} {space 3} {res} 197.92957 {space 3} {res} 373.58108 {space 3} {res} 108.17032  
{txt}        56{c |} {space 3} {res} 180.34605 {space 3} {res} 375.89938 {space 3} {res} 109.80358  
{txt}        57{c |} {space 3} {res} 164.32461 {space 3} {res} 378.99098 {space 3} {res} 111.37688  
{txt}        58{c |} {space 3} {res} 149.72646 {space 3} {res} 380.49347 {space 3} {res} 112.55753  
{txt}        59{c |} {space 3} {res} 136.42518 {space 3} {res} 381.08165 {space 3} {res} 113.73224  
{txt}        60{c |} {space 3} {res} 124.30554 {space 3} {res} 381.60207 {space 3} {res} 114.93783  
{txt}        61{c |} {space 3} {res} 113.26258 {space 3} {res} 380.71469 {space 3} {res}  115.6034  
{txt}        62{c |} {space 3} {res} 103.20064 {space 3} {res} 379.53228 {space 3} {res} 116.00241  
{txt}        63{c |} {space 3} {res} 94.032582 {space 3} {res} 380.74666 {space 3} {res} 117.01678  
{txt}        64{c |} {space 3} {res} 85.678986 {space 3} {res} 382.39512 {space 3} {res} 117.92244  
{txt}        65{c |} {space 3} {res} 78.067501 {space 3} {res} 382.00813 {space 3} {res} 118.30133  
{txt}        66{c |} {space 3} {res}   71.1322 {space 3} {res} 379.53614 {space 3} {res} 118.33073  
{txt}        67{c |} {space 3} {res} 64.813011 {space 3} {res} 377.47621 {space 3} {res} 118.59801  
{txt}        68{c |} {space 3} {res} 59.055202 {space 3} {res} 376.71111 {space 3} {res} 119.05724  
{txt}        69{c |} {space 3} {res}   53.8089 {space 3} {res} 376.19828 {space 3} {res} 119.49392  
{txt}        70{c |} {space 3} {res} 49.028666 {space 3} {res} 375.22278 {space 3} {res} 119.97715  
{txt}        71{c |} {space 3} {res} 44.673094 {space 3} {res} 373.26668 {space 3} {res} 120.18322  
{txt}        72{c |} {space 3} {res}  40.70446 {space 3} {res} 372.49456 {space 3} {res} 120.43289  
{txt}        73{c |} {space 3} {res} 37.088388 {space 3} {res} 372.59088 {space 3} {res} 120.82114  
{txt}        74{c |} {space 3} {res} 33.793558 {space 3} {res} 374.04884 {space 3} {res} 121.19229  
{txt}        75{c |} {space 3} {res} 30.791431 {space 3} {res}  377.5105 {space 3} {res} 121.17767  
{txt}        76{c |} {space 3} {res} 28.056005 {space 3} {res} 381.87875 {space 3} {res} 121.00114  
{txt}        77{c |} {space 3} {res} 25.563587 {space 3} {res} 385.86197 {space 3} {res} 120.80072  
{txt}        78{c |} {space 3} {res} 23.292588 {space 3} {res} 389.16575 {space 3} {res} 120.36636  
{txt}        79{c |} {space 3} {res} 21.223339 {space 3} {res} 392.38507 {space 3} {res} 120.08113  
{txt}        80{c |} {space 3} {res} 19.337916 {space 3} {res} 396.88113 {space 3} {res}  120.4689  
{txt}        81{c |} {space 3} {res} 17.619989 {space 3} {res} 402.63138 {space 3} {res} 121.19743  
{txt}        82{c |} {space 3} {res} 16.054678 {space 3} {res} 412.30702 {space 3} {res} 121.83665  
{txt}        83{c |} {space 3} {res} 14.628424 {space 3} {res} 421.09094 {space 3} {res} 121.51485  
{txt}        84{c |} {space 3} {res} 13.328875 {space 3} {res} 426.86241 {space 3} {res}  120.2055  
{txt}        85{c |} {space 3} {res} 12.144775 {space 3} {res} 431.12421 {space 3} {res} 119.04316  
{txt}        86{c |} {space 3} {res} 11.065867 {space 3} {res} 433.74587 {space 3} {res} 118.05604  
{txt}        87{c |} {space 3} {res} 10.082806 {space 3} {res} 436.53986 {space 3} {res} 117.36929  
{txt}        88{c |} {space 3} {res} 9.1870769 {space 3} {res} 439.42206 {space 3} {res} 116.91838  
{txt}        89{c |} {space 3} {res} 8.3709223 {space 3} {res} 442.32753 {space 3} {res} 116.65087  
{txt}        90{c |} {space 3} {res} 7.6272726 {space 3} {res} 445.20676 {space 3} {res}  116.5244  
{txt}        91{c |} {space 3} {res} 6.9496867 {space 3} {res} 448.02273 {space 3} {res} 116.50501  
{txt}        92{c |} {space 3} {res} 6.3322957 {space 3} {res} 450.74836 {space 3} {res} 116.56561  
{txt}        93{c |} {space 3} {res}  5.769752 {space 3} {res} 453.36455 {space 3} {res} 116.68474  
{txt}        94{c |} {space 3} {res} 5.2571831 {space 3} {res} 455.85849 {space 3} {res} 116.84547  
{txt}        95{c |} {space 3} {res} 4.7901495 {space 3} {res} 458.22233 {space 3} {res} 117.03456  
{txt}        96{c |} {space 3} {res} 4.3646058 {space 3} {res} 460.45211 {space 3} {res} 117.24169  
{txt}        97{c |} {space 3} {res} 3.9768663 {space 3} {res} 462.54684 {space 3} {res} 117.45892  
{txt}        98{c |} {space 3} {res} 3.6235724 {space 3} {res} 464.50782 {space 3} {res} 117.68017  
{txt}        99{c |} {space 3} {res} 3.3016642 {space 3} {res} 466.33804 {space 3} {res} 117.90088  
{txt}* lopt = the lambda that minimizes MSPE.
  Run model: {stata cvlasso, lopt}
{p 0 8 2}^ lse = largest lambda for which MSPE is within one standard error of the minimal MSPE.{p_end}
  Run model: {stata cvlasso, lse}
r; t=14.06 16:44:37

{com}. // we should have 144-130=14 folds
. assert 14==`e(nfolds)'
{txt}r; t=0.00 16:44:37

{com}. 
. cvlasso air L(1/12).air, rolling origin(130) h(2)
{txt}Rolling forecasting cross-validation with 2-step ahead forecasts. Elastic net with alpha=1.
Training from-to (validation point): {res}13-130 (132), 13-131 (133), 13-132 (134), 13-133 (135), 13-134 (136), 13-135 (137), 13-136 (138), 13-137 (139), 13-138 (140), 13-139 (141), 13-140 (142), 13-141 (143), 13-142 (144).
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}      MSPE {space 3} {txt}  st. dev.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res} 30083.535 {space 3} {res} 34952.233 {space 3} {res} 8972.5481  
{txt}         2{c |} {space 3} {res} 27410.996 {space 3} {res} 29219.469 {space 3} {res} 7495.1704  
{txt}         3{c |} {space 3} {res} 24975.879 {space 3} {res} 24447.167 {space 3} {res} 6266.3552  
{txt}         4{c |} {space 3} {res} 22757.091 {space 3} {res} 20473.399 {space 3} {res} 5244.0824  
{txt}         5{c |} {space 3} {res} 20735.414 {space 3} {res} 17163.629 {space 3} {res} 4393.4479  
{txt}         6{c |} {space 3} {res} 18893.337 {space 3} {res}  14406.07 {space 3} {res}  3685.457  
{txt}         7{c |} {space 3} {res} 17214.905 {space 3} {res} 12107.831 {space 3} {res} 3096.0221  
{txt}         8{c |} {space 3} {res}  15685.58 {space 3} {res} 10191.716 {space 3} {res} 2605.1314  
{txt}         9{c |} {space 3} {res} 14292.116 {space 3} {res} 8593.5634 {space 3} {res} 2196.1576  
{txt}        10{c |} {space 3} {res} 13022.444 {space 3} {res}  7260.043 {space 3} {res} 1855.2848  
{txt}        11{c |} {space 3} {res} 11865.566 {space 3} {res} 6146.8207 {space 3} {res} 1571.0323  
{txt}        12{c |} {space 3} {res} 10811.462 {space 3} {res} 5217.0365 {space 3} {res} 1333.8591  
{txt}        13{c |} {space 3} {res} 9851.0014 {space 3} {res} 4440.0404 {space 3} {res}  1135.836  
{txt}        14{c |} {space 3} {res} 8975.8656 {space 3} {res} 3792.7368 {space 3} {res} 974.00243  
{txt}        15{c |} {space 3} {res} 8178.4744 {space 3} {res} 3245.1003 {space 3} {res} 846.71514  
{txt}        16{c |} {space 3} {res} 7451.9213 {space 3} {res} 2784.0987 {space 3} {res}  739.5864  
{txt}        17{c |} {space 3} {res} 6789.9131 {space 3} {res} 2399.2025 {space 3} {res} 650.14159  
{txt}        18{c |} {space 3} {res}  6186.716 {space 3} {res} 2077.6828 {space 3} {res} 575.22206  
{txt}        19{c |} {space 3} {res} 5637.1052 {space 3} {res} 1808.9545 {space 3} {res} 512.22553  
{txt}        20{c |} {space 3} {res} 5136.3203 {space 3} {res} 1584.2142 {space 3} {res} 459.01598  
{txt}        21{c |} {space 3} {res} 4680.0237 {space 3} {res} 1396.1389 {space 3} {res} 413.84709  
{txt}        22{c |} {space 3} {res} 4264.2633 {space 3} {res} 1238.6362 {space 3} {res} 375.29686  
{txt}        23{c |} {space 3} {res} 3885.4379 {space 3} {res} 1106.6361 {space 3} {res} 342.21155  
{txt}        24{c |} {space 3} {res} 3540.2663 {space 3} {res} 995.91868 {space 3} {res} 313.65775  
{txt}        25{c |} {space 3} {res} 3225.7588 {space 3} {res} 902.97087 {space 3} {res} 288.88156  
{txt}        26{c |} {space 3} {res} 2939.1913 {space 3} {res} 825.34561 {space 3} {res} 267.17892  
{txt}        27{c |} {space 3} {res} 2678.0817 {space 3} {res} 760.38714 {space 3} {res} 248.10453  
{txt}        28{c |} {space 3} {res} 2440.1683 {space 3} {res} 703.31872 {space 3} {res} 230.76798  
{txt}        29{c |} {space 3} {res} 2223.3904 {space 3} {res} 654.06491 {space 3} {res} 214.98796  
{txt}        30{c |} {space 3} {res} 2025.8706 {space 3} {res} 611.52854 {space 3} {res} 200.84841  
{txt}        31{c |} {space 3} {res} 1845.8978 {space 3} {res} 575.54121 {space 3} {res} 188.40654  
{txt}        32{c |} {space 3} {res} 1681.9133 {space 3} {res} 545.05078 {space 3} {res} 177.45417  
{txt}        33{c |} {space 3} {res} 1532.4968 {space 3} {res} 519.17845 {space 3} {res} 167.81145  
{txt}        34{c |} {space 3} {res}  1396.354 {space 3} {res} 497.18977 {space 3} {res} 159.32199  
{txt}        35{c |} {space 3} {res} 1272.3058 {space 3} {res} 478.47059 {space 3} {res} 151.84907  ^
{txt}        36{c |} {space 3} {res} 1159.2776 {space 3} {res}   462.507 {space 3} {res} 145.27259  
{txt}        37{c |} {space 3} {res} 1056.2906 {space 3} {res}  448.8687 {space 3} {res} 139.48664  
{txt}        38{c |} {space 3} {res} 962.45264 {space 3} {res}  437.1951 {space 3} {res} 134.39758  
{txt}        39{c |} {space 3} {res}   876.951 {space 3} {res}  427.1838 {space 3} {res} 129.92244  
{txt}        40{c |} {space 3} {res} 799.04509 {space 3} {res} 418.58096 {space 3} {res}  125.9877  
{txt}        41{c |} {space 3} {res} 728.06013 {space 3} {res} 411.17333 {space 3} {res} 122.52817  
{txt}        42{c |} {space 3} {res} 663.38127 {space 3} {res} 404.78156 {space 3} {res} 119.48615  
{txt}        43{c |} {space 3} {res} 604.44831 {space 3} {res} 399.25467 {space 3} {res} 116.81057  
{txt}        44{c |} {space 3} {res} 550.75079 {space 3} {res} 394.46537 {space 3} {res} 114.45638  
{txt}        45{c |} {space 3} {res} 501.82361 {space 3} {res} 390.30629 {space 3} {res} 112.38385  
{txt}        46{c |} {space 3} {res} 457.24298 {space 3} {res} 386.68666 {space 3} {res} 110.55804  
{txt}        47{c |} {space 3} {res} 416.62277 {space 3} {res} 383.52972 {space 3} {res}  108.9483  
{txt}        48{c |} {space 3} {res} 379.61115 {space 3} {res} 380.77038 {space 3} {res} 107.52773  
{txt}        49{c |} {space 3} {res} 345.88755 {space 3} {res} 378.35345 {space 3} {res} 106.27284  
{txt}        50{c |} {space 3} {res} 315.15985 {space 3} {res} 377.24088 {space 3} {res} 105.38259  *
{txt}        51{c |} {space 3} {res} 287.16192 {space 3} {res} 382.01408 {space 3} {res} 105.95963  
{txt}        52{c |} {space 3} {res} 261.65124 {space 3} {res} 389.65489 {space 3} {res}  107.7111  
{txt}        53{c |} {space 3} {res} 238.40687 {space 3} {res} 396.94246 {space 3} {res} 110.12192  
{txt}        54{c |} {space 3} {res} 217.22746 {space 3} {res} 398.32045 {space 3} {res}  111.7516  
{txt}        55{c |} {space 3} {res} 197.92957 {space 3} {res} 399.72318 {space 3} {res} 113.59134  
{txt}        56{c |} {space 3} {res} 180.34605 {space 3} {res} 401.75368 {space 3} {res} 115.49682  
{txt}        57{c |} {space 3} {res} 164.32461 {space 3} {res} 404.46026 {space 3} {res}  117.3465  
{txt}        58{c |} {space 3} {res} 149.72646 {space 3} {res} 405.28304 {space 3} {res} 118.73463  
{txt}        59{c |} {space 3} {res} 136.42518 {space 3} {res}  405.2511 {space 3} {res}  120.1721  
{txt}        60{c |} {space 3} {res} 124.30554 {space 3} {res}  405.2761 {space 3} {res} 121.62263  
{txt}        61{c |} {space 3} {res} 113.26258 {space 3} {res} 403.59011 {space 3} {res} 122.41581  
{txt}        62{c |} {space 3} {res} 103.20064 {space 3} {res} 401.82587 {space 3} {res} 122.98928  
{txt}        63{c |} {space 3} {res} 94.032582 {space 3} {res} 402.94599 {space 3} {res} 124.26148  
{txt}        64{c |} {space 3} {res} 85.678986 {space 3} {res} 404.20592 {space 3} {res} 125.21789  
{txt}        65{c |} {space 3} {res} 78.067501 {space 3} {res} 403.68408 {space 3} {res} 125.62712  
{txt}        66{c |} {space 3} {res}   71.1322 {space 3} {res} 400.91215 {space 3} {res} 125.64499  
{txt}        67{c |} {space 3} {res} 64.813011 {space 3} {res}  398.9517 {space 3} {res} 126.02457  
{txt}        68{c |} {space 3} {res} 59.055202 {space 3} {res} 397.76927 {space 3} {res} 126.60418  
{txt}        69{c |} {space 3} {res}   53.8089 {space 3} {res} 396.84309 {space 3} {res} 127.16789  
{txt}        70{c |} {space 3} {res} 49.028666 {space 3} {res} 395.36465 {space 3} {res} 127.77929  
{txt}        71{c |} {space 3} {res} 44.673094 {space 3} {res} 392.86311 {space 3} {res} 128.06788  
{txt}        72{c |} {space 3} {res}  40.70446 {space 3} {res} 391.49788 {space 3} {res} 128.48992  
{txt}        73{c |} {space 3} {res} 37.088388 {space 3} {res} 391.07007 {space 3} {res} 129.00451  
{txt}        74{c |} {space 3} {res} 33.793558 {space 3} {res} 392.16177 {space 3} {res} 129.49754  
{txt}        75{c |} {space 3} {res} 30.791431 {space 3} {res} 395.08297 {space 3} {res} 129.54637  
{txt}        76{c |} {space 3} {res} 28.056005 {space 3} {res} 398.32513 {space 3} {res} 129.52706  
{txt}        77{c |} {space 3} {res} 25.563587 {space 3} {res} 401.15399 {space 3} {res} 129.44648  
{txt}        78{c |} {space 3} {res} 23.292588 {space 3} {res} 403.24593 {space 3} {res} 129.10851  
{txt}        79{c |} {space 3} {res} 21.223339 {space 3} {res} 405.54289 {space 3} {res} 128.94792  
{txt}        80{c |} {space 3} {res} 19.337916 {space 3} {res} 409.33005 {space 3} {res} 129.52204  
{txt}        81{c |} {space 3} {res} 17.619989 {space 3} {res} 414.58054 {space 3} {res} 130.50225  
{txt}        82{c |} {space 3} {res} 16.054678 {space 3} {res} 423.29174 {space 3} {res} 131.10197  
{txt}        83{c |} {space 3} {res} 14.628424 {space 3} {res} 431.51624 {space 3} {res} 130.67818  
{txt}        84{c |} {space 3} {res} 13.328875 {space 3} {res} 436.86415 {space 3} {res} 129.31034  
{txt}        85{c |} {space 3} {res} 12.144775 {space 3} {res} 440.37741 {space 3} {res} 128.09369  
{txt}        86{c |} {space 3} {res} 11.065867 {space 3} {res} 442.49849 {space 3} {res} 127.09852  
{txt}        87{c |} {space 3} {res} 10.082806 {space 3} {res} 444.85132 {space 3} {res} 126.41494  
{txt}        88{c |} {space 3} {res} 9.1870769 {space 3} {res} 447.34397 {space 3} {res} 125.97551  
{txt}        89{c |} {space 3} {res} 8.3709223 {space 3} {res}  449.9048 {space 3} {res} 125.72547  
{txt}        90{c |} {space 3} {res} 7.6272726 {space 3} {res} 452.47857 {space 3} {res} 125.62067  
{txt}        91{c |} {space 3} {res} 6.9496867 {space 3} {res} 455.02332 {space 3} {res} 125.62572  
{txt}        92{c |} {space 3} {res} 6.3322957 {space 3} {res} 457.50773 {space 3} {res} 125.71243  
{txt}        93{c |} {space 3} {res}  5.769752 {space 3} {res} 459.90901 {space 3} {res} 125.85849  
{txt}        94{c |} {space 3} {res} 5.2571831 {space 3} {res} 462.21121 {space 3} {res} 126.04634  
{txt}        95{c |} {space 3} {res} 4.7901495 {space 3} {res} 464.40372 {space 3} {res} 126.26225  
{txt}        96{c |} {space 3} {res} 4.3646058 {space 3} {res} 466.48019 {space 3} {res} 126.49555  
{txt}        97{c |} {space 3} {res} 3.9768663 {space 3} {res} 468.43756 {space 3} {res} 126.73804  
{txt}        98{c |} {space 3} {res} 3.6235724 {space 3} {res} 470.27531 {space 3} {res} 126.98348  
{txt}        99{c |} {space 3} {res} 3.3016642 {space 3} {res} 471.99485 {space 3} {res} 127.22718  
{txt}* lopt = the lambda that minimizes MSPE.
  Run model: {stata cvlasso, lopt}
{p 0 8 2}^ lse = largest lambda for which MSPE is within one standard error of the minimal MSPE.{p_end}
  Run model: {stata cvlasso, lse}
r; t=12.55 16:44:50

{com}. // we should have 144-130-1=14 folds
. assert 13==`e(nfolds)'
{txt}r; t=0.00 16:44:50

{com}. 
. cvlasso air L(1/12).air, rolling origin(130) fixedwin
{txt}Rolling forecasting cross-validation with 1-step ahead forecasts. Elastic net with alpha=1.
Training from-to (validation point): {res}13-130 (131), 14-131 (132), 15-132 (133), 16-133 (134), 17-134 (135), 18-135 (136), 19-136 (137), 20-137 (138), 21-138 (139), 22-139 (140), 23-140 (141), 24-141 (142), 25-142 (143), 26-143 (144).
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}      MSPE {space 3} {txt}  st. dev.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res} 30083.535 {space 3} {res} 29342.536 {space 3} {res} 7604.6329  
{txt}         2{c |} {space 3} {res} 27410.996 {space 3} {res} 24556.677 {space 3} {res} 6355.4314  
{txt}         3{c |} {space 3} {res} 24975.879 {space 3} {res}  20570.95 {space 3} {res} 5316.2899  
{txt}         4{c |} {space 3} {res} 22757.091 {space 3} {res} 17250.611 {space 3} {res} 4451.7039  
{txt}         5{c |} {space 3} {res} 20735.414 {space 3} {res} 14483.694 {space 3} {res} 3732.1806  
{txt}         6{c |} {space 3} {res} 18893.337 {space 3} {res} 12177.154 {space 3} {res} 3133.2195  
{txt}         7{c |} {space 3} {res} 17214.905 {space 3} {res} 10253.662 {space 3} {res}  2634.466  
{txt}         8{c |} {space 3} {res}  15685.58 {space 3} {res} 8648.9434 {space 3} {res} 2219.0087  
{txt}         9{c |} {space 3} {res} 14292.116 {space 3} {res} 7309.5692 {space 3} {res} 1872.7961  
{txt}        10{c |} {space 3} {res} 13022.444 {space 3} {res} 6191.1202 {space 3} {res} 1584.1517  
{txt}        11{c |} {space 3} {res} 11865.566 {space 3} {res} 5256.6626 {space 3} {res} 1343.3724  
{txt}        12{c |} {space 3} {res} 10811.462 {space 3} {res} 4475.4822 {space 3} {res} 1142.3943  
{txt}        13{c |} {space 3} {res} 9851.0014 {space 3} {res} 3822.0328 {space 3} {res} 974.51561  
{txt}        14{c |} {space 3} {res} 8975.8656 {space 3} {res} 3272.4349 {space 3} {res} 844.16278  
{txt}        15{c |} {space 3} {res} 8178.4744 {space 3} {res} 2805.5335 {space 3} {res} 735.84716  
{txt}        16{c |} {space 3} {res} 7451.9213 {space 3} {res} 2415.5597 {space 3} {res}  645.3886  
{txt}        17{c |} {space 3} {res} 6789.9131 {space 3} {res} 2089.5994 {space 3} {res} 569.63807  
{txt}        18{c |} {space 3} {res}  6186.716 {space 3} {res} 1816.9795 {space 3} {res} 505.97842  
{txt}        19{c |} {space 3} {res} 5637.1052 {space 3} {res} 1588.8216 {space 3} {res} 452.25745  
{txt}        20{c |} {space 3} {res} 5136.3203 {space 3} {res} 1397.7387 {space 3} {res}  406.7116  
{txt}        21{c |} {space 3} {res} 4680.0237 {space 3} {res}  1237.584 {space 3} {res} 367.90116  
{txt}        22{c |} {space 3} {res} 4264.2633 {space 3} {res} 1103.2409 {space 3} {res} 334.65486  
{txt}        23{c |} {space 3} {res} 3885.4379 {space 3} {res} 990.44955 {space 3} {res} 306.02247  
{txt}        24{c |} {space 3} {res} 3540.2663 {space 3} {res}  895.6626 {space 3} {res} 281.23456  
{txt}        25{c |} {space 3} {res} 3225.7588 {space 3} {res} 816.25649 {space 3} {res} 259.59417  
{txt}        26{c |} {space 3} {res} 2939.1913 {space 3} {res} 750.07662 {space 3} {res} 240.58066  
{txt}        27{c |} {space 3} {res} 2678.0817 {space 3} {res} 693.47635 {space 3} {res} 223.73861  
{txt}        28{c |} {space 3} {res} 2440.1683 {space 3} {res} 643.46868 {space 3} {res} 208.49267  
{txt}        29{c |} {space 3} {res} 2223.3904 {space 3} {res}  599.2883 {space 3} {res}  194.5465  
{txt}        30{c |} {space 3} {res} 2025.8706 {space 3} {res} 561.87629 {space 3} {res} 182.29443  
{txt}        31{c |} {space 3} {res} 1845.8978 {space 3} {res}  530.1486 {space 3} {res} 171.52546  
{txt}        32{c |} {space 3} {res} 1681.9133 {space 3} {res} 503.19944 {space 3} {res} 162.05771  
{txt}        33{c |} {space 3} {res} 1532.4968 {space 3} {res} 480.27153 {space 3} {res} 153.73349  
{txt}        34{c |} {space 3} {res}  1396.354 {space 3} {res} 460.73137 {space 3} {res} 146.41531  
{txt}        35{c |} {space 3} {res} 1272.3058 {space 3} {res} 444.04865 {space 3} {res} 139.98272  ^
{txt}        36{c |} {space 3} {res} 1159.2776 {space 3} {res}  429.7791 {space 3} {res} 134.32978  
{txt}        37{c |} {space 3} {res} 1056.2906 {space 3} {res} 417.55025 {space 3} {res} 129.36305  
{txt}        38{c |} {space 3} {res} 962.45264 {space 3} {res} 407.04957 {space 3} {res} 124.99996  
{txt}        39{c |} {space 3} {res}   876.951 {space 3} {res} 398.01456 {space 3} {res} 121.16748  
{txt}        40{c |} {space 3} {res} 799.04509 {space 3} {res} 390.22455 {space 3} {res} 117.80101  
{txt}        41{c |} {space 3} {res} 728.06013 {space 3} {res} 383.49384 {space 3} {res} 114.84345  
{txt}        42{c |} {space 3} {res} 663.38127 {space 3} {res} 377.66597 {space 3} {res}  112.2444  
{txt}        43{c |} {space 3} {res} 604.44831 {space 3} {res} 372.60897 {space 3} {res} 109.95941  
{txt}        44{c |} {space 3} {res} 550.75079 {space 3} {res} 368.21137 {space 3} {res} 107.94939  
{txt}        45{c |} {space 3} {res} 501.82361 {space 3} {res} 364.37892 {space 3} {res} 106.17998  
{txt}        46{c |} {space 3} {res} 457.24298 {space 3} {res} 361.03178 {space 3} {res} 104.62109  
{txt}        47{c |} {space 3} {res} 416.62277 {space 3} {res} 358.10226 {space 3} {res} 103.24635  
{txt}        48{c |} {space 3} {res} 379.61115 {space 3} {res} 355.53282 {space 3} {res} 102.03273  
{txt}        49{c |} {space 3} {res} 345.88755 {space 3} {res} 353.27454 {space 3} {res} 100.96014  *
{txt}        50{c |} {space 3} {res} 315.15985 {space 3} {res} 353.56351 {space 3} {res} 100.54566  
{txt}        51{c |} {space 3} {res} 287.16192 {space 3} {res} 358.15619 {space 3} {res} 101.22159  
{txt}        52{c |} {space 3} {res} 261.65124 {space 3} {res} 365.35705 {space 3} {res} 102.96975  
{txt}        53{c |} {space 3} {res} 238.40687 {space 3} {res} 369.66508 {space 3} {res} 104.79961  
{txt}        54{c |} {space 3} {res} 217.22746 {space 3} {res} 370.95016 {space 3} {res} 106.38565  
{txt}        55{c |} {space 3} {res} 197.92957 {space 3} {res} 372.74966 {space 3} {res} 108.15476  
{txt}        56{c |} {space 3} {res} 180.34605 {space 3} {res} 375.87984 {space 3} {res} 109.75375  
{txt}        57{c |} {space 3} {res} 164.32461 {space 3} {res} 378.13286 {space 3} {res} 111.19205  
{txt}        58{c |} {space 3} {res} 149.72646 {space 3} {res} 379.31752 {space 3} {res} 112.39925  
{txt}        59{c |} {space 3} {res} 136.42518 {space 3} {res} 379.96884 {space 3} {res} 113.65128  
{txt}        60{c |} {space 3} {res} 124.30554 {space 3} {res} 379.47216 {space 3} {res} 114.64207  
{txt}        61{c |} {space 3} {res} 113.26258 {space 3} {res}  378.6107 {space 3} {res}  115.2831  
{txt}        62{c |} {space 3} {res} 103.20064 {space 3} {res} 379.47067 {space 3} {res} 116.07434  
{txt}        63{c |} {space 3} {res} 94.032582 {space 3} {res} 380.87369 {space 3} {res} 116.91882  
{txt}        64{c |} {space 3} {res} 85.678986 {space 3} {res} 382.03715 {space 3} {res} 117.67983  
{txt}        65{c |} {space 3} {res} 78.067501 {space 3} {res} 380.53668 {space 3} {res} 118.00548  
{txt}        66{c |} {space 3} {res}   71.1322 {space 3} {res}   377.904 {space 3} {res}  117.9601  
{txt}        67{c |} {space 3} {res} 64.813011 {space 3} {res} 376.68599 {space 3} {res} 118.51554  
{txt}        68{c |} {space 3} {res} 59.055202 {space 3} {res} 376.04184 {space 3} {res}  118.9979  
{txt}        69{c |} {space 3} {res}   53.8089 {space 3} {res} 375.66725 {space 3} {res} 119.47501  
{txt}        70{c |} {space 3} {res} 49.028666 {space 3} {res} 374.18355 {space 3} {res} 120.01102  
{txt}        71{c |} {space 3} {res} 44.673094 {space 3} {res} 372.68744 {space 3} {res} 120.23184  
{txt}        72{c |} {space 3} {res}  40.70446 {space 3} {res} 372.63602 {space 3} {res} 120.62715  
{txt}        73{c |} {space 3} {res} 37.088388 {space 3} {res} 372.96002 {space 3} {res} 120.98856  
{txt}        74{c |} {space 3} {res} 33.793558 {space 3} {res} 375.67225 {space 3} {res}  121.2765  
{txt}        75{c |} {space 3} {res} 30.791431 {space 3} {res} 379.83266 {space 3} {res} 121.13771  
{txt}        76{c |} {space 3} {res} 28.056005 {space 3} {res} 383.96921 {space 3} {res} 121.02467  
{txt}        77{c |} {space 3} {res} 25.563587 {space 3} {res} 387.82565 {space 3} {res} 120.59418  
{txt}        78{c |} {space 3} {res} 23.292588 {space 3} {res} 391.20473 {space 3} {res} 120.20296  
{txt}        79{c |} {space 3} {res} 21.223339 {space 3} {res} 395.06233 {space 3} {res} 120.19574  
{txt}        80{c |} {space 3} {res} 19.337916 {space 3} {res} 400.12432 {space 3} {res} 120.81217  
{txt}        81{c |} {space 3} {res} 17.619989 {space 3} {res}  408.9831 {space 3} {res} 121.88139  
{txt}        82{c |} {space 3} {res} 16.054678 {space 3} {res} 419.70456 {space 3} {res} 122.19761  
{txt}        83{c |} {space 3} {res} 14.628424 {space 3} {res} 427.29042 {space 3} {res} 121.84983  
{txt}        84{c |} {space 3} {res} 13.328875 {space 3} {res} 432.32449 {space 3} {res} 120.51138  
{txt}        85{c |} {space 3} {res} 12.144775 {space 3} {res} 434.70003 {space 3} {res} 119.27437  
{txt}        86{c |} {space 3} {res} 11.065867 {space 3} {res} 437.29344 {space 3} {res}  118.3797  
{txt}        87{c |} {space 3} {res} 10.082806 {space 3} {res} 440.01255 {space 3} {res} 117.75625  
{txt}        88{c |} {space 3} {res} 9.1870769 {space 3} {res} 442.78574 {space 3} {res} 117.34583  
{txt}        89{c |} {space 3} {res} 8.3709223 {space 3} {res} 445.55799 {space 3} {res} 117.10114  
{txt}        90{c |} {space 3} {res} 7.6272726 {space 3} {res} 448.28774 {space 3} {res} 116.98402  
{txt}        91{c |} {space 3} {res} 6.9496867 {space 3} {res} 450.94415 {space 3} {res} 116.96386  
{txt}        92{c |} {space 3} {res} 6.3322957 {space 3} {res} 453.50503 {space 3} {res} 117.01624  
{txt}        93{c |} {space 3} {res}  5.769752 {space 3} {res}   455.955 {space 3} {res} 117.12177  
{txt}        94{c |} {space 3} {res} 5.2571831 {space 3} {res} 458.28413 {space 3} {res} 117.26519  
{txt}        95{c |} {space 3} {res} 4.7901495 {space 3} {res} 460.48672 {space 3} {res} 117.43449  
{txt}        96{c |} {space 3} {res} 4.3646058 {space 3} {res} 462.56036 {space 3} {res} 117.62036  
{txt}        97{c |} {space 3} {res} 3.9768663 {space 3} {res} 464.50518 {space 3} {res} 117.81559  
{txt}        98{c |} {space 3} {res} 3.6235724 {space 3} {res} 466.32322 {space 3} {res} 118.01467  
{txt}        99{c |} {space 3} {res} 3.3016642 {space 3} {res} 468.01793 {space 3} {res} 118.21343  
{txt}* lopt = the lambda that minimizes MSPE.
  Run model: {stata cvlasso, lopt}
{p 0 8 2}^ lse = largest lambda for which MSPE is within one standard error of the minimal MSPE.{p_end}
  Run model: {stata cvlasso, lse}
r; t=13.63 16:45:04

{com}. assert 14==`e(nfolds)'
{txt}r; t=0.00 16:45:04

{com}. 
. ********************************************************************************
. *** panel example
. ********************************************************************************
. 
. use "http://fmwww.bc.edu/ec-p/data/macro/abdata.dta", clear
{txt}(Layard & Nickell, Unemployment in Britain, Economica 53, 1986 from Ox dist)
r; t=0.92 16:45:04

{com}. 
. // FE and noftools options
. cvlasso ys l(0/3).k l(0/3).n, fe seed(123)

{txt}K-fold cross-validation with 10 folds. Elastic net with alpha=1.
Fold {res}1 2 3 4 5 6 7 8 9 10 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}      MSPE {space 3} {txt}  st. dev.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res} 46.945458 {space 3} {res} .00843492 {space 3} {res} .00058496  
{txt}         2{c |} {space 3} {res} 42.774952 {space 3} {res} .00813196 {space 3} {res}  .0005897  
{txt}         3{c |} {space 3} {res} 38.974944 {space 3} {res} .00773276 {space 3} {res} .00056315  
{txt}         4{c |} {space 3} {res} 35.512517 {space 3} {res} .00737473 {space 3} {res} .00053581  
{txt}         5{c |} {space 3} {res} 32.357683 {space 3} {res} .00706573 {space 3} {res}  .0005092  
{txt}         6{c |} {space 3} {res} 29.483116 {space 3} {res}  .0068078 {space 3} {res}  .0004852  
{txt}         7{c |} {space 3} {res} 26.863917 {space 3} {res} .00659238 {space 3} {res}  .0004636  
{txt}         8{c |} {space 3} {res}   24.4774 {space 3} {res} .00641237 {space 3} {res} .00044421  
{txt}         9{c |} {space 3} {res} 22.302896 {space 3} {res} .00626186 {space 3} {res} .00042685  
{txt}        10{c |} {space 3} {res} 20.321568 {space 3} {res} .00613594 {space 3} {res} .00041134  
{txt}        11{c |} {space 3} {res} 18.516256 {space 3} {res} .00603053 {space 3} {res} .00039754  
{txt}        12{c |} {space 3} {res} 16.871323 {space 3} {res}  .0059422 {space 3} {res} .00038527  
{txt}        13{c |} {space 3} {res} 15.372521 {space 3} {res} .00586815 {space 3} {res} .00037439  
{txt}        14{c |} {space 3} {res} 14.006868 {space 3} {res} .00580767 {space 3} {res} .00036394  
{txt}        15{c |} {space 3} {res} 12.762537 {space 3} {res} .00575894 {space 3} {res} .00035376  
{txt}        16{c |} {space 3} {res} 11.628748 {space 3} {res} .00571635 {space 3} {res} .00034367  
{txt}        17{c |} {space 3} {res} 10.595682 {space 3} {res} .00567365 {space 3} {res} .00033312  
{txt}        18{c |} {space 3} {res} 9.6543911 {space 3} {res} .00563169 {space 3} {res} .00032285  
{txt}        19{c |} {space 3} {res} 8.7967216 {space 3} {res} .00558916 {space 3} {res} .00031273  ^
{txt}        20{c |} {space 3} {res} 8.0152451 {space 3} {res} .00555189 {space 3} {res} .00030398  
{txt}        21{c |} {space 3} {res} 7.3031928 {space 3} {res} .00551614 {space 3} {res} .00029582  
{txt}        22{c |} {space 3} {res} 6.6543973 {space 3} {res}  .0054842 {space 3} {res} .00028853  
{txt}        23{c |} {space 3} {res}  6.063239 {space 3} {res} .00545554 {space 3} {res} .00028109  
{txt}        24{c |} {space 3} {res} 5.5245976 {space 3} {res} .00543376 {space 3} {res} .00027373  
{txt}        25{c |} {space 3} {res} 5.0338075 {space 3} {res} .00541646 {space 3} {res} .00026706  
{txt}        26{c |} {space 3} {res} 4.5866179 {space 3} {res} .00540234 {space 3} {res} .00026121  
{txt}        27{c |} {space 3} {res} 4.1791554 {space 3} {res} .00539083 {space 3} {res} .00025608  
{txt}        28{c |} {space 3} {res} 3.8078908 {space 3} {res} .00538147 {space 3} {res} .00025161  
{txt}        29{c |} {space 3} {res} 3.4696083 {space 3} {res} .00537447 {space 3} {res} .00024786  
{txt}        30{c |} {space 3} {res} 3.1613778 {space 3} {res} .00536953 {space 3} {res} .00024474  
{txt}        31{c |} {space 3} {res} 2.8805297 {space 3} {res} .00536569 {space 3} {res} .00024204  
{txt}        32{c |} {space 3} {res} 2.6246314 {space 3} {res} .00536274 {space 3} {res}  .0002397  
{txt}        33{c |} {space 3} {res} 2.3914664 {space 3} {res} .00536129 {space 3} {res} .00023773  
{txt}        34{c |} {space 3} {res} 2.1790151 {space 3} {res}  .0053607 {space 3} {res} .00023603  
{txt}        35{c |} {space 3} {res} 1.9854374 {space 3} {res} .00536049 {space 3} {res} .00023456  *
{txt}        36{c |} {space 3} {res} 1.8090566 {space 3} {res}  .0053616 {space 3} {res} .00023354  
{txt}        37{c |} {space 3} {res}  1.648345 {space 3} {res} .00536378 {space 3} {res} .00023229  
{txt}        38{c |} {space 3} {res} 1.5019106 {space 3} {res} .00536851 {space 3} {res} .00023011  
{txt}        39{c |} {space 3} {res}  1.368485 {space 3} {res}  .0053741 {space 3} {res} .00022843  
{txt}        40{c |} {space 3} {res} 1.2469126 {space 3} {res} .00537969 {space 3} {res} .00022697  
{txt}        41{c |} {space 3} {res} 1.1361403 {space 3} {res} .00538588 {space 3} {res} .00022581  
{txt}        42{c |} {space 3} {res} 1.0352087 {space 3} {res} .00539219 {space 3} {res} .00022482  
{txt}        43{c |} {space 3} {res} .94324363 {space 3} {res} .00539811 {space 3} {res} .00022394  
{txt}        44{c |} {space 3} {res} .85944846 {space 3} {res} .00540365 {space 3} {res} .00022315  
{txt}        45{c |} {space 3} {res} .78309743 {space 3} {res} .00540967 {space 3} {res} .00022263  
{txt}        46{c |} {space 3} {res} .71352921 {space 3} {res}  .0054163 {space 3} {res} .00022214  
{txt}        47{c |} {space 3} {res} .65014124 {space 3} {res} .00542284 {space 3} {res} .00022161  
{txt}        48{c |} {space 3} {res} .59238449 {space 3} {res} .00542904 {space 3} {res} .00022113  
{txt}        49{c |} {space 3} {res} .53975868 {space 3} {res} .00543495 {space 3} {res} .00022071  
{txt}        50{c |} {space 3} {res} .49180801 {space 3} {res} .00544044 {space 3} {res} .00022032  
{txt}        51{c |} {space 3} {res} .44811714 {space 3} {res} .00544564 {space 3} {res} .00021997  
{txt}        52{c |} {space 3} {res} .40830765 {space 3} {res} .00545055 {space 3} {res} .00021963  
{txt}        53{c |} {space 3} {res} .37203472 {space 3} {res}   .005455 {space 3} {res} .00021921  
{txt}        54{c |} {space 3} {res} .33898418 {space 3} {res} .00545904 {space 3} {res} .00021881  
{txt}        55{c |} {space 3} {res} .30886976 {space 3} {res}  .0054628 {space 3} {res} .00021846  
{txt}        56{c |} {space 3} {res} .28143062 {space 3} {res}  .0054662 {space 3} {res} .00021811  
{txt}        57{c |} {space 3} {res}  .2564291 {space 3} {res} .00546937 {space 3} {res} .00021779  
{txt}        58{c |} {space 3} {res} .23364865 {space 3} {res} .00547234 {space 3} {res} .00021749  
{txt}        59{c |} {space 3} {res} .21289195 {space 3} {res} .00547504 {space 3} {res} .00021723  
{txt}        60{c |} {space 3} {res} .19397921 {space 3} {res} .00547749 {space 3} {res}   .000217  
{txt}        61{c |} {space 3} {res} .17674663 {space 3} {res} .00547977 {space 3} {res}  .0002168  
{txt}        62{c |} {space 3} {res} .16104495 {space 3} {res} .00548186 {space 3} {res} .00021661  
{txt}        63{c |} {space 3} {res} .14673816 {space 3} {res} .00548379 {space 3} {res} .00021644  
{txt}        64{c |} {space 3} {res} .13370235 {space 3} {res} .00548544 {space 3} {res} .00021626  
{txt}* lopt = the lambda that minimizes MSPE.
  Run model: {stata cvlasso, lopt}
{p 0 8 2}^ lse = largest lambda for which MSPE is within one standard error of the minimal MSPE.{p_end}
  Run model: {stata cvlasso, lse}
r; t=0.93 16:45:05

{com}. savedresults save ftools e()
{txt}r; t=0.03 16:45:05

{com}. cap noi assert "`e(noftools)'"==""  // will be error if ftools not installed
{txt}r; t=0.00 16:45:05

{com}. cvlasso ys l(0/3).k l(0/3).n, fe seed(123) noftools

{txt}K-fold cross-validation with 10 folds. Elastic net with alpha=1.
Fold {res}1 2 3 4 5 6 7 8 9 10 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}      MSPE {space 3} {txt}  st. dev.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res} 46.945458 {space 3} {res} .00843492 {space 3} {res} .00058496  
{txt}         2{c |} {space 3} {res} 42.774952 {space 3} {res} .00813196 {space 3} {res}  .0005897  
{txt}         3{c |} {space 3} {res} 38.974944 {space 3} {res} .00773276 {space 3} {res} .00056315  
{txt}         4{c |} {space 3} {res} 35.512517 {space 3} {res} .00737473 {space 3} {res} .00053581  
{txt}         5{c |} {space 3} {res} 32.357683 {space 3} {res} .00706573 {space 3} {res}  .0005092  
{txt}         6{c |} {space 3} {res} 29.483116 {space 3} {res}  .0068078 {space 3} {res}  .0004852  
{txt}         7{c |} {space 3} {res} 26.863917 {space 3} {res} .00659238 {space 3} {res}  .0004636  
{txt}         8{c |} {space 3} {res}   24.4774 {space 3} {res} .00641237 {space 3} {res} .00044421  
{txt}         9{c |} {space 3} {res} 22.302896 {space 3} {res} .00626186 {space 3} {res} .00042685  
{txt}        10{c |} {space 3} {res} 20.321568 {space 3} {res} .00613594 {space 3} {res} .00041134  
{txt}        11{c |} {space 3} {res} 18.516256 {space 3} {res} .00603053 {space 3} {res} .00039754  
{txt}        12{c |} {space 3} {res} 16.871323 {space 3} {res}  .0059422 {space 3} {res} .00038527  
{txt}        13{c |} {space 3} {res} 15.372521 {space 3} {res} .00586815 {space 3} {res} .00037439  
{txt}        14{c |} {space 3} {res} 14.006868 {space 3} {res} .00580767 {space 3} {res} .00036394  
{txt}        15{c |} {space 3} {res} 12.762537 {space 3} {res} .00575894 {space 3} {res} .00035376  
{txt}        16{c |} {space 3} {res} 11.628748 {space 3} {res} .00571635 {space 3} {res} .00034367  
{txt}        17{c |} {space 3} {res} 10.595682 {space 3} {res} .00567365 {space 3} {res} .00033312  
{txt}        18{c |} {space 3} {res} 9.6543911 {space 3} {res} .00563169 {space 3} {res} .00032285  
{txt}        19{c |} {space 3} {res} 8.7967216 {space 3} {res} .00558916 {space 3} {res} .00031273  ^
{txt}        20{c |} {space 3} {res} 8.0152451 {space 3} {res} .00555189 {space 3} {res} .00030398  
{txt}        21{c |} {space 3} {res} 7.3031928 {space 3} {res} .00551614 {space 3} {res} .00029582  
{txt}        22{c |} {space 3} {res} 6.6543973 {space 3} {res}  .0054842 {space 3} {res} .00028853  
{txt}        23{c |} {space 3} {res}  6.063239 {space 3} {res} .00545554 {space 3} {res} .00028109  
{txt}        24{c |} {space 3} {res} 5.5245976 {space 3} {res} .00543376 {space 3} {res} .00027373  
{txt}        25{c |} {space 3} {res} 5.0338075 {space 3} {res} .00541646 {space 3} {res} .00026706  
{txt}        26{c |} {space 3} {res} 4.5866179 {space 3} {res} .00540234 {space 3} {res} .00026121  
{txt}        27{c |} {space 3} {res} 4.1791554 {space 3} {res} .00539083 {space 3} {res} .00025608  
{txt}        28{c |} {space 3} {res} 3.8078908 {space 3} {res} .00538147 {space 3} {res} .00025161  
{txt}        29{c |} {space 3} {res} 3.4696083 {space 3} {res} .00537447 {space 3} {res} .00024786  
{txt}        30{c |} {space 3} {res} 3.1613778 {space 3} {res} .00536953 {space 3} {res} .00024474  
{txt}        31{c |} {space 3} {res} 2.8805297 {space 3} {res} .00536569 {space 3} {res} .00024204  
{txt}        32{c |} {space 3} {res} 2.6246314 {space 3} {res} .00536274 {space 3} {res}  .0002397  
{txt}        33{c |} {space 3} {res} 2.3914664 {space 3} {res} .00536129 {space 3} {res} .00023773  
{txt}        34{c |} {space 3} {res} 2.1790151 {space 3} {res}  .0053607 {space 3} {res} .00023603  
{txt}        35{c |} {space 3} {res} 1.9854374 {space 3} {res} .00536049 {space 3} {res} .00023456  *
{txt}        36{c |} {space 3} {res} 1.8090566 {space 3} {res}  .0053616 {space 3} {res} .00023354  
{txt}        37{c |} {space 3} {res}  1.648345 {space 3} {res} .00536378 {space 3} {res} .00023229  
{txt}        38{c |} {space 3} {res} 1.5019106 {space 3} {res} .00536851 {space 3} {res} .00023011  
{txt}        39{c |} {space 3} {res}  1.368485 {space 3} {res}  .0053741 {space 3} {res} .00022843  
{txt}        40{c |} {space 3} {res} 1.2469126 {space 3} {res} .00537969 {space 3} {res} .00022697  
{txt}        41{c |} {space 3} {res} 1.1361403 {space 3} {res} .00538588 {space 3} {res} .00022581  
{txt}        42{c |} {space 3} {res} 1.0352087 {space 3} {res} .00539219 {space 3} {res} .00022482  
{txt}        43{c |} {space 3} {res} .94324363 {space 3} {res} .00539811 {space 3} {res} .00022394  
{txt}        44{c |} {space 3} {res} .85944846 {space 3} {res} .00540365 {space 3} {res} .00022315  
{txt}        45{c |} {space 3} {res} .78309743 {space 3} {res} .00540967 {space 3} {res} .00022263  
{txt}        46{c |} {space 3} {res} .71352921 {space 3} {res}  .0054163 {space 3} {res} .00022214  
{txt}        47{c |} {space 3} {res} .65014124 {space 3} {res} .00542284 {space 3} {res} .00022161  
{txt}        48{c |} {space 3} {res} .59238449 {space 3} {res} .00542904 {space 3} {res} .00022113  
{txt}        49{c |} {space 3} {res} .53975868 {space 3} {res} .00543495 {space 3} {res} .00022071  
{txt}        50{c |} {space 3} {res} .49180801 {space 3} {res} .00544044 {space 3} {res} .00022032  
{txt}        51{c |} {space 3} {res} .44811714 {space 3} {res} .00544564 {space 3} {res} .00021997  
{txt}        52{c |} {space 3} {res} .40830765 {space 3} {res} .00545055 {space 3} {res} .00021963  
{txt}        53{c |} {space 3} {res} .37203472 {space 3} {res}   .005455 {space 3} {res} .00021921  
{txt}        54{c |} {space 3} {res} .33898418 {space 3} {res} .00545904 {space 3} {res} .00021881  
{txt}        55{c |} {space 3} {res} .30886976 {space 3} {res}  .0054628 {space 3} {res} .00021846  
{txt}        56{c |} {space 3} {res} .28143062 {space 3} {res}  .0054662 {space 3} {res} .00021811  
{txt}        57{c |} {space 3} {res}  .2564291 {space 3} {res} .00546937 {space 3} {res} .00021779  
{txt}        58{c |} {space 3} {res} .23364865 {space 3} {res} .00547234 {space 3} {res} .00021749  
{txt}        59{c |} {space 3} {res} .21289195 {space 3} {res} .00547504 {space 3} {res} .00021723  
{txt}        60{c |} {space 3} {res} .19397921 {space 3} {res} .00547749 {space 3} {res}   .000217  
{txt}        61{c |} {space 3} {res} .17674663 {space 3} {res} .00547977 {space 3} {res}  .0002168  
{txt}        62{c |} {space 3} {res} .16104495 {space 3} {res} .00548186 {space 3} {res} .00021661  
{txt}        63{c |} {space 3} {res} .14673816 {space 3} {res} .00548379 {space 3} {res} .00021644  
{txt}        64{c |} {space 3} {res} .13370235 {space 3} {res} .00548544 {space 3} {res} .00021626  
{txt}* lopt = the lambda that minimizes MSPE.
  Run model: {stata cvlasso, lopt}
{p 0 8 2}^ lse = largest lambda for which MSPE is within one standard error of the minimal MSPE.{p_end}
  Run model: {stata cvlasso, lse}
r; t=0.60 16:45:06

{com}. assert "`e(noftools)'"=="noftools"
{txt}r; t=0.00 16:45:06

{com}. savedresults comp ftools e(), exclude(macros: lasso2opt)
{txt}r; t=0.00 16:45:06

{com}. 
. ********************************************************************************
. ***  check residuals with fe                                                                                             ***
. ********************************************************************************
.                 
. clear
{txt}r; t=0.00 16:45:06

{com}. use https://www.stata-press.com/data/r16/nlswork
{txt}(National Longitudinal Survey.  Young Women 14-26 years of age in 1968)
r; t=1.55 16:45:08

{com}. 
. replace ln_w = . if year == 80
{txt}(1,847 real changes made, 1,847 to missing)
r; t=0.00 16:45:08

{com}. 
. cvlasso ln_w grade age c.age#c.age ttl_exp c.ttl_exp#c.ttl_exp tenure ///
>                 c.tenure#c.tenure 2.race not_smsa south , fe   

{txt}K-fold cross-validation with 10 folds. Elastic net with alpha=1.
Fold {res}1 2 3 4 5 6 7 8 9 10 
{txt}          {c |} {space 3} {txt}    Lambda {space 3} {txt}      MSPE {space 3} {txt}  st. dev.
{hline 10}{c +}{hline 45}
{txt}         1{c |} {space 3} {res} 5773.8216 {space 3} {res} .19856956 {space 3} {res}  .0049488  
{txt}         2{c |} {space 3} {res} 5260.8912 {space 3} {res} .19510395 {space 3} {res}   .004921  
{txt}         3{c |} {space 3} {res} 4793.5281 {space 3} {res} .19181949 {space 3} {res} .00489047  
{txt}         4{c |} {space 3} {res} 4367.6843 {space 3} {res} .18901926 {space 3} {res} .00486368  
{txt}         5{c |} {space 3} {res} 3979.6712 {space 3} {res} .18662756 {space 3} {res} .00484006  
{txt}         6{c |} {space 3} {res} 3626.1282 {space 3} {res} .18458098 {space 3} {res} .00481916  
{txt}         7{c |} {space 3} {res}  3303.993 {space 3} {res} .18282633 {space 3} {res}  .0048006  
{txt}         8{c |} {space 3} {res} 3010.4753 {space 3} {res} .18130821 {space 3} {res} .00478317  
{txt}         9{c |} {space 3} {res}  2743.033 {space 3} {res} .17993596 {space 3} {res}   .004778  
{txt}        10{c |} {space 3} {res} 2499.3495 {space 3} {res} .17872966 {space 3} {res} .00477046  
{txt}        11{c |} {space 3} {res} 2277.3142 {space 3} {res} .17769003 {space 3} {res} .00476308  
{txt}        12{c |} {space 3} {res} 2075.0039 {space 3} {res} .17679373 {space 3} {res} .00475651  
{txt}        13{c |} {space 3} {res} 1890.6663 {space 3} {res} .17601938 {space 3} {res} .00475064  
{txt}        14{c |} {space 3} {res} 1722.7047 {space 3} {res} .17534895 {space 3} {res} .00474538  
{txt}        15{c |} {space 3} {res} 1569.6643 {space 3} {res} .17476725 {space 3} {res} .00474066  
{txt}        16{c |} {space 3} {res} 1430.2197 {space 3} {res} .17426144 {space 3} {res} .00473641  
{txt}        17{c |} {space 3} {res} 1303.1629 {space 3} {res} .17382067 {space 3} {res} .00473259  
{txt}        18{c |} {space 3} {res} 1187.3935 {space 3} {res} .17343575 {space 3} {res} .00472914  
{txt}        19{c |} {space 3} {res} 1081.9087 {space 3} {res} .17309888 {space 3} {res} .00472603  
{txt}        20{c |} {space 3} {res} 985.79495 {space 3} {res} .17280815 {space 3} {res} .00472298  
{txt}        21{c |} {space 3} {res} 898.21965 {space 3} {res} .17259251 {space 3} {res} .00472315  
{txt}        22{c |} {space 3} {res} 818.42429 {space 3} {res}  .1724332 {space 3} {res} .00472221  
{txt}        23{c |} {space 3} {res} 745.71773 {space 3} {res} .17229934 {space 3} {res} .00471979  
{txt}        24{c |} {space 3} {res} 679.47022 {space 3} {res} .17218835 {space 3} {res} .00471767  
{txt}        25{c |} {space 3} {res} 619.10796 {space 3} {res} .17211746 {space 3} {res} .00471512  
{txt}        26{c |} {space 3} {res} 564.10812 {space 3} {res} .17210271 {space 3} {res} .00471632  
{txt}        27{c |} {space 3} {res} 513.99431 {space 3} {res} .17214254 {space 3} {res} .00471385  
{txt}        28{c |} {space 3} {res} 468.33247 {space 3} {res} .17222045 {space 3} {res} .00471808  
{txt}        29{c |} {space 3} {res}  426.7271 {space 3} {res} .17227965 {space 3} {res} .00472539  
{txt}        30{c |} {space 3} {res} 388.81784 {space 3} {res} .17192789 {space 3} {res}  .0047269  
{txt}        31{c |} {space 3} {res} 354.27634 {space 3} {res} .17159449 {space 3} {res} .00471671  
{txt}        32{c |} {space 3} {res}  322.8034 {space 3} {res} .17131531 {space 3} {res} .00470748  
{txt}        33{c |} {space 3} {res} 294.12644 {space 3} {res} .17108137 {space 3} {res} .00469911  
{txt}        34{c |} {space 3} {res} 267.99706 {space 3} {res} .17088517 {space 3} {res} .00469151  
{txt}        35{c |} {space 3} {res} 244.18894 {space 3} {res} .17072048 {space 3} {res} .00468461  
{txt}        36{c |} {space 3} {res} 222.49586 {space 3} {res} .17058212 {space 3} {res} .00467835  
{txt}        37{c |} {space 3} {res} 202.72995 {space 3} {res} .17047156 {space 3} {res} .00467551  
{txt}        38{c |} {space 3} {res} 184.71998 {space 3} {res} .17057963 {space 3} {res} .00469366  
{txt}        39{c |} {space 3} {res} 168.30996 {space 3} {res} .17091839 {space 3} {res} .00471443  
{txt}        40{c |} {space 3} {res} 153.35777 {space 3} {res} .17124862 {space 3} {res} .00473513  
{txt}        41{c |} {space 3} {res} 139.73389 {space 3} {res} .17156271 {space 3} {res} .00475412  
{txt}        42{c |} {space 3} {res} 127.32031 {space 3} {res} .17185986 {space 3} {res} .00477153  
{txt}        43{c |} {space 3} {res} 116.00953 {space 3} {res}  .1721397 {space 3} {res} .00478749  
{txt}        44{c |} {space 3} {res} 105.70356 {space 3} {res} .17240223 {space 3} {res} .00480211  
{txt}        45{c |} {space 3} {res} 96.313148 {space 3} {res} .17264771 {space 3} {res}  .0048155  
{txt}        46{c |} {space 3} {res} 87.756954 {space 3} {res} .17287589 {space 3} {res} .00482755  
{txt}        47{c |} {space 3} {res} 79.960868 {space 3} {res} .17308128 {space 3} {res} .00483868  
{txt}        48{c |} {space 3} {res} 72.857365 {space 3} {res} .17325719 {space 3} {res} .00484798  
{txt}        49{c |} {space 3} {res} 66.384917 {space 3} {res} .17300192 {space 3} {res} .00484978  
{txt}        50{c |} {space 3} {res} 60.487464 {space 3} {res} .16975386 {space 3} {res} .00474188  
{txt}        51{c |} {space 3} {res} 55.113925 {space 3} {res} .16663803 {space 3} {res} .00459007  
{txt}        52{c |} {space 3} {res} 50.217755 {space 3} {res} .16390797 {space 3} {res} .00446813  
{txt}        53{c |} {space 3} {res} 45.756548 {space 3} {res} .16151347 {space 3} {res} .00436426  
{txt}        54{c |} {space 3} {res} 41.691663 {space 3} {res} .15941168 {space 3} {res} .00426958  
{txt}        55{c |} {space 3} {res}  37.98789 {space 3} {res} .15754081 {space 3} {res} .00418546  
{txt}        56{c |} {space 3} {res} 34.613151 {space 3} {res}   .155927 {space 3} {res} .00410732  
{txt}        57{c |} {space 3} {res} 31.538214 {space 3} {res} .15449554 {space 3} {res} .00404327  
{txt}        58{c |} {space 3} {res} 28.736446 {space 3} {res} .15321279 {space 3} {res} .00398651  
{txt}        59{c |} {space 3} {res} 26.183579 {space 3} {res} .15206188 {space 3} {res} .00393612  
{txt}        60{c |} {space 3} {res} 23.857502 {space 3} {res} .15102807 {space 3} {res} .00389131  
{txt}        61{c |} {space 3} {res} 21.738068 {space 3} {res} .15009843 {space 3} {res} .00385139  
{txt}        62{c |} {space 3} {res} 19.806918 {space 3} {res} .14927115 {space 3} {res} .00381774  
{txt}        63{c |} {space 3} {res} 18.047326 {space 3} {res} .14852849 {space 3} {res} .00378817  
{txt}        64{c |} {space 3} {res} 16.444051 {space 3} {res} .14785866 {space 3} {res} .00376163  
{txt}        65{c |} {space 3} {res} 14.983207 {space 3} {res} .14725404 {space 3} {res} .00373777  
{txt}        66{c |} {space 3} {res}  13.65214 {space 3} {res} .14668285 {space 3} {res} .00372168  
{txt}        67{c |} {space 3} {res} 12.439321 {space 3} {res} .14613422 {space 3} {res} .00370749  
{txt}        68{c |} {space 3} {res} 11.334246 {space 3} {res} .14561919 {space 3} {res} .00368416  ^
{txt}        69{c |} {space 3} {res} 10.327343 {space 3} {res} .14511215 {space 3} {res} .00366867  
{txt}        70{c |} {space 3} {res} 9.4098905 {space 3} {res} .14465224 {space 3} {res} .00365593  
{txt}        71{c |} {space 3} {res} 8.5739418 {space 3} {res}  .1442048 {space 3} {res} .00364741  
{txt}        72{c |} {space 3} {res} 7.8122564 {space 3} {res} .14377088 {space 3} {res} .00363502  
{txt}        73{c |} {space 3} {res} 7.1182371 {space 3} {res} .14337589 {space 3} {res} .00362281  
{txt}        74{c |} {space 3} {res} 6.4858725 {space 3} {res} .14301825 {space 3} {res} .00361182  
{txt}        75{c |} {space 3} {res} 5.9096855 {space 3} {res} .14269424 {space 3} {res} .00360191  
{txt}        76{c |} {space 3} {res} 5.3846853 {space 3} {res} .14240058 {space 3} {res} .00359296  
{txt}        77{c |} {space 3} {res} 4.9063247 {space 3} {res} .14213084 {space 3} {res} .00358412  *
{txt}* lopt = the lambda that minimizes MSPE.
  Run model: {stata cvlasso, lopt}
{p 0 8 2}^ lse = largest lambda for which MSPE is within one standard error of the minimal MSPE.{p_end}
  Run model: {stata cvlasso, lse}
{err}Warning: lopt is at the limit of the lambda range.
{txt}r; t=12.67 16:45:20

{com}. cvlasso, lse postres ols        
{txt}Estimate lasso with lambda=11.334 (lse).
{res}
{txt}{hline 18}{c TT}{hline 32}
{col 10}Selected {c |}           Lasso   Post-est OLS
{hline 18}{c +}{hline 32}
{space 14}age {c |}{col 21}{res}      0.0276373      0.0330033
{txt}{space 17} {c |}
{space 6}c.age#c.age {c |}{col 21}{res}     -0.0005866     -0.0006806
{txt}{space 17} {c |}
{space 10}ttl_exp {c |}{col 21}{res}      0.0367445      0.0372828
{txt}{space 11}tenure {c |}{col 21}{res}      0.0356436      0.0357082
{txt}{space 17} {c |}
c.tenure#c.tenure {c |}{col 21}{res}     -0.0019053     -0.0019142
{txt}{space 17} {c |}
{space 9}not_smsa {c |}{col 21}{res}     -0.0892079     -0.0899220
{txt}{space 12}south {c |}{col 21}{res}     -0.0597044     -0.0605564
{txt}{hline 18}{c BT}{hline 32}
r; t=0.22 16:45:20

{com}.                 
. local sel = e(selected)
{txt}r; t=0.00 16:45:20

{com}. di "`sel'"
{res}age c.age#c.age ttl_exp tenure c.tenure#c.tenure not_smsa south
{txt}r; t=0.00 16:45:20

{com}. 
. predict double uehat  , ue noi  
{txt}Use e(b) from previous lasso2 estimation (lambda=11.33424642913).
(2,253 missing values generated)
Beta used for predict:
{res}{txt}                     c.age#                           c.tenure#            
           age       c.age     ttl_exp      tenure    c.tenure    not_smsa
y1 {res}   .0330033  -.00068058   .03728278    .0357082  -.00191421  -.08992203

{txt}               
         south
y1 {res} -.06055644
{reset}r; t=0.05 16:45:20

{com}. predict double ehat  , e noi  
{txt}Use e(b) from previous lasso2 estimation (lambda=11.33424642913).
{res}{txt}(2,255 missing values generated)
Beta used for predict:
{res}{txt}                     c.age#                           c.tenure#            
           age       c.age     ttl_exp      tenure    c.tenure    not_smsa
y1 {res}   .0330033  -.00068058   .03728278    .0357082  -.00191421  -.08992203

{txt}               
         south
y1 {res} -.06055644
{reset}r; t=0.07 16:45:21

{com}. predict double xbhat  , xb noi  
{txt}Use e(b) from previous lasso2 estimation (lambda=11.33424642913).
(441 missing values generated)
Beta used for predict:
{res}{txt}                     c.age#                           c.tenure#            
           age       c.age     ttl_exp      tenure    c.tenure    not_smsa
y1 {res}   .0330033  -.00068058   .03728278    .0357082  -.00191421  -.08992203

{txt}               
         south
y1 {res} -.06055644
{reset}r; t=0.05 16:45:21

{com}. predict double xbuhat  , xbu noi  
{txt}Use e(b) from previous lasso2 estimation (lambda=11.33424642913).
{res}{txt}(2,255 missing values generated)
Beta used for predict:
{res}{txt}                     c.age#                           c.tenure#            
           age       c.age     ttl_exp      tenure    c.tenure    not_smsa
y1 {res}   .0330033  -.00068058   .03728278    .0357082  -.00191421  -.08992203

{txt}               
         south
y1 {res} -.06055644
{reset}r; t=0.06 16:45:21

{com}. predict double uhat  , u noi  
{txt}Use e(b) from previous lasso2 estimation (lambda=11.33424642913).
(2,255 missing values generated)
{res}Beta used for predict:
{txt}                     c.age#                           c.tenure#            
           age       c.age     ttl_exp      tenure    c.tenure    not_smsa
y1 {res}   .0330033  -.00068058   .03728278    .0357082  -.00191421  -.08992203

{txt}               
         south
y1 {res} -.06055644
{reset}r; t=0.07 16:45:21

{com}. 
. xtreg ln_w `sel' if e(sample), fe 
{res}
{txt}Fixed-effects (within) regression{col 49}Number of obs{col 67}={col 69}{res}    26,279
{txt}Group variable: {res}idcode{txt}{col 49}Number of groups{col 67}={col 69}{res}     4,686

{txt}R-sq:{col 49}Obs per group:
     within  = {res}0.1786{col 63}{txt}min{col 67}={col 69}{res}         1
{txt}     between = {res}0.3530{col 63}{txt}avg{col 67}={col 69}{res}       5.6
{txt}     overall = {res}0.2662{col 63}{txt}max{col 67}={col 69}{res}        14

{txt}{col 49}F({res}7{txt},{res}21586{txt}){col 67}={col 70}{res}   670.64
{txt}corr(u_i, Xb){col 16}= {res}0.1930{txt}{col 49}Prob > F{col 67}={col 73}{res}0.0000

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}     ln_wage{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}age {c |}{col 14}{res}{space 2} .0330033{col 26}{space 2} .0029458{col 37}{space 1}   11.20{col 46}{space 3}0.000{col 54}{space 4} .0272294{col 67}{space 3} .0387772
{txt}{space 12} {c |}
{space 1}c.age#c.age {c |}{col 14}{res}{space 2}-.0006806{col 26}{space 2} .0000487{col 37}{space 1}  -13.97{col 46}{space 3}0.000{col 54}{space 4}-.0007761{col 67}{space 3}-.0005851
{txt}{space 12} {c |}
{space 5}ttl_exp {c |}{col 14}{res}{space 2} .0372828{col 26}{space 2} .0015061{col 37}{space 1}   24.75{col 46}{space 3}0.000{col 54}{space 4} .0343307{col 67}{space 3} .0402349
{txt}{space 6}tenure {c |}{col 14}{res}{space 2} .0357082{col 26}{space 2} .0017123{col 37}{space 1}   20.85{col 46}{space 3}0.000{col 54}{space 4}  .032352{col 67}{space 3} .0390644
{txt}{space 12} {c |}
{space 4}c.tenure#{c |}
{space 4}c.tenure {c |}{col 14}{res}{space 2}-.0019142{col 26}{space 2} .0001095{col 37}{space 1}  -17.47{col 46}{space 3}0.000{col 54}{space 4}-.0021289{col 67}{space 3}-.0016995
{txt}{space 12} {c |}
{space 4}not_smsa {c |}{col 14}{res}{space 2} -.089922{col 26}{space 2} .0099008{col 37}{space 1}   -9.08{col 46}{space 3}0.000{col 54}{space 4}-.1093284{col 67}{space 3}-.0705157
{txt}{space 7}south {c |}{col 14}{res}{space 2}-.0605564{col 26}{space 2} .0114483{col 37}{space 1}   -5.29{col 46}{space 3}0.000{col 54}{space 4}-.0829959{col 67}{space 3} -.038117
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 1.074643{col 26}{space 2} .0433838{col 37}{space 1}   24.77{col 46}{space 3}0.000{col 54}{space 4} .9896076{col 67}{space 3} 1.159678
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .35740248
     {txt}sigma_e {c |} {res} .29207998
         {txt}rho {c |} {res} .59956903{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}
F test that all u_i=0: F({res}4685{txt}, {res}21586{txt}) = {res}6.23{col 62}{txt}Prob > F = {res}0.0000
{txt}r; t=0.84 16:45:22

{com}. mat bxtreg = e(b)
{txt}r; t=0.00 16:45:22

{com}. 
. predict double uehat_xtreg   , ue  
{txt}(2,253 missing values generated)
r; t=0.04 16:45:22

{com}. predict double ehat_xtreg   , e 
{txt}(2,255 missing values generated)
r; t=0.10 16:45:22

{com}. predict double xbhat_xtreg  , xb
{txt}(441 missing values generated)
r; t=0.01 16:45:22

{com}. predict double xbuhat_xtreg  , xbu
{txt}(2,255 missing values generated)
r; t=0.09 16:45:22

{com}. predict double uhat_xtreg  , u
{txt}(2,255 missing values generated)
r; t=0.10 16:45:22

{com}. 
. assert abs(ehat_xtreg-ehat)<10e-8 | (missing(ehat_xtreg) | missing(ehat))
{txt}r; t=0.00 16:45:22

{com}. assert abs(uehat_xtreg-uehat)<10e-8 | (missing(uehat_xtreg) | missing(uehat)) 
{txt}r; t=0.00 16:45:22

{com}. assert abs(xbhat_xtreg-xbhat)<10e-8 | (missing(xbhat_xtreg) | missing(xbhat))
{txt}r; t=0.00 16:45:22

{com}. assert abs(xbuhat_xtreg-xbuhat)<10e-8 | (missing(xbuhat_xtreg) | missing(xbuhat))
{txt}r; t=0.00 16:45:22

{com}. assert abs(uhat_xtreg-uhat)<10e-8 | (missing(uhat_xtreg) | missing(uhat))
{txt}r; t=0.00 16:45:22

{com}. 
. 
. ********************************************************************************
. *** finish                                                                   ***
. ********************************************************************************
. 
. cap log close
{smcl}
{com}{sf}{ul off}